{
    "id": "../node_modules/ramda/es/prepend.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_concat.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/prepend.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_concat.js"
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/prepend.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _concat2 = _interopRequireDefault(require(\"./internal/_concat.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend =\n/*#__PURE__*/\n(0, _curry.default)(function prepend(el, list) {\n  return (0, _concat2.default)([el], list);\n});\nvar _default = prepend;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 31, "column": 0 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 0 }
                },
                {
                    "name": "prepend",
                    "generated": { "line": 31, "column": 4 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 4 }
                },
                {
                    "generated": { "line": 31, "column": 11 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 11 }
                },
                {
                    "generated": { "line": 32, "column": 0 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 14 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 27 }
                },
                {
                    "generated": { "line": 33, "column": 20 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 35 }
                },
                {
                    "name": "prepend",
                    "generated": { "line": 33, "column": 29 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 44 }
                },
                {
                    "generated": { "line": 33, "column": 36 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 35 }
                },
                {
                    "name": "el",
                    "generated": { "line": 33, "column": 37 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 52 }
                },
                {
                    "generated": { "line": 33, "column": 39 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 35 }
                },
                {
                    "name": "list",
                    "generated": { "line": 33, "column": 41 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 56 }
                },
                {
                    "generated": { "line": 33, "column": 45 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 35 }
                },
                {
                    "generated": { "line": 33, "column": 47 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 62 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 22, "column": 2 }
                },
                {
                    "generated": { "line": 34, "column": 9 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 22, "column": 9 }
                },
                {
                    "generated": { "line": 34, "column": 31 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 22, "column": 17 }
                },
                {
                    "name": "el",
                    "generated": { "line": 34, "column": 32 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 22, "column": 18 }
                },
                {
                    "generated": { "line": 34, "column": 34 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 22, "column": 17 }
                },
                {
                    "generated": { "line": 34, "column": 35 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 22, "column": 9 }
                },
                {
                    "name": "list",
                    "generated": { "line": 34, "column": 37 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 22, "column": 23 }
                },
                {
                    "generated": { "line": 34, "column": 41 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 22, "column": 9 }
                },
                {
                    "generated": { "line": 34, "column": 42 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 22, "column": 2 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 23, "column": 1 }
                },
                {
                    "generated": { "line": 35, "column": 1 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 27 }
                },
                {
                    "generated": { "line": 35, "column": 2 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 21, "column": 0 }
                },
                {
                    "name": "prepend",
                    "generated": { "line": 36, "column": 15 },
                    "source": "../node_modules/ramda/es/prepend.js",
                    "original": { "line": 24, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/prepend.js": "import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "bcf6901186ff4062884722d11dad61b9",
    "cacheData": { "env": {} }
}
