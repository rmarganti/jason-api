{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry1",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/lift.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry1.js"
        },
        {
            "name": "./liftN",
            "loc": { "line": 2, "column": 18 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/lift.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/liftN.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1\"));\n\nvar _liftN = _interopRequireDefault(require(\"./liftN\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift =\n/*#__PURE__*/\n(0, _curry.default)(function lift(fn) {\n  return (0, _liftN.default)(fn.length, fn);\n});\nvar _default = lift;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "lift",
                    "generated": { "line": 36, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 4 }
                },
                {
                    "generated": { "line": 36, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 8 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 11 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 24 }
                },
                {
                    "generated": { "line": 38, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 32 }
                },
                {
                    "name": "lift",
                    "generated": { "line": 38, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 41 }
                },
                {
                    "generated": { "line": 38, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 32 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 38, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 46 }
                },
                {
                    "generated": { "line": 38, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 32 }
                },
                {
                    "generated": { "line": 38, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 50 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "generated": { "line": 39, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 39, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 27, "column": 15 }
                },
                {
                    "generated": { "line": 39, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 27, "column": 17 }
                },
                {
                    "name": "length",
                    "generated": { "line": 39, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 27, "column": 18 }
                },
                {
                    "generated": { "line": 39, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 39, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 27, "column": 26 }
                },
                {
                    "generated": { "line": 39, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "generated": { "line": 39, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 28, "column": 1 }
                },
                {
                    "generated": { "line": 40, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 24 }
                },
                {
                    "generated": { "line": 40, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "lift",
                    "generated": { "line": 41, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lift.js",
                    "original": { "line": 29, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/lift.js": "import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "507910ca99250ddb3d06023e1fac54f1",
    "cacheData": { "env": {} }
}
