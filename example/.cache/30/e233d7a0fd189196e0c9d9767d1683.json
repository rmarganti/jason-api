{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_checkForMethod",
            "loc": { "line": 1, "column": 28 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/slice.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js"
        },
        {
            "name": "./internal/_curry3",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/slice.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry3.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _checkForMethod2 = _interopRequireDefault(require(\"./internal/_checkForMethod\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice =\n/*#__PURE__*/\n(0, _curry.default)(\n/*#__PURE__*/\n(0, _checkForMethod2.default)('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nvar _default = slice;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 0 }
                },
                {
                    "name": "slice",
                    "generated": { "line": 38, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 4 }
                },
                {
                    "generated": { "line": 38, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 9 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 12 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 25 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 47 }
                },
                {
                    "generated": { "line": 42, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 63 }
                },
                {
                    "generated": { "line": 42, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 47 }
                },
                {
                    "generated": { "line": 42, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 72 }
                },
                {
                    "name": "slice",
                    "generated": { "line": 42, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 81 }
                },
                {
                    "generated": { "line": 42, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 72 }
                },
                {
                    "name": "fromIndex",
                    "generated": { "line": 42, "column": 54 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 87 }
                },
                {
                    "generated": { "line": 42, "column": 63 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 72 }
                },
                {
                    "name": "toIndex",
                    "generated": { "line": 42, "column": 65 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 98 }
                },
                {
                    "generated": { "line": 42, "column": 72 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 72 }
                },
                {
                    "name": "list",
                    "generated": { "line": 42, "column": 74 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 107 }
                },
                {
                    "generated": { "line": 42, "column": 78 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 72 }
                },
                {
                    "generated": { "line": 42, "column": 80 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 113 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "name": "Array",
                    "generated": { "line": 43, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "generated": { "line": 43, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 14 }
                },
                {
                    "name": "prototype",
                    "generated": { "line": 43, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 15 }
                },
                {
                    "generated": { "line": 43, "column": 24 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "name": "slice",
                    "generated": { "line": 43, "column": 25 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 25 }
                },
                {
                    "generated": { "line": 43, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "name": "call",
                    "generated": { "line": 43, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 31 }
                },
                {
                    "generated": { "line": 43, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "name": "list",
                    "generated": { "line": 43, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 36 }
                },
                {
                    "generated": { "line": 43, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "name": "fromIndex",
                    "generated": { "line": 43, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 42 }
                },
                {
                    "generated": { "line": 43, "column": 51 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "name": "toIndex",
                    "generated": { "line": 43, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 53 }
                },
                {
                    "generated": { "line": 43, "column": 60 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "generated": { "line": 43, "column": 61 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 30, "column": 1 }
                },
                {
                    "generated": { "line": 44, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 47 }
                },
                {
                    "generated": { "line": 44, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 25 }
                },
                {
                    "generated": { "line": 44, "column": 3 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 28, "column": 0 }
                },
                {
                    "name": "slice",
                    "generated": { "line": 45, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/slice.js",
                    "original": { "line": 31, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/slice.js": "import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "fc7a83b7dd0331e590784cca2ea050c9",
    "cacheData": { "env": {} }
}
