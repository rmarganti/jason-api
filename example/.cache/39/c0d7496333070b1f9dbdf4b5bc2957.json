{
    "id": "../node_modules/ts-json-api/dist/ApiResponse.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "ramda",
            "loc": { "line": 3, "column": 22 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/dist/ApiResponse.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/index.js"
        },
        {
            "name": "./ApiError",
            "loc": { "line": 4, "column": 25 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/dist/ApiResponse.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/dist/ApiError.js"
        },
        {
            "name": "./utils",
            "loc": { "line": 5, "column": 22 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/dist/ApiResponse.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/dist/utils.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ramda_1 = require(\"ramda\");\nvar ApiError_1 = require(\"./ApiError\");\nvar utils_1 = require(\"./utils\");\nvar ApiResponse = /** @class */ (function () {\n    function ApiResponse(response) {\n        this.response = response;\n        Object.freeze(this);\n    }\n    ApiResponse.of = function (response) {\n        return new ApiResponse(response);\n    };\n    ApiResponse.prototype.map = function (f) {\n        return ApiResponse.of(f(this.response));\n    };\n    /**\n     * Retrieve the data from the response\n     * as an ApiResourceObject or array of ApiResourceObjects\n     */\n    ApiResponse.prototype.data = function () {\n        return utils_1.convertToApiResourceObjectOrObjects(this.response.data);\n    };\n    /**\n     * Retrieve all errors as an array of ApiErrors\n     */\n    ApiResponse.prototype.errors = function () {\n        var errors = this.response.errors || [];\n        return errors.map(ApiError_1.default.of);\n    };\n    /**\n     * Does the JsonApi response have an error?\n     */\n    ApiResponse.prototype.hasError = function () {\n        return this.errors().length > 0;\n    };\n    /**\n     * Retrieves all includes an array of ApiResourceObjects\n     */\n    ApiResponse.prototype.included = function () {\n        return utils_1.convertToApiResourceObjectOrObjects(this.response.included || []);\n    };\n    /**\n     * Expand a partial ApiResourceObject to the version in the includes. This is\n     * useful for retrieving the full data from a relationships.\n     *\n     * @param entity An partial ApiResourceObject with only `id` and `type` fields\n     */\n    ApiResponse.prototype.expandInclude = function (entity) {\n        if (this.included().length === 0) {\n            return undefined;\n        }\n        return this.included().find(function (include) {\n            return (include.id() === entity.id() && include.type() === entity.type());\n        });\n    };\n    ApiResponse.prototype.meta = function (name) {\n        var metaFinder = name\n            ? ramda_1.path(['meta', name])\n            : ramda_1.prop('meta');\n        return metaFinder(this.response);\n    };\n    /**\n     * Map to the original JSON object\n     */\n    ApiResponse.prototype.toJSON = function () {\n        return ramda_1.clone(this.response);\n    };\n    return ApiResponse;\n}());\nexports.default = ApiResponse;\n"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 1, "column": 0 },
                    "generated": { "line": 1, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 2, "column": 0 },
                    "generated": { "line": 2, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 3, "column": 0 },
                    "generated": { "line": 3, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 4, "column": 0 },
                    "generated": { "line": 4, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 5, "column": 0 },
                    "generated": { "line": 5, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 6, "column": 0 },
                    "generated": { "line": 6, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 7, "column": 0 },
                    "generated": { "line": 7, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 8, "column": 0 },
                    "generated": { "line": 8, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 9, "column": 0 },
                    "generated": { "line": 9, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 10, "column": 0 },
                    "generated": { "line": 10, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 11, "column": 0 },
                    "generated": { "line": 11, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 12, "column": 0 },
                    "generated": { "line": 12, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 13, "column": 0 },
                    "generated": { "line": 13, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 14, "column": 0 },
                    "generated": { "line": 14, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 15, "column": 0 },
                    "generated": { "line": 15, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 16, "column": 0 },
                    "generated": { "line": 16, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 17, "column": 0 },
                    "generated": { "line": 17, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 18, "column": 0 },
                    "generated": { "line": 18, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 19, "column": 0 },
                    "generated": { "line": 19, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 20, "column": 0 },
                    "generated": { "line": 20, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 21, "column": 0 },
                    "generated": { "line": 21, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 22, "column": 0 },
                    "generated": { "line": 22, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 23, "column": 0 },
                    "generated": { "line": 23, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 24, "column": 0 },
                    "generated": { "line": 24, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 25, "column": 0 },
                    "generated": { "line": 25, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 26, "column": 0 },
                    "generated": { "line": 26, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 27, "column": 0 },
                    "generated": { "line": 27, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 28, "column": 0 },
                    "generated": { "line": 28, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 29, "column": 0 },
                    "generated": { "line": 29, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 30, "column": 0 },
                    "generated": { "line": 30, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 31, "column": 0 },
                    "generated": { "line": 31, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 32, "column": 0 },
                    "generated": { "line": 32, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 33, "column": 0 },
                    "generated": { "line": 33, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 34, "column": 0 },
                    "generated": { "line": 34, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 35, "column": 0 },
                    "generated": { "line": 35, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 36, "column": 0 },
                    "generated": { "line": 36, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 37, "column": 0 },
                    "generated": { "line": 37, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 38, "column": 0 },
                    "generated": { "line": 38, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 39, "column": 0 },
                    "generated": { "line": 39, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 40, "column": 0 },
                    "generated": { "line": 40, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 41, "column": 0 },
                    "generated": { "line": 41, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 42, "column": 0 },
                    "generated": { "line": 42, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 43, "column": 0 },
                    "generated": { "line": 43, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 44, "column": 0 },
                    "generated": { "line": 44, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 45, "column": 0 },
                    "generated": { "line": 45, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 46, "column": 0 },
                    "generated": { "line": 46, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 47, "column": 0 },
                    "generated": { "line": 47, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 48, "column": 0 },
                    "generated": { "line": 48, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 49, "column": 0 },
                    "generated": { "line": 49, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 50, "column": 0 },
                    "generated": { "line": 50, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 51, "column": 0 },
                    "generated": { "line": 51, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 52, "column": 0 },
                    "generated": { "line": 52, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 53, "column": 0 },
                    "generated": { "line": 53, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 54, "column": 0 },
                    "generated": { "line": 54, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 55, "column": 0 },
                    "generated": { "line": 55, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 56, "column": 0 },
                    "generated": { "line": 56, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 57, "column": 0 },
                    "generated": { "line": 57, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 58, "column": 0 },
                    "generated": { "line": 58, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 59, "column": 0 },
                    "generated": { "line": 59, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 60, "column": 0 },
                    "generated": { "line": 60, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 61, "column": 0 },
                    "generated": { "line": 61, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 62, "column": 0 },
                    "generated": { "line": 62, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 63, "column": 0 },
                    "generated": { "line": 63, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 64, "column": 0 },
                    "generated": { "line": 64, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 65, "column": 0 },
                    "generated": { "line": 65, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 66, "column": 0 },
                    "generated": { "line": 66, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 67, "column": 0 },
                    "generated": { "line": 67, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 68, "column": 0 },
                    "generated": { "line": 68, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 69, "column": 0 },
                    "generated": { "line": 69, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 70, "column": 0 },
                    "generated": { "line": 70, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 71, "column": 0 },
                    "generated": { "line": 71, "column": 0 }
                },
                {
                    "source": "../node_modules/ts-json-api/dist/ApiResponse.js",
                    "original": { "line": 72, "column": 0 },
                    "generated": { "line": 72, "column": 0 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/dist/ApiResponse.js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ramda_1 = require(\"ramda\");\nvar ApiError_1 = require(\"./ApiError\");\nvar utils_1 = require(\"./utils\");\nvar ApiResponse = /** @class */ (function () {\n    function ApiResponse(response) {\n        this.response = response;\n        Object.freeze(this);\n    }\n    ApiResponse.of = function (response) {\n        return new ApiResponse(response);\n    };\n    ApiResponse.prototype.map = function (f) {\n        return ApiResponse.of(f(this.response));\n    };\n    /**\n     * Retrieve the data from the response\n     * as an ApiResourceObject or array of ApiResourceObjects\n     */\n    ApiResponse.prototype.data = function () {\n        return utils_1.convertToApiResourceObjectOrObjects(this.response.data);\n    };\n    /**\n     * Retrieve all errors as an array of ApiErrors\n     */\n    ApiResponse.prototype.errors = function () {\n        var errors = this.response.errors || [];\n        return errors.map(ApiError_1.default.of);\n    };\n    /**\n     * Does the JsonApi response have an error?\n     */\n    ApiResponse.prototype.hasError = function () {\n        return this.errors().length > 0;\n    };\n    /**\n     * Retrieves all includes an array of ApiResourceObjects\n     */\n    ApiResponse.prototype.included = function () {\n        return utils_1.convertToApiResourceObjectOrObjects(this.response.included || []);\n    };\n    /**\n     * Expand a partial ApiResourceObject to the version in the includes. This is\n     * useful for retrieving the full data from a relationships.\n     *\n     * @param entity An partial ApiResourceObject with only `id` and `type` fields\n     */\n    ApiResponse.prototype.expandInclude = function (entity) {\n        if (this.included().length === 0) {\n            return undefined;\n        }\n        return this.included().find(function (include) {\n            return (include.id() === entity.id() && include.type() === entity.type());\n        });\n    };\n    ApiResponse.prototype.meta = function (name) {\n        var metaFinder = name\n            ? ramda_1.path(['meta', name])\n            : ramda_1.prop('meta');\n        return metaFinder(this.response);\n    };\n    /**\n     * Map to the original JSON object\n     */\n    ApiResponse.prototype.toJSON = function () {\n        return ramda_1.clone(this.response);\n    };\n    return ApiResponse;\n}());\nexports.default = ApiResponse;\n"
            },
            "lineCount": 72
        }
    },
    "error": null,
    "hash": "bbbf80d2707ae422e632399fb6ed772e",
    "cacheData": { "env": {} }
}
