{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry1",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry1.js"
        },
        {
            "name": "./assocPath",
            "loc": { "line": 2, "column": 22 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/assocPath.js"
        },
        {
            "name": "./lens",
            "loc": { "line": 3, "column": 17 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/lens.js"
        },
        {
            "name": "./path",
            "loc": { "line": 4, "column": 17 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/path.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1\"));\n\nvar _assocPath = _interopRequireDefault(require(\"./assocPath\"));\n\nvar _lens = _interopRequireDefault(require(\"./lens\"));\n\nvar _path = _interopRequireDefault(require(\"./path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath =\n/*#__PURE__*/\n(0, _curry.default)(function lensPath(p) {\n  return (0, _lens.default)((0, _path.default)(p), (0, _assocPath.default)(p));\n});\nvar _default = lensPath;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 0 }
                },
                {
                    "name": "lensPath",
                    "generated": { "line": 42, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 4 }
                },
                {
                    "generated": { "line": 42, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 12 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 15 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 28 }
                },
                {
                    "generated": { "line": 44, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 36 }
                },
                {
                    "name": "lensPath",
                    "generated": { "line": 44, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 45 }
                },
                {
                    "generated": { "line": 44, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 36 }
                },
                {
                    "name": "p",
                    "generated": { "line": 44, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 54 }
                },
                {
                    "generated": { "line": 44, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 36 }
                },
                {
                    "generated": { "line": 44, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 57 }
                },
                {
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "generated": { "line": 45, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "generated": { "line": 45, "column": 28 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 31, "column": 14 }
                },
                {
                    "name": "p",
                    "generated": { "line": 45, "column": 47 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 31, "column": 19 }
                },
                {
                    "generated": { "line": 45, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 31, "column": 14 }
                },
                {
                    "generated": { "line": 45, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "generated": { "line": 45, "column": 51 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 31, "column": 23 }
                },
                {
                    "name": "p",
                    "generated": { "line": 45, "column": 75 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 31, "column": 33 }
                },
                {
                    "generated": { "line": 45, "column": 76 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 31, "column": 23 }
                },
                {
                    "generated": { "line": 45, "column": 77 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "generated": { "line": 45, "column": 78 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 32, "column": 1 }
                },
                {
                    "generated": { "line": 46, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 28 }
                },
                {
                    "generated": { "line": 46, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 30, "column": 0 }
                },
                {
                    "name": "lensPath",
                    "generated": { "line": 47, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js",
                    "original": { "line": 33, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/lensPath.js": "import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "bcfb3d6fbb8c5342aec2667be90102e9",
    "cacheData": { "env": {} }
}
