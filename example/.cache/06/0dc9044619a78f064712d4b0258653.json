{
    "id": "../node_modules/ramda/es/until.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry3.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/until.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry3.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until =\n/*#__PURE__*/\n(0, _curry.default)(function until(pred, fn, init) {\n  var val = init;\n\n  while (!pred(val)) {\n    val = fn(val);\n  }\n\n  return val;\n});\nvar _default = until;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 31, "column": 0 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 0 }
                },
                {
                    "name": "until",
                    "generated": { "line": 31, "column": 4 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 4 }
                },
                {
                    "generated": { "line": 31, "column": 9 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 9 }
                },
                {
                    "generated": { "line": 32, "column": 0 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 12 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 25 }
                },
                {
                    "generated": { "line": 33, "column": 20 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 33 }
                },
                {
                    "name": "until",
                    "generated": { "line": 33, "column": 29 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 42 }
                },
                {
                    "generated": { "line": 33, "column": 34 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 33 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 33, "column": 35 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 48 }
                },
                {
                    "generated": { "line": 33, "column": 39 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 33 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 33, "column": 41 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 54 }
                },
                {
                    "generated": { "line": 33, "column": 43 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 33 }
                },
                {
                    "name": "init",
                    "generated": { "line": 33, "column": 45 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 58 }
                },
                {
                    "generated": { "line": 33, "column": 49 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 33 }
                },
                {
                    "generated": { "line": 33, "column": 51 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 64 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 23, "column": 2 }
                },
                {
                    "name": "val",
                    "generated": { "line": 34, "column": 6 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 23, "column": 6 }
                },
                {
                    "generated": { "line": 34, "column": 9 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 23, "column": 9 }
                },
                {
                    "name": "init",
                    "generated": { "line": 34, "column": 12 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 23, "column": 12 }
                },
                {
                    "generated": { "line": 34, "column": 16 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 23, "column": 2 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "generated": { "line": 36, "column": 9 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 36, "column": 10 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 24, "column": 10 }
                },
                {
                    "generated": { "line": 36, "column": 14 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 24, "column": 14 }
                },
                {
                    "name": "val",
                    "generated": { "line": 36, "column": 15 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 24, "column": 15 }
                },
                {
                    "generated": { "line": 36, "column": 18 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 24, "column": 14 }
                },
                {
                    "generated": { "line": 36, "column": 19 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "generated": { "line": 36, "column": 21 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 24, "column": 21 }
                },
                {
                    "name": "val",
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 25, "column": 4 }
                },
                {
                    "name": "val",
                    "generated": { "line": 37, "column": 4 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 25, "column": 4 }
                },
                {
                    "generated": { "line": 37, "column": 7 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 25, "column": 7 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 37, "column": 10 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 25, "column": 10 }
                },
                {
                    "generated": { "line": 37, "column": 12 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 25, "column": 12 }
                },
                {
                    "name": "val",
                    "generated": { "line": 37, "column": 13 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 25, "column": 13 }
                },
                {
                    "generated": { "line": 37, "column": 16 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 25, "column": 12 }
                },
                {
                    "generated": { "line": 37, "column": 17 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 25, "column": 4 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 26, "column": 3 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "name": "val",
                    "generated": { "line": 40, "column": 9 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "generated": { "line": 40, "column": 12 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 28, "column": 1 }
                },
                {
                    "generated": { "line": 41, "column": 1 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 25 }
                },
                {
                    "generated": { "line": 41, "column": 2 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 22, "column": 0 }
                },
                {
                    "name": "until",
                    "generated": { "line": 42, "column": 15 },
                    "source": "../node_modules/ramda/es/until.js",
                    "original": { "line": 29, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/until.js": "import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "dd2da0d0f93f85b2f9ff674fc80b8851",
    "cacheData": { "env": {} }
}
