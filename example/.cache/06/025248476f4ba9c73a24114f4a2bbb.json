{
    "id": "../node_modules/ramda/es/pair.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/pair.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair =\n/*#__PURE__*/\n(0, _curry.default)(function pair(fst, snd) {\n  return [fst, snd];\n});\nvar _default = pair;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 28, "column": 0 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 0 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 28, "column": 4 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 4 }
                },
                {
                    "generated": { "line": 28, "column": 8 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 8 }
                },
                {
                    "generated": { "line": 29, "column": 0 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 11 }
                },
                {
                    "generated": { "line": 30, "column": 0 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 24 }
                },
                {
                    "generated": { "line": 30, "column": 20 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 32 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 30, "column": 29 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 41 }
                },
                {
                    "generated": { "line": 30, "column": 33 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 32 }
                },
                {
                    "name": "fst",
                    "generated": { "line": 30, "column": 34 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 46 }
                },
                {
                    "generated": { "line": 30, "column": 37 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 32 }
                },
                {
                    "name": "snd",
                    "generated": { "line": 30, "column": 39 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 51 }
                },
                {
                    "generated": { "line": 30, "column": 42 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 32 }
                },
                {
                    "generated": { "line": 30, "column": 44 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 56 }
                },
                {
                    "generated": { "line": 31, "column": 0 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 20, "column": 2 }
                },
                {
                    "generated": { "line": 31, "column": 9 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 20, "column": 9 }
                },
                {
                    "name": "fst",
                    "generated": { "line": 31, "column": 10 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 20, "column": 10 }
                },
                {
                    "generated": { "line": 31, "column": 13 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 20, "column": 9 }
                },
                {
                    "name": "snd",
                    "generated": { "line": 31, "column": 15 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 20, "column": 15 }
                },
                {
                    "generated": { "line": 31, "column": 18 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 20, "column": 9 }
                },
                {
                    "generated": { "line": 31, "column": 19 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 20, "column": 2 }
                },
                {
                    "generated": { "line": 32, "column": 0 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 21, "column": 1 }
                },
                {
                    "generated": { "line": 32, "column": 1 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 24 }
                },
                {
                    "generated": { "line": 32, "column": 2 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 19, "column": 0 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 33, "column": 15 },
                    "source": "../node_modules/ramda/es/pair.js",
                    "original": { "line": 22, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/pair.js": "import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "e6c2be6b13c20ee0fcad19c570a065d7",
    "cacheData": { "env": {} }
}
