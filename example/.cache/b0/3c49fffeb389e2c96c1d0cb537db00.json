{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_arity",
            "loc": { "line": 1, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_arity.js"
        },
        {
            "name": "./internal/_pipe",
            "loc": { "line": 2, "column": 18 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_pipe.js"
        },
        {
            "name": "./reduce",
            "loc": { "line": 3, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/reduce.js"
        },
        {
            "name": "./tail",
            "loc": { "line": 4, "column": 17 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/tail.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pipe;\n\nvar _arity2 = _interopRequireDefault(require(\"./internal/_arity\"));\n\nvar _pipe2 = _interopRequireDefault(require(\"./internal/_pipe\"));\n\nvar _reduce = _interopRequireDefault(require(\"./reduce\"));\n\nvar _tail = _interopRequireDefault(require(\"./tail\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nfunction pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return (0, _arity2.default)(arguments[0].length, (0, _reduce.default)(_pipe2.default, arguments[0], (0, _tail.default)(arguments)));\n}"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 29, "column": 15 }
                },
                {
                    "name": "pipe",
                    "generated": { "line": 41, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 29, "column": 24 }
                },
                {
                    "generated": { "line": 41, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 29, "column": 15 }
                },
                {
                    "generated": { "line": 41, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 29, "column": 31 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 42, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 30, "column": 6 }
                },
                {
                    "generated": { "line": 42, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 30, "column": 15 }
                },
                {
                    "name": "length",
                    "generated": { "line": 42, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 30, "column": 16 }
                },
                {
                    "generated": { "line": 42, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 30, "column": 6 }
                },
                {
                    "generated": { "line": 42, "column": 27 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 30, "column": 27 }
                },
                {
                    "generated": { "line": 42, "column": 28 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "generated": { "line": 42, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 30, "column": 30 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 31, "column": 4 }
                },
                {
                    "generated": { "line": 43, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 31, "column": 10 }
                },
                {
                    "name": "Error",
                    "generated": { "line": 43, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 31, "column": 14 }
                },
                {
                    "generated": { "line": 43, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 31, "column": 10 }
                },
                {
                    "generated": { "line": 43, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 31, "column": 20 }
                },
                {
                    "generated": { "line": 43, "column": 57 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 31, "column": 10 }
                },
                {
                    "generated": { "line": 43, "column": 58 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 31, "column": 4 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 32, "column": 3 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 2 }
                },
                {
                    "generated": { "line": 46, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 9 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 46, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 16 }
                },
                {
                    "generated": { "line": 46, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 25 }
                },
                {
                    "generated": { "line": 46, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 26 }
                },
                {
                    "generated": { "line": 46, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 25 }
                },
                {
                    "generated": { "line": 46, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 16 }
                },
                {
                    "name": "length",
                    "generated": { "line": 46, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 29 }
                },
                {
                    "generated": { "line": 46, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 9 }
                },
                {
                    "generated": { "line": 46, "column": 51 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 37 }
                },
                {
                    "name": "_pipe",
                    "generated": { "line": 46, "column": 72 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 44 }
                },
                {
                    "generated": { "line": 46, "column": 86 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 37 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 46, "column": 88 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 51 }
                },
                {
                    "generated": { "line": 46, "column": 97 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 60 }
                },
                {
                    "generated": { "line": 46, "column": 98 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 61 }
                },
                {
                    "generated": { "line": 46, "column": 99 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 60 }
                },
                {
                    "generated": { "line": 46, "column": 100 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 37 }
                },
                {
                    "generated": { "line": 46, "column": 102 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 65 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 46, "column": 121 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 70 }
                },
                {
                    "generated": { "line": 46, "column": 130 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 65 }
                },
                {
                    "generated": { "line": 46, "column": 131 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 37 }
                },
                {
                    "generated": { "line": 46, "column": 132 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 9 }
                },
                {
                    "generated": { "line": 46, "column": 133 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 33, "column": 2 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js",
                    "original": { "line": 34, "column": 1 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/pipe.js": "import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "32b9f831d779a02118bea088cd021f4c",
    "cacheData": { "env": {} }
}
