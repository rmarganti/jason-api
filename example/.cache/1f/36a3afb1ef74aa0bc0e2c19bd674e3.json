{
    "id": "../node_modules/ramda/es/take.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/take.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./internal/_dispatchable.js",
            "loc": { "line": 2, "column": 26 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/take.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_dispatchable.js"
        },
        {
            "name": "./internal/_xtake.js",
            "loc": { "line": 3, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/take.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_xtake.js"
        },
        {
            "name": "./slice.js",
            "loc": { "line": 4, "column": 18 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/take.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/slice.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _dispatchable2 = _interopRequireDefault(require(\"./internal/_dispatchable.js\"));\n\nvar _xtake2 = _interopRequireDefault(require(\"./internal/_xtake.js\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take =\n/*#__PURE__*/\n(0, _curry.default)(\n/*#__PURE__*/\n(0, _dispatchable2.default)(['take'], _xtake2.default, function take(n, xs) {\n  return (0, _slice.default)(0, n < 0 ? Infinity : n, xs);\n}));\nvar _default = take;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 61, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 0 }
                },
                {
                    "name": "take",
                    "generated": { "line": 61, "column": 4 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 4 }
                },
                {
                    "generated": { "line": 61, "column": 8 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 8 }
                },
                {
                    "generated": { "line": 62, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 11 }
                },
                {
                    "generated": { "line": 63, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 24 }
                },
                {
                    "generated": { "line": 64, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 33 }
                },
                {
                    "generated": { "line": 65, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 46 }
                },
                {
                    "generated": { "line": 65, "column": 28 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 60 }
                },
                {
                    "generated": { "line": 65, "column": 29 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 61 }
                },
                {
                    "generated": { "line": 65, "column": 35 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 60 }
                },
                {
                    "generated": { "line": 65, "column": 36 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 46 }
                },
                {
                    "name": "_xtake",
                    "generated": { "line": 65, "column": 38 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 70 }
                },
                {
                    "generated": { "line": 65, "column": 53 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 46 }
                },
                {
                    "generated": { "line": 65, "column": 55 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 78 }
                },
                {
                    "name": "take",
                    "generated": { "line": 65, "column": 64 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 87 }
                },
                {
                    "generated": { "line": 65, "column": 68 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 78 }
                },
                {
                    "name": "n",
                    "generated": { "line": 65, "column": 69 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 92 }
                },
                {
                    "generated": { "line": 65, "column": 70 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 78 }
                },
                {
                    "name": "xs",
                    "generated": { "line": 65, "column": 72 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 95 }
                },
                {
                    "generated": { "line": 65, "column": 74 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 78 }
                },
                {
                    "generated": { "line": 65, "column": 76 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 99 }
                },
                {
                    "generated": { "line": 66, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 2 }
                },
                {
                    "generated": { "line": 66, "column": 9 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 9 }
                },
                {
                    "generated": { "line": 66, "column": 29 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 15 }
                },
                {
                    "generated": { "line": 66, "column": 30 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 9 }
                },
                {
                    "name": "n",
                    "generated": { "line": 66, "column": 32 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 18 }
                },
                {
                    "generated": { "line": 66, "column": 33 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 19 }
                },
                {
                    "generated": { "line": 66, "column": 36 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 22 }
                },
                {
                    "generated": { "line": 66, "column": 37 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 18 }
                },
                {
                    "name": "Infinity",
                    "generated": { "line": 66, "column": 40 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 26 }
                },
                {
                    "generated": { "line": 66, "column": 48 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 18 }
                },
                {
                    "name": "n",
                    "generated": { "line": 66, "column": 51 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 37 }
                },
                {
                    "generated": { "line": 66, "column": 52 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 9 }
                },
                {
                    "name": "xs",
                    "generated": { "line": 66, "column": 54 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 40 }
                },
                {
                    "generated": { "line": 66, "column": 56 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 9 }
                },
                {
                    "generated": { "line": 66, "column": 57 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 50, "column": 2 }
                },
                {
                    "generated": { "line": 67, "column": 0 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 51, "column": 1 }
                },
                {
                    "generated": { "line": 67, "column": 1 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 46 }
                },
                {
                    "generated": { "line": 67, "column": 2 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 24 }
                },
                {
                    "generated": { "line": 67, "column": 3 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 49, "column": 0 }
                },
                {
                    "name": "take",
                    "generated": { "line": 68, "column": 15 },
                    "source": "../node_modules/ramda/es/take.js",
                    "original": { "line": 52, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/take.js": "import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtake from './internal/_xtake.js';\nimport slice from './slice.js';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "bdc9cb230de9a6c73dd50e98133905cc",
    "cacheData": { "env": {} }
}
