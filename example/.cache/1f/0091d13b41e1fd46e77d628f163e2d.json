{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_clone",
            "loc": { "line": 1, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/clone.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_clone.js"
        },
        {
            "name": "./internal/_curry1",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/clone.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry1.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _clone2 = _interopRequireDefault(require(\"./internal/_clone\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone =\n/*#__PURE__*/\n(0, _curry.default)(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : (0, _clone2.default)(value, [], [], true);\n});\nvar _default = clone;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 0 }
                },
                {
                    "name": "clone",
                    "generated": { "line": 35, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 4 }
                },
                {
                    "generated": { "line": 35, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 9 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 12 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 25 }
                },
                {
                    "generated": { "line": 37, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 33 }
                },
                {
                    "name": "clone",
                    "generated": { "line": 37, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 42 }
                },
                {
                    "generated": { "line": 37, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 33 }
                },
                {
                    "name": "value",
                    "generated": { "line": 37, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 48 }
                },
                {
                    "generated": { "line": 37, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 33 }
                },
                {
                    "generated": { "line": 37, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 55 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "name": "value",
                    "generated": { "line": 38, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "generated": { "line": 38, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 14 }
                },
                {
                    "generated": { "line": 38, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 18 }
                },
                {
                    "generated": { "line": 38, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "generated": { "line": 38, "column": 26 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 26 }
                },
                {
                    "name": "value",
                    "generated": { "line": 38, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 33 }
                },
                {
                    "generated": { "line": 38, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 38 }
                },
                {
                    "name": "clone",
                    "generated": { "line": 38, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 39 }
                },
                {
                    "generated": { "line": 38, "column": 44 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 26 }
                },
                {
                    "generated": { "line": 38, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 49 }
                },
                {
                    "generated": { "line": 38, "column": 59 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "name": "value",
                    "generated": { "line": 38, "column": 62 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 62 }
                },
                {
                    "generated": { "line": 38, "column": 67 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 67 }
                },
                {
                    "name": "clone",
                    "generated": { "line": 38, "column": 68 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 68 }
                },
                {
                    "generated": { "line": 38, "column": 73 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 62 }
                },
                {
                    "generated": { "line": 38, "column": 75 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "generated": { "line": 38, "column": 78 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 78 }
                },
                {
                    "name": "value",
                    "generated": { "line": 38, "column": 99 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 85 }
                },
                {
                    "generated": { "line": 38, "column": 104 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 78 }
                },
                {
                    "generated": { "line": 38, "column": 106 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 92 }
                },
                {
                    "generated": { "line": 38, "column": 108 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 78 }
                },
                {
                    "generated": { "line": 38, "column": 110 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 96 }
                },
                {
                    "generated": { "line": 38, "column": 112 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 78 }
                },
                {
                    "generated": { "line": 38, "column": 114 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 100 }
                },
                {
                    "generated": { "line": 38, "column": 118 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 78 }
                },
                {
                    "generated": { "line": 38, "column": 119 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 27, "column": 1 }
                },
                {
                    "generated": { "line": 39, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 25 }
                },
                {
                    "generated": { "line": 39, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 25, "column": 0 }
                },
                {
                    "name": "clone",
                    "generated": { "line": 40, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/clone.js",
                    "original": { "line": 28, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/clone.js": "import _clone from './internal/_clone';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "6f4671745ce93000f5baddd71538b983",
    "cacheData": { "env": {} }
}
