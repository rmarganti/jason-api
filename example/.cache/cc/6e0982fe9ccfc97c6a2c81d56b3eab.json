{
    "id": "../node_modules/ramda/es/F.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\n\nvar _default = F;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 23, "column": 0 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 18, "column": 0 }
                },
                {
                    "name": "F",
                    "generated": { "line": 23, "column": 4 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 18, "column": 4 }
                },
                {
                    "generated": { "line": 23, "column": 5 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 18, "column": 5 }
                },
                {
                    "generated": { "line": 23, "column": 8 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 18, "column": 8 }
                },
                {
                    "generated": { "line": 23, "column": 20 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 18, "column": 20 }
                },
                {
                    "generated": { "line": 24, "column": 0 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 19, "column": 2 }
                },
                {
                    "generated": { "line": 24, "column": 9 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 19, "column": 9 }
                },
                {
                    "generated": { "line": 24, "column": 14 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 19, "column": 2 }
                },
                {
                    "generated": { "line": 25, "column": 0 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 20, "column": 1 }
                },
                {
                    "generated": { "line": 25, "column": 1 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 18, "column": 0 }
                },
                {
                    "name": "F",
                    "generated": { "line": 27, "column": 15 },
                    "source": "../node_modules/ramda/es/F.js",
                    "original": { "line": 21, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/F.js": "\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\nexport default F;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "8d67de525d04afff26a6746b812d5d07",
    "cacheData": { "env": {} }
}
