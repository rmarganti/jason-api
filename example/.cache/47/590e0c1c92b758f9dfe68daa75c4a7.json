{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_contains",
            "loc": { "line": 1, "column": 22 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/without.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_contains.js"
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/without.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./flip",
            "loc": { "line": 3, "column": 17 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/without.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/flip.js"
        },
        {
            "name": "./reject",
            "loc": { "line": 4, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/without.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/reject.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _contains2 = _interopRequireDefault(require(\"./internal/_contains\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nvar _flip = _interopRequireDefault(require(\"./flip\"));\n\nvar _reject = _interopRequireDefault(require(\"./reject\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without =\n/*#__PURE__*/\n(0, _curry.default)(function (xs, list) {\n  return (0, _reject.default)((0, _flip.default)(_contains2.default)(xs), list);\n});\nvar _default = without;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 0 }
                },
                {
                    "name": "without",
                    "generated": { "line": 37, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 4 }
                },
                {
                    "generated": { "line": 37, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 11 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 14 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 27 }
                },
                {
                    "generated": { "line": 39, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 35 }
                },
                {
                    "name": "xs",
                    "generated": { "line": 39, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 45 }
                },
                {
                    "generated": { "line": 39, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 35 }
                },
                {
                    "name": "list",
                    "generated": { "line": 39, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 49 }
                },
                {
                    "generated": { "line": 39, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 35 }
                },
                {
                    "generated": { "line": 39, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 55 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "generated": { "line": 40, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "generated": { "line": 40, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 26, "column": 16 }
                },
                {
                    "name": "_contains",
                    "generated": { "line": 40, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 26, "column": 21 }
                },
                {
                    "generated": { "line": 40, "column": 67 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 26, "column": 16 }
                },
                {
                    "name": "xs",
                    "generated": { "line": 40, "column": 69 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 26, "column": 32 }
                },
                {
                    "generated": { "line": 40, "column": 71 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 26, "column": 16 }
                },
                {
                    "generated": { "line": 40, "column": 72 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "name": "list",
                    "generated": { "line": 40, "column": 74 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 26, "column": 37 }
                },
                {
                    "generated": { "line": 40, "column": 78 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "generated": { "line": 40, "column": 79 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 27, "column": 1 }
                },
                {
                    "generated": { "line": 41, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 27 }
                },
                {
                    "generated": { "line": 41, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 25, "column": 0 }
                },
                {
                    "name": "without",
                    "generated": { "line": 42, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/without.js",
                    "original": { "line": 28, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/without.js": "import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport flip from './flip';\nimport reject from './reject';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\nexport default without;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "13946f8143d2b8588b2df2743a8fff7f",
    "cacheData": { "env": {} }
}
