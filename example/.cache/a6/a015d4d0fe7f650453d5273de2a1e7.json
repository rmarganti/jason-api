{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry3",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/remove.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry3.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove =\n/*#__PURE__*/\n(0, _curry.default)(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nvar _default = remove;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 31, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 0 }
                },
                {
                    "name": "remove",
                    "generated": { "line": 31, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 4 }
                },
                {
                    "generated": { "line": 31, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 10 }
                },
                {
                    "generated": { "line": 32, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 13 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 26 }
                },
                {
                    "generated": { "line": 33, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 34 }
                },
                {
                    "name": "remove",
                    "generated": { "line": 33, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 43 }
                },
                {
                    "generated": { "line": 33, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 34 }
                },
                {
                    "name": "start",
                    "generated": { "line": 33, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 50 }
                },
                {
                    "generated": { "line": 33, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 34 }
                },
                {
                    "name": "count",
                    "generated": { "line": 33, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 57 }
                },
                {
                    "generated": { "line": 33, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 34 }
                },
                {
                    "name": "list",
                    "generated": { "line": 33, "column": 50 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 64 }
                },
                {
                    "generated": { "line": 33, "column": 54 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 34 }
                },
                {
                    "generated": { "line": 33, "column": 56 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 70 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 2 }
                },
                {
                    "name": "result",
                    "generated": { "line": 34, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 6 }
                },
                {
                    "generated": { "line": 34, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 12 }
                },
                {
                    "name": "Array",
                    "generated": { "line": 34, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 15 }
                },
                {
                    "generated": { "line": 34, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 20 }
                },
                {
                    "name": "prototype",
                    "generated": { "line": 34, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 21 }
                },
                {
                    "generated": { "line": 34, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 15 }
                },
                {
                    "name": "slice",
                    "generated": { "line": 34, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 31 }
                },
                {
                    "generated": { "line": 34, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 15 }
                },
                {
                    "name": "call",
                    "generated": { "line": 34, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 37 }
                },
                {
                    "generated": { "line": 34, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 15 }
                },
                {
                    "name": "list",
                    "generated": { "line": 34, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 42 }
                },
                {
                    "generated": { "line": 34, "column": 46 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 15 }
                },
                {
                    "generated": { "line": 34, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 48 }
                },
                {
                    "generated": { "line": 34, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 15 }
                },
                {
                    "generated": { "line": 34, "column": 50 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 23, "column": 2 }
                },
                {
                    "name": "result",
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "name": "result",
                    "generated": { "line": 35, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "generated": { "line": 35, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 24, "column": 8 }
                },
                {
                    "name": "splice",
                    "generated": { "line": 35, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "generated": { "line": 35, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "name": "start",
                    "generated": { "line": 35, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 24, "column": 16 }
                },
                {
                    "generated": { "line": 35, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "name": "count",
                    "generated": { "line": 35, "column": 23 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 24, "column": 23 }
                },
                {
                    "generated": { "line": 35, "column": 28 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 25, "column": 2 }
                },
                {
                    "name": "result",
                    "generated": { "line": 36, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 25, "column": 9 }
                },
                {
                    "generated": { "line": 36, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 25, "column": 2 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 26, "column": 1 }
                },
                {
                    "generated": { "line": 37, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 26 }
                },
                {
                    "generated": { "line": 37, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 22, "column": 0 }
                },
                {
                    "name": "remove",
                    "generated": { "line": 38, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/remove.js",
                    "original": { "line": 27, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/remove.js": "import _curry3 from './internal/_curry3';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "6b36350af209c0a651d9b5ffd2eb6f6f",
    "cacheData": { "env": {} }
}
