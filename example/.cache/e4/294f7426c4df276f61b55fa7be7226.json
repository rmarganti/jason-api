{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./lift",
            "loc": { "line": 1, "column": 17 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/complement.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/lift.js"
        },
        {
            "name": "./not",
            "loc": { "line": 2, "column": 16 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/complement.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/not.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lift = _interopRequireDefault(require(\"./lift\"));\n\nvar _not = _interopRequireDefault(require(\"./not\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement =\n/*#__PURE__*/\n(0, _lift.default)(_not.default);\nvar _default = complement;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "complement",
                    "generated": { "line": 36, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 26, "column": 4 }
                },
                {
                    "generated": { "line": 36, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 26, "column": 14 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 26, "column": 17 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 26, "column": 30 }
                },
                {
                    "name": "not",
                    "generated": { "line": 38, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 26, "column": 35 }
                },
                {
                    "generated": { "line": 38, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 26, "column": 30 }
                },
                {
                    "generated": { "line": 38, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "complement",
                    "generated": { "line": 39, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/complement.js",
                    "original": { "line": 27, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/complement.js": "import lift from './lift';\nimport not from './not';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "0cd2511baeeb5342abf8f23c6544b175",
    "cacheData": { "env": {} }
}
