{
    "id": "../node_modules/ramda/es/internal/_isArray.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nvar _default = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};\n\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "name": "Array",
                    "generated": { "line": 20, "column": 15 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 13, "column": 15 }
                },
                {
                    "generated": { "line": 20, "column": 20 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 13, "column": 20 }
                },
                {
                    "name": "isArray",
                    "generated": { "line": 20, "column": 21 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 13, "column": 21 }
                },
                {
                    "generated": { "line": 20, "column": 28 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 13, "column": 15 }
                },
                {
                    "generated": { "line": 20, "column": 32 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 13, "column": 32 }
                },
                {
                    "name": "_isArray",
                    "generated": { "line": 20, "column": 41 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 13, "column": 41 }
                },
                {
                    "generated": { "line": 20, "column": 49 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 13, "column": 32 }
                },
                {
                    "name": "val",
                    "generated": { "line": 20, "column": 50 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 13, "column": 50 }
                },
                {
                    "generated": { "line": 20, "column": 53 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 13, "column": 32 }
                },
                {
                    "generated": { "line": 20, "column": 55 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 13, "column": 55 }
                },
                {
                    "generated": { "line": 21, "column": 0 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 2 }
                },
                {
                    "name": "val",
                    "generated": { "line": 21, "column": 9 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 9 }
                },
                {
                    "generated": { "line": 21, "column": 12 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 12 }
                },
                {
                    "generated": { "line": 21, "column": 16 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 16 }
                },
                {
                    "generated": { "line": 21, "column": 20 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 9 }
                },
                {
                    "name": "val",
                    "generated": { "line": 21, "column": 24 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 24 }
                },
                {
                    "generated": { "line": 21, "column": 27 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 27 }
                },
                {
                    "name": "length",
                    "generated": { "line": 21, "column": 28 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 28 }
                },
                {
                    "generated": { "line": 21, "column": 34 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 24 }
                },
                {
                    "generated": { "line": 21, "column": 38 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 38 }
                },
                {
                    "generated": { "line": 21, "column": 39 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 9 }
                },
                {
                    "name": "Object",
                    "generated": { "line": 21, "column": 43 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 43 }
                },
                {
                    "generated": { "line": 21, "column": 49 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 49 }
                },
                {
                    "name": "prototype",
                    "generated": { "line": 21, "column": 50 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 50 }
                },
                {
                    "generated": { "line": 21, "column": 59 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 43 }
                },
                {
                    "name": "toString",
                    "generated": { "line": 21, "column": 60 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 60 }
                },
                {
                    "generated": { "line": 21, "column": 68 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 43 }
                },
                {
                    "name": "call",
                    "generated": { "line": 21, "column": 69 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 69 }
                },
                {
                    "generated": { "line": 21, "column": 73 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 43 }
                },
                {
                    "name": "val",
                    "generated": { "line": 21, "column": 74 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 74 }
                },
                {
                    "generated": { "line": 21, "column": 77 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 43 }
                },
                {
                    "generated": { "line": 21, "column": 83 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 83 }
                },
                {
                    "generated": { "line": 21, "column": 99 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 14, "column": 2 }
                },
                {
                    "generated": { "line": 22, "column": 0 },
                    "source": "../node_modules/ramda/es/internal/_isArray.js",
                    "original": { "line": 15, "column": 1 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/internal/_isArray.js": "/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "54a074a1f0e8ac79389baa7b53f8c98e",
    "cacheData": { "env": {} }
}
