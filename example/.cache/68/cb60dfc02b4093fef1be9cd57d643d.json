{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_arity",
            "loc": { "line": 1, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_arity.js"
        },
        {
            "name": "./internal/_pipeP",
            "loc": { "line": 2, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_pipeP.js"
        },
        {
            "name": "./reduce",
            "loc": { "line": 3, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/reduce.js"
        },
        {
            "name": "./tail",
            "loc": { "line": 4, "column": 17 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/tail.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pipeP;\n\nvar _arity2 = _interopRequireDefault(require(\"./internal/_arity\"));\n\nvar _pipeP2 = _interopRequireDefault(require(\"./internal/_pipeP\"));\n\nvar _reduce = _interopRequireDefault(require(\"./reduce\"));\n\nvar _tail = _interopRequireDefault(require(\"./tail\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nfunction pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n\n  return (0, _arity2.default)(arguments[0].length, (0, _reduce.default)(_pipeP2.default, arguments[0], (0, _tail.default)(arguments)));\n}"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 24, "column": 15 }
                },
                {
                    "name": "pipeP",
                    "generated": { "line": 36, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 24, "column": 24 }
                },
                {
                    "generated": { "line": 36, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 24, "column": 15 }
                },
                {
                    "generated": { "line": 36, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 24, "column": 32 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 25, "column": 2 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 37, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 25, "column": 6 }
                },
                {
                    "generated": { "line": 37, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 25, "column": 15 }
                },
                {
                    "name": "length",
                    "generated": { "line": 37, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 25, "column": 16 }
                },
                {
                    "generated": { "line": 37, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 25, "column": 6 }
                },
                {
                    "generated": { "line": 37, "column": 27 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 25, "column": 27 }
                },
                {
                    "generated": { "line": 37, "column": 28 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 25, "column": 2 }
                },
                {
                    "generated": { "line": 37, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 25, "column": 30 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 26, "column": 4 }
                },
                {
                    "generated": { "line": 38, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 26, "column": 10 }
                },
                {
                    "name": "Error",
                    "generated": { "line": 38, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 26, "column": 14 }
                },
                {
                    "generated": { "line": 38, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 26, "column": 10 }
                },
                {
                    "generated": { "line": 38, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 26, "column": 20 }
                },
                {
                    "generated": { "line": 38, "column": 58 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 26, "column": 10 }
                },
                {
                    "generated": { "line": 38, "column": 59 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 26, "column": 4 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 27, "column": 3 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 2 }
                },
                {
                    "generated": { "line": 41, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 9 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 41, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 16 }
                },
                {
                    "generated": { "line": 41, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 25 }
                },
                {
                    "generated": { "line": 41, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 26 }
                },
                {
                    "generated": { "line": 41, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 25 }
                },
                {
                    "generated": { "line": 41, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 16 }
                },
                {
                    "name": "length",
                    "generated": { "line": 41, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 29 }
                },
                {
                    "generated": { "line": 41, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 9 }
                },
                {
                    "generated": { "line": 41, "column": 51 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 37 }
                },
                {
                    "name": "_pipeP",
                    "generated": { "line": 41, "column": 72 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 44 }
                },
                {
                    "generated": { "line": 41, "column": 87 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 37 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 41, "column": 89 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 52 }
                },
                {
                    "generated": { "line": 41, "column": 98 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 61 }
                },
                {
                    "generated": { "line": 41, "column": 99 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 62 }
                },
                {
                    "generated": { "line": 41, "column": 100 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 61 }
                },
                {
                    "generated": { "line": 41, "column": 101 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 37 }
                },
                {
                    "generated": { "line": 41, "column": 103 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 66 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 41, "column": 122 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 71 }
                },
                {
                    "generated": { "line": 41, "column": 131 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 66 }
                },
                {
                    "generated": { "line": 41, "column": 132 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 37 }
                },
                {
                    "generated": { "line": 41, "column": 133 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 9 }
                },
                {
                    "generated": { "line": 41, "column": 134 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 28, "column": 2 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js",
                    "original": { "line": 29, "column": 1 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/pipeP.js": "import _arity from './internal/_arity';\nimport _pipeP from './internal/_pipeP';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "b8780ab6eb1ec0c205e4195413c73509",
    "cacheData": { "env": {} }
}
