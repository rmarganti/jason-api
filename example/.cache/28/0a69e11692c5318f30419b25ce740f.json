{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./multiply",
            "loc": { "line": 1, "column": 21 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/product.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/multiply.js"
        },
        {
            "name": "./reduce",
            "loc": { "line": 2, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/product.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/reduce.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _multiply = _interopRequireDefault(require(\"./multiply\"));\n\nvar _reduce = _interopRequireDefault(require(\"./reduce\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product =\n/*#__PURE__*/\n(0, _reduce.default)(_multiply.default, 1);\nvar _default = product;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 29, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 19, "column": 0 }
                },
                {
                    "name": "product",
                    "generated": { "line": 29, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 19, "column": 4 }
                },
                {
                    "generated": { "line": 29, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 19, "column": 11 }
                },
                {
                    "generated": { "line": 30, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 19, "column": 14 }
                },
                {
                    "generated": { "line": 31, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 19, "column": 27 }
                },
                {
                    "name": "multiply",
                    "generated": { "line": 31, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 19, "column": 34 }
                },
                {
                    "generated": { "line": 31, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 19, "column": 27 }
                },
                {
                    "generated": { "line": 31, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 19, "column": 44 }
                },
                {
                    "generated": { "line": 31, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 19, "column": 27 }
                },
                {
                    "generated": { "line": 31, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 19, "column": 0 }
                },
                {
                    "name": "product",
                    "generated": { "line": 32, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/product.js",
                    "original": { "line": 20, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/product.js": "import multiply from './multiply';\nimport reduce from './reduce';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "4fe07c29897a75c6a12639e82c094b7f",
    "cacheData": { "env": {} }
}
