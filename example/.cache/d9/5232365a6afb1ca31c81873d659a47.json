{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./always",
            "loc": { "line": 2, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/always.js"
        },
        {
            "name": "./times",
            "loc": { "line": 3, "column": 18 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/times.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nvar _always = _interopRequireDefault(require(\"./always\"));\n\nvar _times = _interopRequireDefault(require(\"./times\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat =\n/*#__PURE__*/\n(0, _curry.default)(function repeat(value, n) {\n  return (0, _times.default)((0, _always.default)(value), n);\n});\nvar _default = repeat;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 16, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 5, "column": 0 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 0 }
                },
                {
                    "name": "repeat",
                    "generated": { "line": 39, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 4 }
                },
                {
                    "generated": { "line": 39, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 10 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 13 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 26 }
                },
                {
                    "generated": { "line": 41, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "name": "repeat",
                    "generated": { "line": 41, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 43 }
                },
                {
                    "generated": { "line": 41, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "name": "value",
                    "generated": { "line": 41, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 50 }
                },
                {
                    "generated": { "line": 41, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "name": "n",
                    "generated": { "line": 41, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 57 }
                },
                {
                    "generated": { "line": 41, "column": 44 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "generated": { "line": 41, "column": 46 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 60 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "generated": { "line": 42, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "generated": { "line": 42, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 29, "column": 15 }
                },
                {
                    "name": "value",
                    "generated": { "line": 42, "column": 50 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 29, "column": 22 }
                },
                {
                    "generated": { "line": 42, "column": 55 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 29, "column": 15 }
                },
                {
                    "generated": { "line": 42, "column": 56 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "name": "n",
                    "generated": { "line": 42, "column": 58 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 29, "column": 30 }
                },
                {
                    "generated": { "line": 42, "column": 59 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "generated": { "line": 42, "column": 60 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 30, "column": 1 }
                },
                {
                    "generated": { "line": 43, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 26 }
                },
                {
                    "generated": { "line": 43, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 28, "column": 0 }
                },
                {
                    "name": "repeat",
                    "generated": { "line": 44, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js",
                    "original": { "line": 31, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/repeat.js": "import _curry2 from './internal/_curry2';\nimport always from './always';\nimport times from './times';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "f4eee30f74f9f6b672707522ad6b384a",
    "cacheData": { "env": {} }
}
