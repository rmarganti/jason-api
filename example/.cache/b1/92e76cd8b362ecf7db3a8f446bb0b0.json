{
    "id": "../node_modules/ramda/es/once.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_arity.js",
            "loc": { "line": 1, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/once.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_arity.js"
        },
        {
            "name": "./internal/_curry1.js",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/once.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry1.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _arity2 = _interopRequireDefault(require(\"./internal/_arity.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once =\n/*#__PURE__*/\n(0, _curry.default)(function once(fn) {\n  var called = false;\n  var result;\n  return (0, _arity2.default)(fn.length, function () {\n    if (called) {\n      return result;\n    }\n\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nvar _default = once;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 0 }
                },
                {
                    "name": "once",
                    "generated": { "line": 33, "column": 4 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 4 }
                },
                {
                    "generated": { "line": 33, "column": 8 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 8 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 11 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 24 }
                },
                {
                    "generated": { "line": 35, "column": 20 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 32 }
                },
                {
                    "name": "once",
                    "generated": { "line": 35, "column": 29 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 41 }
                },
                {
                    "generated": { "line": 35, "column": 33 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 32 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 35, "column": 34 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 46 }
                },
                {
                    "generated": { "line": 35, "column": 36 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 32 }
                },
                {
                    "generated": { "line": 35, "column": 38 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 50 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "name": "called",
                    "generated": { "line": 36, "column": 6 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 24, "column": 6 }
                },
                {
                    "generated": { "line": 36, "column": 12 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 24, "column": 12 }
                },
                {
                    "generated": { "line": 36, "column": 15 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 24, "column": 15 }
                },
                {
                    "generated": { "line": 36, "column": 20 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 25, "column": 2 }
                },
                {
                    "name": "result",
                    "generated": { "line": 37, "column": 6 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 25, "column": 6 }
                },
                {
                    "generated": { "line": 37, "column": 12 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 25, "column": 2 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "generated": { "line": 38, "column": 9 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 38, "column": 30 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 26, "column": 16 }
                },
                {
                    "generated": { "line": 38, "column": 32 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 26, "column": 18 }
                },
                {
                    "name": "length",
                    "generated": { "line": 38, "column": 33 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 26, "column": 19 }
                },
                {
                    "generated": { "line": 38, "column": 39 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "generated": { "line": 38, "column": 41 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 26, "column": 27 }
                },
                {
                    "generated": { "line": 38, "column": 53 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 26, "column": 39 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 27, "column": 4 }
                },
                {
                    "name": "called",
                    "generated": { "line": 39, "column": 8 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 27, "column": 8 }
                },
                {
                    "generated": { "line": 39, "column": 14 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 27, "column": 4 }
                },
                {
                    "generated": { "line": 39, "column": 16 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 27, "column": 16 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 28, "column": 6 }
                },
                {
                    "name": "result",
                    "generated": { "line": 40, "column": 13 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 28, "column": 13 }
                },
                {
                    "generated": { "line": 40, "column": 19 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 28, "column": 6 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 29, "column": 5 }
                },
                {
                    "name": "called",
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 30, "column": 4 }
                },
                {
                    "name": "called",
                    "generated": { "line": 43, "column": 4 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 30, "column": 4 }
                },
                {
                    "generated": { "line": 43, "column": 10 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 30, "column": 10 }
                },
                {
                    "generated": { "line": 43, "column": 13 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 30, "column": 13 }
                },
                {
                    "generated": { "line": 43, "column": 17 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 30, "column": 4 }
                },
                {
                    "name": "result",
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 4 }
                },
                {
                    "name": "result",
                    "generated": { "line": 44, "column": 4 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 4 }
                },
                {
                    "generated": { "line": 44, "column": 10 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 10 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 44, "column": 13 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 13 }
                },
                {
                    "generated": { "line": 44, "column": 15 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 15 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 44, "column": 16 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 16 }
                },
                {
                    "generated": { "line": 44, "column": 21 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 13 }
                },
                {
                    "generated": { "line": 44, "column": 22 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 22 }
                },
                {
                    "generated": { "line": 44, "column": 26 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 13 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 44, "column": 28 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 28 }
                },
                {
                    "generated": { "line": 44, "column": 37 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 13 }
                },
                {
                    "generated": { "line": 44, "column": 38 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 31, "column": 4 }
                },
                {
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "name": "result",
                    "generated": { "line": 45, "column": 11 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 32, "column": 11 }
                },
                {
                    "generated": { "line": 45, "column": 17 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 33, "column": 3 }
                },
                {
                    "generated": { "line": 46, "column": 3 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "generated": { "line": 46, "column": 4 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 34, "column": 1 }
                },
                {
                    "generated": { "line": 47, "column": 1 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 24 }
                },
                {
                    "generated": { "line": 47, "column": 2 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 23, "column": 0 }
                },
                {
                    "name": "once",
                    "generated": { "line": 48, "column": 15 },
                    "source": "../node_modules/ramda/es/once.js",
                    "original": { "line": 35, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/once.js": "import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "6f6f83c25fce802ff76d5a062ae029b2",
    "cacheData": { "env": {} }
}
