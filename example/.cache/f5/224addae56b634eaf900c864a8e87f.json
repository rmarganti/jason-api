{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./length",
            "loc": { "line": 2, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/length.js"
        },
        {
            "name": "./slice",
            "loc": { "line": 3, "column": 18 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/slice.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nvar _length = _interopRequireDefault(require(\"./length\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt =\n/*#__PURE__*/\n(0, _curry.default)(function splitAt(index, array) {\n  return [(0, _slice.default)(0, index, array), (0, _slice.default)(index, (0, _length.default)(array), array)];\n});\nvar _default = splitAt;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 16, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 5, "column": 0 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 0 }
                },
                {
                    "name": "splitAt",
                    "generated": { "line": 34, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 4 }
                },
                {
                    "generated": { "line": 34, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 11 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 14 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 27 }
                },
                {
                    "generated": { "line": 36, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 35 }
                },
                {
                    "name": "splitAt",
                    "generated": { "line": 36, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 44 }
                },
                {
                    "generated": { "line": 36, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 35 }
                },
                {
                    "name": "index",
                    "generated": { "line": 36, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 52 }
                },
                {
                    "generated": { "line": 36, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 35 }
                },
                {
                    "name": "array",
                    "generated": { "line": 36, "column": 44 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 59 }
                },
                {
                    "generated": { "line": 36, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 35 }
                },
                {
                    "generated": { "line": 36, "column": 51 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 66 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "generated": { "line": 37, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "generated": { "line": 37, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 10 }
                },
                {
                    "generated": { "line": 37, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 16 }
                },
                {
                    "generated": { "line": 37, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 10 }
                },
                {
                    "name": "index",
                    "generated": { "line": 37, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 19 }
                },
                {
                    "generated": { "line": 37, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 10 }
                },
                {
                    "name": "array",
                    "generated": { "line": 37, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 26 }
                },
                {
                    "generated": { "line": 37, "column": 45 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 10 }
                },
                {
                    "generated": { "line": 37, "column": 46 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "generated": { "line": 37, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 34 }
                },
                {
                    "name": "index",
                    "generated": { "line": 37, "column": 68 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 40 }
                },
                {
                    "generated": { "line": 37, "column": 73 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 34 }
                },
                {
                    "generated": { "line": 37, "column": 75 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 47 }
                },
                {
                    "name": "array",
                    "generated": { "line": 37, "column": 96 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 54 }
                },
                {
                    "generated": { "line": 37, "column": 101 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 47 }
                },
                {
                    "generated": { "line": 37, "column": 102 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 34 }
                },
                {
                    "name": "array",
                    "generated": { "line": 37, "column": 104 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 62 }
                },
                {
                    "generated": { "line": 37, "column": 109 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 34 }
                },
                {
                    "generated": { "line": 37, "column": 110 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "generated": { "line": 37, "column": 111 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 25, "column": 1 }
                },
                {
                    "generated": { "line": 38, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 27 }
                },
                {
                    "generated": { "line": 38, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 23, "column": 0 }
                },
                {
                    "name": "splitAt",
                    "generated": { "line": 39, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js",
                    "original": { "line": 26, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/splitAt.js": "import _curry2 from './internal/_curry2';\nimport length from './length';\nimport slice from './slice';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "c57372729eec23a55b490b29d7676b1d",
    "cacheData": { "env": {} }
}
