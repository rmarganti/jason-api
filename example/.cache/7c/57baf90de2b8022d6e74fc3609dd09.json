{
    "id": "../node_modules/ramda/es/unfold.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/unfold.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold =\n/*#__PURE__*/\n(0, _curry.default)(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n\n  return result;\n});\nvar _default = unfold;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 0 }
                },
                {
                    "name": "unfold",
                    "generated": { "line": 37, "column": 4 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 4 }
                },
                {
                    "generated": { "line": 37, "column": 10 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 10 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 13 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 26 }
                },
                {
                    "generated": { "line": 39, "column": 20 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "name": "unfold",
                    "generated": { "line": 39, "column": 29 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 43 }
                },
                {
                    "generated": { "line": 39, "column": 35 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 39, "column": 36 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 50 }
                },
                {
                    "generated": { "line": 39, "column": 38 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "name": "seed",
                    "generated": { "line": 39, "column": 40 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 54 }
                },
                {
                    "generated": { "line": 39, "column": 44 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "generated": { "line": 39, "column": 46 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 60 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 40, "column": 6 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 29, "column": 6 }
                },
                {
                    "generated": { "line": 40, "column": 10 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 29, "column": 10 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 40, "column": 13 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 29, "column": 13 }
                },
                {
                    "generated": { "line": 40, "column": 15 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 29, "column": 15 }
                },
                {
                    "name": "seed",
                    "generated": { "line": 40, "column": 16 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 29, "column": 16 }
                },
                {
                    "generated": { "line": 40, "column": 20 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 29, "column": 15 }
                },
                {
                    "generated": { "line": 40, "column": 21 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "name": "result",
                    "generated": { "line": 41, "column": 6 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 30, "column": 6 }
                },
                {
                    "generated": { "line": 41, "column": 12 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 30, "column": 12 }
                },
                {
                    "generated": { "line": 41, "column": 15 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 30, "column": 15 }
                },
                {
                    "generated": { "line": 41, "column": 17 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 43, "column": 9 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "generated": { "line": 43, "column": 13 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 31, "column": 13 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 43, "column": 17 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 31, "column": 17 }
                },
                {
                    "generated": { "line": 43, "column": 21 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 31, "column": 21 }
                },
                {
                    "name": "length",
                    "generated": { "line": 43, "column": 22 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 31, "column": 22 }
                },
                {
                    "generated": { "line": 43, "column": 28 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "generated": { "line": 43, "column": 30 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 31, "column": 30 }
                },
                {
                    "name": "result",
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "name": "result",
                    "generated": { "line": 44, "column": 4 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "generated": { "line": 44, "column": 10 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 10 }
                },
                {
                    "name": "result",
                    "generated": { "line": 44, "column": 11 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 11 }
                },
                {
                    "generated": { "line": 44, "column": 17 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 17 }
                },
                {
                    "name": "length",
                    "generated": { "line": 44, "column": 18 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 18 }
                },
                {
                    "generated": { "line": 44, "column": 24 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 10 }
                },
                {
                    "generated": { "line": 44, "column": 25 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 44, "column": 28 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 28 }
                },
                {
                    "generated": { "line": 44, "column": 32 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 32 }
                },
                {
                    "generated": { "line": 44, "column": 33 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 33 }
                },
                {
                    "generated": { "line": 44, "column": 34 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 32 }
                },
                {
                    "generated": { "line": 44, "column": 35 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 45, "column": 4 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "generated": { "line": 45, "column": 8 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 33, "column": 8 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 45, "column": 11 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 33, "column": 11 }
                },
                {
                    "generated": { "line": 45, "column": 13 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 33, "column": 13 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 45, "column": 14 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 33, "column": 14 }
                },
                {
                    "generated": { "line": 45, "column": 18 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 33, "column": 18 }
                },
                {
                    "generated": { "line": 45, "column": 19 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 33, "column": 19 }
                },
                {
                    "generated": { "line": 45, "column": 20 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 33, "column": 18 }
                },
                {
                    "generated": { "line": 45, "column": 21 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 33, "column": 13 }
                },
                {
                    "generated": { "line": 45, "column": 22 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 34, "column": 3 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 35, "column": 2 }
                },
                {
                    "name": "result",
                    "generated": { "line": 48, "column": 9 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 35, "column": 9 }
                },
                {
                    "generated": { "line": 48, "column": 15 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 35, "column": 2 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 36, "column": 1 }
                },
                {
                    "generated": { "line": 49, "column": 1 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 26 }
                },
                {
                    "generated": { "line": 49, "column": 2 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 28, "column": 0 }
                },
                {
                    "name": "unfold",
                    "generated": { "line": 50, "column": 15 },
                    "source": "../node_modules/ramda/es/unfold.js",
                    "original": { "line": 37, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/unfold.js": "import _curry2 from './internal/_curry2.js';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "41ed078908d4409381e89ce54fdfbea7",
    "cacheData": { "env": {} }
}
