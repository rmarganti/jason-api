{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_concat",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_concat.js"
        },
        {
            "name": "./internal/_createPartialApplicator",
            "loc": { "line": 2, "column": 37 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_createPartialApplicator.js"
        },
        {
            "name": "./flip",
            "loc": { "line": 3, "column": 17 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/flip.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _concat2 = _interopRequireDefault(require(\"./internal/_concat\"));\n\nvar _createPartialApplicator2 = _interopRequireDefault(require(\"./internal/_createPartialApplicator\"));\n\nvar _flip = _interopRequireDefault(require(\"./flip\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight =\n/*#__PURE__*/\n(0, _createPartialApplicator2.default)(\n/*#__PURE__*/\n(0, _flip.default)(_concat2.default));\nvar _default = partialRight;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 16, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 5, "column": 0 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 29, "column": 0 }
                },
                {
                    "name": "partialRight",
                    "generated": { "line": 40, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 29, "column": 4 }
                },
                {
                    "generated": { "line": 40, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 29, "column": 16 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 29, "column": 19 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 29, "column": 32 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 29, "column": 58 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 29, "column": 71 }
                },
                {
                    "name": "_concat",
                    "generated": { "line": 44, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 29, "column": 76 }
                },
                {
                    "generated": { "line": 44, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 29, "column": 71 }
                },
                {
                    "generated": { "line": 44, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 29, "column": 32 }
                },
                {
                    "generated": { "line": 44, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 29, "column": 0 }
                },
                {
                    "name": "partialRight",
                    "generated": { "line": 45, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js",
                    "original": { "line": 30, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/partialRight.js": "import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\nimport flip from './flip';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "88c0b55d5cdfdf4aec21681d00f5a706",
    "cacheData": { "env": {} }
}
