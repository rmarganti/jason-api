{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry3",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry3.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith =\n/*#__PURE__*/\n(0, _curry.default)(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n\n  return rv;\n});\nvar _default = zipWith;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 0 }
                },
                {
                    "name": "zipWith",
                    "generated": { "line": 36, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 4 }
                },
                {
                    "generated": { "line": 36, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 11 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 14 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 27 }
                },
                {
                    "generated": { "line": 38, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 35 }
                },
                {
                    "name": "zipWith",
                    "generated": { "line": 38, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 44 }
                },
                {
                    "generated": { "line": 38, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 35 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 38, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 52 }
                },
                {
                    "generated": { "line": 38, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 35 }
                },
                {
                    "name": "a",
                    "generated": { "line": 38, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 56 }
                },
                {
                    "generated": { "line": 38, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 35 }
                },
                {
                    "name": "b",
                    "generated": { "line": 38, "column": 44 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 59 }
                },
                {
                    "generated": { "line": 38, "column": 45 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 35 }
                },
                {
                    "generated": { "line": 38, "column": 47 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 62 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 28, "column": 2 }
                },
                {
                    "name": "rv",
                    "generated": { "line": 39, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 28, "column": 6 }
                },
                {
                    "generated": { "line": 39, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 28, "column": 8 }
                },
                {
                    "generated": { "line": 39, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 28, "column": 11 }
                },
                {
                    "generated": { "line": 39, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 28, "column": 2 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 40, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 29, "column": 6 }
                },
                {
                    "generated": { "line": 40, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "generated": { "line": 40, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 29, "column": 12 }
                },
                {
                    "generated": { "line": 40, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "name": "len",
                    "generated": { "line": 41, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 6 }
                },
                {
                    "generated": { "line": 41, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 9 }
                },
                {
                    "name": "Math",
                    "generated": { "line": 41, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 12 }
                },
                {
                    "generated": { "line": 41, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 16 }
                },
                {
                    "name": "min",
                    "generated": { "line": 41, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 17 }
                },
                {
                    "generated": { "line": 41, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 12 }
                },
                {
                    "name": "a",
                    "generated": { "line": 41, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 21 }
                },
                {
                    "generated": { "line": 41, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 22 }
                },
                {
                    "name": "length",
                    "generated": { "line": 41, "column": 23 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 23 }
                },
                {
                    "generated": { "line": 41, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 12 }
                },
                {
                    "name": "b",
                    "generated": { "line": 41, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 31 }
                },
                {
                    "generated": { "line": 41, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 32 }
                },
                {
                    "name": "length",
                    "generated": { "line": 41, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 33 }
                },
                {
                    "generated": { "line": 41, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 12 }
                },
                {
                    "generated": { "line": 41, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 43, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "generated": { "line": 43, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 31, "column": 12 }
                },
                {
                    "name": "len",
                    "generated": { "line": 43, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 31, "column": 15 }
                },
                {
                    "generated": { "line": 43, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "generated": { "line": 43, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 31, "column": 20 }
                },
                {
                    "name": "rv",
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "name": "rv",
                    "generated": { "line": 44, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "generated": { "line": 44, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 6 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 44, "column": 7 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 7 }
                },
                {
                    "generated": { "line": 44, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 6 }
                },
                {
                    "generated": { "line": 44, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 44, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 14 }
                },
                {
                    "generated": { "line": 44, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 16 }
                },
                {
                    "name": "a",
                    "generated": { "line": 44, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 17 }
                },
                {
                    "generated": { "line": 44, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 18 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 44, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 19 }
                },
                {
                    "generated": { "line": 44, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 18 }
                },
                {
                    "generated": { "line": 44, "column": 23 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 16 }
                },
                {
                    "name": "b",
                    "generated": { "line": 44, "column": 25 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 25 }
                },
                {
                    "generated": { "line": 44, "column": 26 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 26 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 44, "column": 27 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 27 }
                },
                {
                    "generated": { "line": 44, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 26 }
                },
                {
                    "generated": { "line": 44, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 16 }
                },
                {
                    "generated": { "line": 44, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 45, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "generated": { "line": 45, "column": 7 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 33, "column": 7 }
                },
                {
                    "generated": { "line": 45, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 33, "column": 11 }
                },
                {
                    "generated": { "line": 45, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 34, "column": 3 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 35, "column": 2 }
                },
                {
                    "name": "rv",
                    "generated": { "line": 48, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 35, "column": 9 }
                },
                {
                    "generated": { "line": 48, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 35, "column": 2 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 36, "column": 1 }
                },
                {
                    "generated": { "line": 49, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 27 }
                },
                {
                    "generated": { "line": 49, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 27, "column": 0 }
                },
                {
                    "name": "zipWith",
                    "generated": { "line": 50, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js",
                    "original": { "line": 37, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/zipWith.js": "import _curry3 from './internal/_curry3';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "ebc21ebffd12dcc6a90e691460d0f734",
    "cacheData": { "env": {} }
}
