{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./internal/_isInteger",
            "loc": { "line": 2, "column": 23 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_isInteger.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nvar _isInteger2 = _interopRequireDefault(require(\"./internal/_isInteger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod =\n/*#__PURE__*/\n(0, _curry.default)(function mathMod(m, p) {\n  if (!(0, _isInteger2.default)(m)) {\n    return NaN;\n  }\n\n  if (!(0, _isInteger2.default)(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});\nvar _default = mathMod;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 0 }
                },
                {
                    "name": "mathMod",
                    "generated": { "line": 47, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 4 }
                },
                {
                    "generated": { "line": 47, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 11 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 14 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 27 }
                },
                {
                    "generated": { "line": 49, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 35 }
                },
                {
                    "name": "mathMod",
                    "generated": { "line": 49, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 44 }
                },
                {
                    "generated": { "line": 49, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 35 }
                },
                {
                    "name": "m",
                    "generated": { "line": 49, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 52 }
                },
                {
                    "generated": { "line": 49, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 35 }
                },
                {
                    "name": "p",
                    "generated": { "line": 49, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 55 }
                },
                {
                    "generated": { "line": 49, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 35 }
                },
                {
                    "generated": { "line": 49, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 58 }
                },
                {
                    "generated": { "line": 50, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 38, "column": 2 }
                },
                {
                    "generated": { "line": 50, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 38, "column": 6 }
                },
                {
                    "generated": { "line": 50, "column": 7 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 38, "column": 7 }
                },
                {
                    "name": "m",
                    "generated": { "line": 50, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 38, "column": 18 }
                },
                {
                    "generated": { "line": 50, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 38, "column": 7 }
                },
                {
                    "generated": { "line": 50, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 38, "column": 2 }
                },
                {
                    "generated": { "line": 50, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 38, "column": 22 }
                },
                {
                    "generated": { "line": 51, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 39, "column": 4 }
                },
                {
                    "name": "NaN",
                    "generated": { "line": 51, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 39, "column": 11 }
                },
                {
                    "generated": { "line": 51, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 39, "column": 4 }
                },
                {
                    "generated": { "line": 52, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 40, "column": 3 }
                },
                {
                    "generated": { "line": 54, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 41, "column": 2 }
                },
                {
                    "generated": { "line": 54, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 41, "column": 6 }
                },
                {
                    "generated": { "line": 54, "column": 7 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 41, "column": 7 }
                },
                {
                    "name": "p",
                    "generated": { "line": 54, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 41, "column": 18 }
                },
                {
                    "generated": { "line": 54, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 41, "column": 7 }
                },
                {
                    "generated": { "line": 54, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 41, "column": 6 }
                },
                {
                    "name": "p",
                    "generated": { "line": 54, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 41, "column": 24 }
                },
                {
                    "generated": { "line": 54, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 41, "column": 25 }
                },
                {
                    "generated": { "line": 54, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 41, "column": 28 }
                },
                {
                    "generated": { "line": 54, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 41, "column": 2 }
                },
                {
                    "generated": { "line": 54, "column": 45 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 41, "column": 31 }
                },
                {
                    "generated": { "line": 55, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 42, "column": 4 }
                },
                {
                    "name": "NaN",
                    "generated": { "line": 55, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 42, "column": 11 }
                },
                {
                    "generated": { "line": 55, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 42, "column": 4 }
                },
                {
                    "generated": { "line": 56, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 43, "column": 3 }
                },
                {
                    "generated": { "line": 58, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 44, "column": 2 }
                },
                {
                    "generated": { "line": 58, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 44, "column": 9 }
                },
                {
                    "name": "m",
                    "generated": { "line": 58, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 44, "column": 10 }
                },
                {
                    "generated": { "line": 58, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 44, "column": 11 }
                },
                {
                    "name": "p",
                    "generated": { "line": 58, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 44, "column": 14 }
                },
                {
                    "generated": { "line": 58, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 44, "column": 10 }
                },
                {
                    "name": "p",
                    "generated": { "line": 58, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 44, "column": 18 }
                },
                {
                    "generated": { "line": 58, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 44, "column": 9 }
                },
                {
                    "name": "p",
                    "generated": { "line": 58, "column": 23 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 44, "column": 23 }
                },
                {
                    "generated": { "line": 58, "column": 24 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 44, "column": 2 }
                },
                {
                    "generated": { "line": 59, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 45, "column": 1 }
                },
                {
                    "generated": { "line": 59, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 27 }
                },
                {
                    "generated": { "line": 59, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 37, "column": 0 }
                },
                {
                    "name": "mathMod",
                    "generated": { "line": 60, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js",
                    "original": { "line": 46, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/mathMod.js": "import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "29574f3e8addd8cf176128e718a1d8be",
    "cacheData": { "env": {} }
}
