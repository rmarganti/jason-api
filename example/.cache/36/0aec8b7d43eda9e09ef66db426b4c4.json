{
    "id": "../node_modules/ramda/es/none.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_complement.js",
            "loc": { "line": 1, "column": 24 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/none.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_complement.js"
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/none.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./all.js",
            "loc": { "line": 3, "column": 16 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/none.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/all.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _complement2 = _interopRequireDefault(require(\"./internal/_complement.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _all = _interopRequireDefault(require(\"./all.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none =\n/*#__PURE__*/\n(0, _curry.default)(function none(fn, input) {\n  return (0, _all.default)((0, _complement2.default)(fn), input);\n});\nvar _default = none;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 16, "column": 0 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 5, "column": 0 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 0 }
                },
                {
                    "name": "none",
                    "generated": { "line": 41, "column": 4 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 4 }
                },
                {
                    "generated": { "line": 41, "column": 8 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 8 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 11 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 24 }
                },
                {
                    "generated": { "line": 43, "column": 20 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 32 }
                },
                {
                    "name": "none",
                    "generated": { "line": 43, "column": 29 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 41 }
                },
                {
                    "generated": { "line": 43, "column": 33 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 32 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 43, "column": 34 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 46 }
                },
                {
                    "generated": { "line": 43, "column": 36 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 32 }
                },
                {
                    "name": "input",
                    "generated": { "line": 43, "column": 38 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 50 }
                },
                {
                    "generated": { "line": 43, "column": 43 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 32 }
                },
                {
                    "generated": { "line": 43, "column": 45 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 57 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "generated": { "line": 44, "column": 9 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "generated": { "line": 44, "column": 27 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 31, "column": 13 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 44, "column": 53 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 31, "column": 25 }
                },
                {
                    "generated": { "line": 44, "column": 55 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 31, "column": 13 }
                },
                {
                    "generated": { "line": 44, "column": 56 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "name": "input",
                    "generated": { "line": 44, "column": 58 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 31, "column": 30 }
                },
                {
                    "generated": { "line": 44, "column": 63 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "generated": { "line": 44, "column": 64 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 32, "column": 1 }
                },
                {
                    "generated": { "line": 45, "column": 1 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 24 }
                },
                {
                    "generated": { "line": 45, "column": 2 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 30, "column": 0 }
                },
                {
                    "name": "none",
                    "generated": { "line": 46, "column": 15 },
                    "source": "../node_modules/ramda/es/none.js",
                    "original": { "line": 33, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/none.js": "import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport all from './all.js';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\nexport default none;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "7fff37181545d9cd3da17db5a6132b25",
    "cacheData": { "env": {} }
}
