{"id":"../node_modules/ramda/es/into.js","dependencies":[{"name":"/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json","includedInParent":true,"mtime":1559061771000},{"name":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json","includedInParent":true,"mtime":1558469608000},{"name":"./internal/_clone.js","loc":{"line":1,"column":19},"parent":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/into.js","resolved":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_clone.js"},{"name":"./internal/_curry3.js","loc":{"line":2,"column":20},"parent":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/into.js","resolved":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry3.js"},{"name":"./internal/_isTransformer.js","loc":{"line":3,"column":27},"parent":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/into.js","resolved":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_isTransformer.js"},{"name":"./internal/_reduce.js","loc":{"line":4,"column":20},"parent":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/into.js","resolved":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_reduce.js"},{"name":"./internal/_stepCat.js","loc":{"line":5,"column":21},"parent":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/into.js","resolved":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_stepCat.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _clone2 = _interopRequireDefault(require(\"./internal/_clone.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nvar _isTransformer2 = _interopRequireDefault(require(\"./internal/_isTransformer.js\"));\n\nvar _reduce2 = _interopRequireDefault(require(\"./internal/_reduce.js\"));\n\nvar _stepCat2 = _interopRequireDefault(require(\"./internal/_stepCat.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into =\n/*#__PURE__*/\n(0, _curry.default)(function into(acc, xf, list) {\n  return (0, _isTransformer2.default)(acc) ? (0, _reduce2.default)(xf(acc), acc['@@transducer/init'](), list) : (0, _reduce2.default)(xf((0, _stepCat2.default)(acc)), (0, _clone2.default)(acc, [], [], false), list);\n});\nvar _default = into;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/ramda/es/into.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/ramda/es/into.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/ramda/es/into.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/ramda/es/into.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/ramda/es/into.js","original":{"line":5,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/ramda/es/into.js","original":{"line":7,"column":0}},{"generated":{"line":59,"column":0},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":0}},{"name":"into","generated":{"line":59,"column":4},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":4}},{"generated":{"line":59,"column":8},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":8}},{"generated":{"line":60,"column":0},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":11}},{"generated":{"line":61,"column":0},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":24}},{"generated":{"line":61,"column":20},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":32}},{"name":"into","generated":{"line":61,"column":29},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":41}},{"generated":{"line":61,"column":33},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":32}},{"name":"acc","generated":{"line":61,"column":34},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":46}},{"generated":{"line":61,"column":37},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":32}},{"name":"xf","generated":{"line":61,"column":39},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":51}},{"generated":{"line":61,"column":41},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":32}},{"name":"list","generated":{"line":61,"column":43},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":55}},{"generated":{"line":61,"column":47},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":32}},{"generated":{"line":61,"column":49},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":61}},{"generated":{"line":62,"column":0},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":2}},{"generated":{"line":62,"column":9},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":9}},{"name":"acc","generated":{"line":62,"column":38},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":24}},{"generated":{"line":62,"column":41},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":9}},{"generated":{"line":62,"column":45},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":31}},{"name":"xf","generated":{"line":62,"column":67},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":39}},{"generated":{"line":62,"column":69},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":41}},{"name":"acc","generated":{"line":62,"column":70},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":42}},{"generated":{"line":62,"column":73},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":41}},{"generated":{"line":62,"column":74},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":31}},{"name":"acc","generated":{"line":62,"column":76},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":48}},{"generated":{"line":62,"column":79},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":51}},{"generated":{"line":62,"column":80},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":52}},{"generated":{"line":62,"column":99},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":51}},{"generated":{"line":62,"column":100},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":48}},{"generated":{"line":62,"column":102},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":31}},{"name":"list","generated":{"line":62,"column":104},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":76}},{"generated":{"line":62,"column":108},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":31}},{"generated":{"line":62,"column":109},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":9}},{"generated":{"line":62,"column":112},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":84}},{"name":"xf","generated":{"line":62,"column":134},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":92}},{"generated":{"line":62,"column":136},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":94}},{"generated":{"line":62,"column":137},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":95}},{"name":"acc","generated":{"line":62,"column":160},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":104}},{"generated":{"line":62,"column":163},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":95}},{"generated":{"line":62,"column":164},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":94}},{"generated":{"line":62,"column":165},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":84}},{"generated":{"line":62,"column":167},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":111}},{"name":"acc","generated":{"line":62,"column":188},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":118}},{"generated":{"line":62,"column":191},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":111}},{"generated":{"line":62,"column":193},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":123}},{"generated":{"line":62,"column":195},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":111}},{"generated":{"line":62,"column":197},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":127}},{"generated":{"line":62,"column":199},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":111}},{"generated":{"line":62,"column":201},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":131}},{"generated":{"line":62,"column":206},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":111}},{"generated":{"line":62,"column":207},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":84}},{"name":"list","generated":{"line":62,"column":209},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":139}},{"generated":{"line":62,"column":213},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":84}},{"generated":{"line":62,"column":214},"source":"../node_modules/ramda/es/into.js","original":{"line":47,"column":2}},{"generated":{"line":63,"column":0},"source":"../node_modules/ramda/es/into.js","original":{"line":48,"column":1}},{"generated":{"line":63,"column":1},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":24}},{"generated":{"line":63,"column":2},"source":"../node_modules/ramda/es/into.js","original":{"line":46,"column":0}},{"name":"into","generated":{"line":64,"column":15},"source":"../node_modules/ramda/es/into.js","original":{"line":49,"column":15}}],"sources":{"../node_modules/ramda/es/into.js":"import _clone from './internal/_clone.js';\nimport _curry3 from './internal/_curry3.js';\nimport _isTransformer from './internal/_isTransformer.js';\nimport _reduce from './internal/_reduce.js';\nimport _stepCat from './internal/_stepCat.js';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;"},"lineCount":null}},"error":null,"hash":"9d7cdb96842bcef766ae93563e0634ec","cacheData":{"env":{}}}