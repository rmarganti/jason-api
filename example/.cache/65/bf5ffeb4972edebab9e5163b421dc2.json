{
    "id": "../node_modules/ramda/es/comparator.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry1.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/comparator.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry1.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar comparator =\n/*#__PURE__*/\n(0, _curry.default)(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nvar _default = comparator;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "comparator",
                    "generated": { "line": 35, "column": 4 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 4 }
                },
                {
                    "generated": { "line": 35, "column": 14 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 14 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 17 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 30 }
                },
                {
                    "generated": { "line": 37, "column": 20 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 38 }
                },
                {
                    "name": "comparator",
                    "generated": { "line": 37, "column": 29 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 47 }
                },
                {
                    "generated": { "line": 37, "column": 39 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 38 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 37, "column": 40 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 58 }
                },
                {
                    "generated": { "line": 37, "column": 44 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 38 }
                },
                {
                    "generated": { "line": 37, "column": 46 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 64 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "generated": { "line": 38, "column": 9 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "name": "a",
                    "generated": { "line": 38, "column": 19 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 27, "column": 19 }
                },
                {
                    "generated": { "line": 38, "column": 20 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "name": "b",
                    "generated": { "line": 38, "column": 22 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 27, "column": 22 }
                },
                {
                    "generated": { "line": 38, "column": 23 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "generated": { "line": 38, "column": 25 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 27, "column": 25 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 4 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 39, "column": 11 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 11 }
                },
                {
                    "generated": { "line": 39, "column": 15 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 15 }
                },
                {
                    "name": "a",
                    "generated": { "line": 39, "column": 16 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 16 }
                },
                {
                    "generated": { "line": 39, "column": 17 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 15 }
                },
                {
                    "name": "b",
                    "generated": { "line": 39, "column": 19 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 19 }
                },
                {
                    "generated": { "line": 39, "column": 20 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 15 }
                },
                {
                    "generated": { "line": 39, "column": 21 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 11 }
                },
                {
                    "generated": { "line": 39, "column": 24 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 24 }
                },
                {
                    "generated": { "line": 39, "column": 25 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 25 }
                },
                {
                    "generated": { "line": 39, "column": 26 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 11 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 39, "column": 29 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 29 }
                },
                {
                    "generated": { "line": 39, "column": 33 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 33 }
                },
                {
                    "name": "b",
                    "generated": { "line": 39, "column": 34 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "generated": { "line": 39, "column": 35 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 33 }
                },
                {
                    "name": "a",
                    "generated": { "line": 39, "column": 37 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 37 }
                },
                {
                    "generated": { "line": 39, "column": 38 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 33 }
                },
                {
                    "generated": { "line": 39, "column": 39 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 29 }
                },
                {
                    "generated": { "line": 39, "column": 42 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 42 }
                },
                {
                    "generated": { "line": 39, "column": 43 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 29 }
                },
                {
                    "generated": { "line": 39, "column": 46 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 46 }
                },
                {
                    "generated": { "line": 39, "column": 47 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 28, "column": 4 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 29, "column": 3 }
                },
                {
                    "generated": { "line": 40, "column": 3 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 30, "column": 1 }
                },
                {
                    "generated": { "line": 41, "column": 1 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 30 }
                },
                {
                    "generated": { "line": 41, "column": 2 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "comparator",
                    "generated": { "line": 42, "column": 15 },
                    "source": "../node_modules/ramda/es/comparator.js",
                    "original": { "line": 31, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/comparator.js": "import _curry1 from './internal/_curry1.js';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "e73ca630b6afc2bebdce914dbaf60ad8",
    "cacheData": { "env": {} }
}
