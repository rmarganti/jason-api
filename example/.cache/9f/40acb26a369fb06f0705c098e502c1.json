{
    "id": "../node_modules/ramda/es/mergeDeepLeft.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/mergeDeepLeft.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./mergeDeepWithKey.js",
            "loc": { "line": 2, "column": 29 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/mergeDeepLeft.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/mergeDeepWithKey.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _mergeDeepWithKey = _interopRequireDefault(require(\"./mergeDeepWithKey.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft =\n/*#__PURE__*/\n(0, _curry.default)(function mergeDeepLeft(lObj, rObj) {\n  return (0, _mergeDeepWithKey.default)(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nvar _default = mergeDeepLeft;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 0 }
                },
                {
                    "name": "mergeDeepLeft",
                    "generated": { "line": 35, "column": 4 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 4 }
                },
                {
                    "generated": { "line": 35, "column": 17 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 17 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 20 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 33 }
                },
                {
                    "generated": { "line": 37, "column": 20 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 41 }
                },
                {
                    "name": "mergeDeepLeft",
                    "generated": { "line": 37, "column": 29 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 50 }
                },
                {
                    "generated": { "line": 37, "column": 42 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 41 }
                },
                {
                    "name": "lObj",
                    "generated": { "line": 37, "column": 43 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 64 }
                },
                {
                    "generated": { "line": 37, "column": 47 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 41 }
                },
                {
                    "name": "rObj",
                    "generated": { "line": 37, "column": 49 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 70 }
                },
                {
                    "generated": { "line": 37, "column": 53 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 41 }
                },
                {
                    "generated": { "line": 37, "column": 55 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 76 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "generated": { "line": 38, "column": 9 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "generated": { "line": 38, "column": 40 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 26 }
                },
                {
                    "name": "k",
                    "generated": { "line": 38, "column": 50 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 36 }
                },
                {
                    "generated": { "line": 38, "column": 51 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 26 }
                },
                {
                    "name": "lVal",
                    "generated": { "line": 38, "column": 53 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 39 }
                },
                {
                    "generated": { "line": 38, "column": 57 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 26 }
                },
                {
                    "name": "rVal",
                    "generated": { "line": 38, "column": 59 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 45 }
                },
                {
                    "generated": { "line": 38, "column": 63 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 26 }
                },
                {
                    "generated": { "line": 38, "column": 65 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 51 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 27, "column": 4 }
                },
                {
                    "name": "lVal",
                    "generated": { "line": 39, "column": 11 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 27, "column": 11 }
                },
                {
                    "generated": { "line": 39, "column": 15 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 27, "column": 4 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 28, "column": 3 }
                },
                {
                    "generated": { "line": 40, "column": 3 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "name": "lObj",
                    "generated": { "line": 40, "column": 5 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 28, "column": 5 }
                },
                {
                    "generated": { "line": 40, "column": 9 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "name": "rObj",
                    "generated": { "line": 40, "column": 11 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 28, "column": 11 }
                },
                {
                    "generated": { "line": 40, "column": 15 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "generated": { "line": 40, "column": 16 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 29, "column": 1 }
                },
                {
                    "generated": { "line": 41, "column": 1 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 33 }
                },
                {
                    "generated": { "line": 41, "column": 2 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 25, "column": 0 }
                },
                {
                    "name": "mergeDeepLeft",
                    "generated": { "line": 42, "column": 15 },
                    "source": "../node_modules/ramda/es/mergeDeepLeft.js",
                    "original": { "line": 30, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/mergeDeepLeft.js": "import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "9c6abe1760757c3e2074acd9cdd442df",
    "cacheData": { "env": {} }
}
