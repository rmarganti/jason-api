{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith =\n/*#__PURE__*/\n(0, _curry.default)(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    var nextidx = idx + 1;\n\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n\n  return res;\n});\nvar _default = groupWith;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 0 }
                },
                {
                    "name": "groupWith",
                    "generated": { "line": 42, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "generated": { "line": 42, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 13 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 16 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 29 }
                },
                {
                    "generated": { "line": 44, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 37 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 44, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 47 }
                },
                {
                    "generated": { "line": 44, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 37 }
                },
                {
                    "name": "list",
                    "generated": { "line": 44, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 51 }
                },
                {
                    "generated": { "line": 44, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 37 }
                },
                {
                    "generated": { "line": 44, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 57 }
                },
                {
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 34, "column": 2 }
                },
                {
                    "name": "res",
                    "generated": { "line": 45, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 34, "column": 6 }
                },
                {
                    "generated": { "line": 45, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 34, "column": 9 }
                },
                {
                    "generated": { "line": 45, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 34, "column": 12 }
                },
                {
                    "generated": { "line": 45, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 34, "column": 2 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 35, "column": 2 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 46, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 35, "column": 6 }
                },
                {
                    "generated": { "line": 46, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 35, "column": 9 }
                },
                {
                    "generated": { "line": 46, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 35, "column": 12 }
                },
                {
                    "generated": { "line": 46, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 35, "column": 2 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 36, "column": 2 }
                },
                {
                    "name": "len",
                    "generated": { "line": 47, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 36, "column": 6 }
                },
                {
                    "generated": { "line": 47, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 36, "column": 9 }
                },
                {
                    "name": "list",
                    "generated": { "line": 47, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 36, "column": 12 }
                },
                {
                    "generated": { "line": 47, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 36, "column": 16 }
                },
                {
                    "name": "length",
                    "generated": { "line": 47, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 36, "column": 17 }
                },
                {
                    "generated": { "line": 47, "column": 23 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 36, "column": 2 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 37, "column": 2 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 49, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 37, "column": 9 }
                },
                {
                    "generated": { "line": 49, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 37, "column": 12 }
                },
                {
                    "name": "len",
                    "generated": { "line": 49, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 37, "column": 15 }
                },
                {
                    "generated": { "line": 49, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 37, "column": 2 }
                },
                {
                    "generated": { "line": 49, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 37, "column": 20 }
                },
                {
                    "generated": { "line": 50, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 38, "column": 4 }
                },
                {
                    "name": "nextidx",
                    "generated": { "line": 50, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 38, "column": 8 }
                },
                {
                    "generated": { "line": 50, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 38, "column": 15 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 50, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 38, "column": 18 }
                },
                {
                    "generated": { "line": 50, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 38, "column": 21 }
                },
                {
                    "generated": { "line": 50, "column": 24 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 38, "column": 24 }
                },
                {
                    "generated": { "line": 50, "column": 25 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 38, "column": 4 }
                },
                {
                    "generated": { "line": 52, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 4 }
                },
                {
                    "name": "nextidx",
                    "generated": { "line": 52, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 11 }
                },
                {
                    "generated": { "line": 52, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 18 }
                },
                {
                    "name": "len",
                    "generated": { "line": 52, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 21 }
                },
                {
                    "generated": { "line": 52, "column": 24 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 11 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 52, "column": 28 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 28 }
                },
                {
                    "generated": { "line": 52, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 30 }
                },
                {
                    "name": "list",
                    "generated": { "line": 52, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 31 }
                },
                {
                    "generated": { "line": 52, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 35 }
                },
                {
                    "name": "nextidx",
                    "generated": { "line": 52, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 36 }
                },
                {
                    "generated": { "line": 52, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 43 }
                },
                {
                    "generated": { "line": 52, "column": 46 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 46 }
                },
                {
                    "generated": { "line": 52, "column": 47 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 35 }
                },
                {
                    "generated": { "line": 52, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 30 }
                },
                {
                    "name": "list",
                    "generated": { "line": 52, "column": 50 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 50 }
                },
                {
                    "generated": { "line": 52, "column": 54 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 54 }
                },
                {
                    "name": "nextidx",
                    "generated": { "line": 52, "column": 55 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 55 }
                },
                {
                    "generated": { "line": 52, "column": 62 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 54 }
                },
                {
                    "generated": { "line": 52, "column": 63 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 30 }
                },
                {
                    "generated": { "line": 52, "column": 64 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 4 }
                },
                {
                    "generated": { "line": 52, "column": 66 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 39, "column": 66 }
                },
                {
                    "name": "nextidx",
                    "generated": { "line": 53, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 40, "column": 6 }
                },
                {
                    "name": "nextidx",
                    "generated": { "line": 53, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 40, "column": 6 }
                },
                {
                    "generated": { "line": 53, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 40, "column": 13 }
                },
                {
                    "generated": { "line": 53, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 40, "column": 17 }
                },
                {
                    "generated": { "line": 53, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 40, "column": 6 }
                },
                {
                    "generated": { "line": 54, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 41, "column": 5 }
                },
                {
                    "name": "res",
                    "generated": { "line": 56, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 4 }
                },
                {
                    "name": "res",
                    "generated": { "line": 56, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 4 }
                },
                {
                    "generated": { "line": 56, "column": 7 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 7 }
                },
                {
                    "name": "push",
                    "generated": { "line": 56, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 8 }
                },
                {
                    "generated": { "line": 56, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 4 }
                },
                {
                    "name": "list",
                    "generated": { "line": 56, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 13 }
                },
                {
                    "generated": { "line": 56, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 17 }
                },
                {
                    "name": "slice",
                    "generated": { "line": 56, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 18 }
                },
                {
                    "generated": { "line": 56, "column": 23 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 13 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 56, "column": 24 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 24 }
                },
                {
                    "generated": { "line": 56, "column": 27 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 13 }
                },
                {
                    "name": "nextidx",
                    "generated": { "line": 56, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 29 }
                },
                {
                    "generated": { "line": 56, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 13 }
                },
                {
                    "generated": { "line": 56, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 42, "column": 4 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 57, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 43, "column": 4 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 57, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 43, "column": 4 }
                },
                {
                    "generated": { "line": 57, "column": 7 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 43, "column": 7 }
                },
                {
                    "name": "nextidx",
                    "generated": { "line": 57, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 43, "column": 10 }
                },
                {
                    "generated": { "line": 57, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 43, "column": 4 }
                },
                {
                    "generated": { "line": 58, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 44, "column": 3 }
                },
                {
                    "generated": { "line": 60, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 45, "column": 2 }
                },
                {
                    "name": "res",
                    "generated": { "line": 60, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 45, "column": 9 }
                },
                {
                    "generated": { "line": 60, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 45, "column": 2 }
                },
                {
                    "generated": { "line": 61, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 46, "column": 1 }
                },
                {
                    "generated": { "line": 61, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 29 }
                },
                {
                    "generated": { "line": 61, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 33, "column": 0 }
                },
                {
                    "name": "groupWith",
                    "generated": { "line": 62, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js",
                    "original": { "line": 47, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/groupWith.js": "import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "92d0799cb8ef3e62b0d7ab5759473182",
    "cacheData": { "env": {} }
}
