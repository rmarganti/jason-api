{
    "id": "../node_modules/ramda/es/gte.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/gte.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte =\n/*#__PURE__*/\n(0, _curry.default)(function gte(a, b) {\n  return a >= b;\n});\nvar _default = gte;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 0 }
                },
                {
                    "name": "gte",
                    "generated": { "line": 33, "column": 4 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 4 }
                },
                {
                    "generated": { "line": 33, "column": 7 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 7 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 10 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 23 }
                },
                {
                    "generated": { "line": 35, "column": 20 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 31 }
                },
                {
                    "name": "gte",
                    "generated": { "line": 35, "column": 29 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 40 }
                },
                {
                    "generated": { "line": 35, "column": 32 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 31 }
                },
                {
                    "name": "a",
                    "generated": { "line": 35, "column": 33 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 44 }
                },
                {
                    "generated": { "line": 35, "column": 34 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 31 }
                },
                {
                    "name": "b",
                    "generated": { "line": 35, "column": 36 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 47 }
                },
                {
                    "generated": { "line": 35, "column": 37 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 31 }
                },
                {
                    "generated": { "line": 35, "column": 39 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 50 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 25, "column": 2 }
                },
                {
                    "name": "a",
                    "generated": { "line": 36, "column": 9 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 25, "column": 9 }
                },
                {
                    "generated": { "line": 36, "column": 10 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 25, "column": 10 }
                },
                {
                    "name": "b",
                    "generated": { "line": 36, "column": 14 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 25, "column": 14 }
                },
                {
                    "generated": { "line": 36, "column": 15 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 25, "column": 2 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 26, "column": 1 }
                },
                {
                    "generated": { "line": 37, "column": 1 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 23 }
                },
                {
                    "generated": { "line": 37, "column": 2 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 24, "column": 0 }
                },
                {
                    "name": "gte",
                    "generated": { "line": 38, "column": 15 },
                    "source": "../node_modules/ramda/es/gte.js",
                    "original": { "line": 27, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/gte.js": "import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "eee3efc522dbc72e90bb446cf84128e0",
    "cacheData": { "env": {} }
}
