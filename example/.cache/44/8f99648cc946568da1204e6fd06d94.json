{
    "id": "../node_modules/ramda/es/thunkify.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./curryN.js",
            "loc": { "line": 1, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/thunkify.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/curryN.js"
        },
        {
            "name": "./internal/_curry1.js",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/thunkify.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry1.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curryN = _interopRequireDefault(require(\"./curryN.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\nvar thunkify =\n/*#__PURE__*/\n(0, _curry.default)(function thunkify(fn) {\n  return (0, _curryN.default)(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\nvar _default = thunkify;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 31, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 0 }
                },
                {
                    "name": "thunkify",
                    "generated": { "line": 31, "column": 4 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 4 }
                },
                {
                    "generated": { "line": 31, "column": 12 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 12 }
                },
                {
                    "generated": { "line": 32, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 15 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 28 }
                },
                {
                    "generated": { "line": 33, "column": 20 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 36 }
                },
                {
                    "name": "thunkify",
                    "generated": { "line": 33, "column": 29 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 45 }
                },
                {
                    "generated": { "line": 33, "column": 37 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 36 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 33, "column": 38 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 54 }
                },
                {
                    "generated": { "line": 33, "column": 40 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 36 }
                },
                {
                    "generated": { "line": 33, "column": 42 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 58 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 2 }
                },
                {
                    "generated": { "line": 34, "column": 9 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 9 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 34, "column": 30 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 16 }
                },
                {
                    "generated": { "line": 34, "column": 32 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 18 }
                },
                {
                    "name": "length",
                    "generated": { "line": 34, "column": 33 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 19 }
                },
                {
                    "generated": { "line": 34, "column": 39 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 9 }
                },
                {
                    "generated": { "line": 34, "column": 41 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 27 }
                },
                {
                    "name": "createThunk",
                    "generated": { "line": 34, "column": 50 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 36 }
                },
                {
                    "generated": { "line": 34, "column": 61 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 27 }
                },
                {
                    "generated": { "line": 34, "column": 64 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 50 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 23, "column": 4 }
                },
                {
                    "name": "fnArgs",
                    "generated": { "line": 35, "column": 8 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 23, "column": 8 }
                },
                {
                    "generated": { "line": 35, "column": 14 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 23, "column": 14 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 35, "column": 17 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 23, "column": 17 }
                },
                {
                    "generated": { "line": 35, "column": 26 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 23, "column": 4 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 24, "column": 4 }
                },
                {
                    "generated": { "line": 36, "column": 11 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 24, "column": 11 }
                },
                {
                    "name": "invokeThunk",
                    "generated": { "line": 36, "column": 20 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 24, "column": 20 }
                },
                {
                    "generated": { "line": 36, "column": 31 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 24, "column": 11 }
                },
                {
                    "generated": { "line": 36, "column": 34 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 24, "column": 34 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 25, "column": 6 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 37, "column": 13 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 25, "column": 13 }
                },
                {
                    "generated": { "line": 37, "column": 15 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 25, "column": 15 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 37, "column": 16 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 25, "column": 16 }
                },
                {
                    "generated": { "line": 37, "column": 21 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 25, "column": 13 }
                },
                {
                    "generated": { "line": 37, "column": 22 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 25, "column": 22 }
                },
                {
                    "generated": { "line": 37, "column": 26 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 25, "column": 13 }
                },
                {
                    "name": "fnArgs",
                    "generated": { "line": 37, "column": 28 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 25, "column": 28 }
                },
                {
                    "generated": { "line": 37, "column": 34 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 25, "column": 13 }
                },
                {
                    "generated": { "line": 37, "column": 35 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 25, "column": 6 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 26, "column": 5 }
                },
                {
                    "generated": { "line": 38, "column": 5 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 24, "column": 4 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 27, "column": 3 }
                },
                {
                    "generated": { "line": 39, "column": 3 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 9 }
                },
                {
                    "generated": { "line": 39, "column": 4 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 22, "column": 2 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 28, "column": 1 }
                },
                {
                    "generated": { "line": 40, "column": 1 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 28 }
                },
                {
                    "generated": { "line": 40, "column": 2 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 21, "column": 0 }
                },
                {
                    "name": "thunkify",
                    "generated": { "line": 41, "column": 15 },
                    "source": "../node_modules/ramda/es/thunkify.js",
                    "original": { "line": 30, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/thunkify.js": "import curryN from './curryN.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\nvar thunkify = /*#__PURE__*/_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nexport default thunkify;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "9528c580a1a4787d9c0b817f9142447c",
    "cacheData": { "env": {} }
}
