{
    "id": "../node_modules/ramda/es/eqBy.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry3.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/eqBy.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry3.js"
        },
        {
            "name": "./equals.js",
            "loc": { "line": 2, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/eqBy.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/equals.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nvar _equals = _interopRequireDefault(require(\"./equals.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy =\n/*#__PURE__*/\n(0, _curry.default)(function eqBy(f, x, y) {\n  return (0, _equals.default)(f(x), f(y));\n});\nvar _default = eqBy;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 31, "column": 0 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 0 }
                },
                {
                    "name": "eqBy",
                    "generated": { "line": 31, "column": 4 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 4 }
                },
                {
                    "generated": { "line": 31, "column": 8 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 8 }
                },
                {
                    "generated": { "line": 32, "column": 0 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 11 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 24 }
                },
                {
                    "generated": { "line": 33, "column": 20 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 32 }
                },
                {
                    "name": "eqBy",
                    "generated": { "line": 33, "column": 29 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 41 }
                },
                {
                    "generated": { "line": 33, "column": 33 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 32 }
                },
                {
                    "name": "f",
                    "generated": { "line": 33, "column": 34 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 46 }
                },
                {
                    "generated": { "line": 33, "column": 35 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 32 }
                },
                {
                    "name": "x",
                    "generated": { "line": 33, "column": 37 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 49 }
                },
                {
                    "generated": { "line": 33, "column": 38 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 32 }
                },
                {
                    "name": "y",
                    "generated": { "line": 33, "column": 40 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 52 }
                },
                {
                    "generated": { "line": 33, "column": 41 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 32 }
                },
                {
                    "generated": { "line": 33, "column": 43 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 55 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 2 }
                },
                {
                    "generated": { "line": 34, "column": 9 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 9 }
                },
                {
                    "name": "f",
                    "generated": { "line": 34, "column": 30 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 16 }
                },
                {
                    "generated": { "line": 34, "column": 31 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 17 }
                },
                {
                    "name": "x",
                    "generated": { "line": 34, "column": 32 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 18 }
                },
                {
                    "generated": { "line": 34, "column": 33 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 17 }
                },
                {
                    "generated": { "line": 34, "column": 34 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 9 }
                },
                {
                    "name": "f",
                    "generated": { "line": 34, "column": 36 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 22 }
                },
                {
                    "generated": { "line": 34, "column": 37 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 23 }
                },
                {
                    "name": "y",
                    "generated": { "line": 34, "column": 38 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 24 }
                },
                {
                    "generated": { "line": 34, "column": 39 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 23 }
                },
                {
                    "generated": { "line": 34, "column": 40 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 9 }
                },
                {
                    "generated": { "line": 34, "column": 41 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 22, "column": 2 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 23, "column": 1 }
                },
                {
                    "generated": { "line": 35, "column": 1 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 24 }
                },
                {
                    "generated": { "line": 35, "column": 2 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 21, "column": 0 }
                },
                {
                    "name": "eqBy",
                    "generated": { "line": 36, "column": 15 },
                    "source": "../node_modules/ramda/es/eqBy.js",
                    "original": { "line": 24, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/eqBy.js": "import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "9acb4eb9d1023505bec15e9970ee41d0",
    "cacheData": { "env": {} }
}
