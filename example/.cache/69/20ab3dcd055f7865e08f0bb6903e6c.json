{
    "id": "../node_modules/ramda/es/clamp.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry3.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/clamp.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry3.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp =\n/*#__PURE__*/\n(0, _curry.default)(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n\n  return value < min ? min : value > max ? max : value;\n});\nvar _default = clamp;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 32, "column": 0 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 0 }
                },
                {
                    "name": "clamp",
                    "generated": { "line": 32, "column": 4 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 4 }
                },
                {
                    "generated": { "line": 32, "column": 9 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 9 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 12 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 25 }
                },
                {
                    "generated": { "line": 34, "column": 20 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 33 }
                },
                {
                    "name": "clamp",
                    "generated": { "line": 34, "column": 29 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 42 }
                },
                {
                    "generated": { "line": 34, "column": 34 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 33 }
                },
                {
                    "name": "min",
                    "generated": { "line": 34, "column": 35 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 48 }
                },
                {
                    "generated": { "line": 34, "column": 38 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 33 }
                },
                {
                    "name": "max",
                    "generated": { "line": 34, "column": 40 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 53 }
                },
                {
                    "generated": { "line": 34, "column": 43 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 33 }
                },
                {
                    "name": "value",
                    "generated": { "line": 34, "column": 45 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 58 }
                },
                {
                    "generated": { "line": 34, "column": 50 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 33 }
                },
                {
                    "generated": { "line": 34, "column": 52 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 65 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "name": "min",
                    "generated": { "line": 35, "column": 6 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 24, "column": 6 }
                },
                {
                    "generated": { "line": 35, "column": 9 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "name": "max",
                    "generated": { "line": 35, "column": 12 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 24, "column": 12 }
                },
                {
                    "generated": { "line": 35, "column": 15 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "generated": { "line": 35, "column": 17 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 24, "column": 17 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 25, "column": 4 }
                },
                {
                    "generated": { "line": 36, "column": 10 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 25, "column": 10 }
                },
                {
                    "name": "Error",
                    "generated": { "line": 36, "column": 14 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 25, "column": 14 }
                },
                {
                    "generated": { "line": 36, "column": 19 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 25, "column": 10 }
                },
                {
                    "generated": { "line": 36, "column": 20 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 25, "column": 20 }
                },
                {
                    "generated": { "line": 36, "column": 80 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 25, "column": 10 }
                },
                {
                    "generated": { "line": 36, "column": 81 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 25, "column": 4 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 26, "column": 3 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "name": "value",
                    "generated": { "line": 39, "column": 9 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "generated": { "line": 39, "column": 14 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 14 }
                },
                {
                    "name": "min",
                    "generated": { "line": 39, "column": 17 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 17 }
                },
                {
                    "generated": { "line": 39, "column": 20 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "name": "min",
                    "generated": { "line": 39, "column": 23 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 23 }
                },
                {
                    "generated": { "line": 39, "column": 26 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "name": "value",
                    "generated": { "line": 39, "column": 29 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 29 }
                },
                {
                    "generated": { "line": 39, "column": 34 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 34 }
                },
                {
                    "name": "max",
                    "generated": { "line": 39, "column": 37 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 37 }
                },
                {
                    "generated": { "line": 39, "column": 40 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 29 }
                },
                {
                    "name": "max",
                    "generated": { "line": 39, "column": 43 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 43 }
                },
                {
                    "generated": { "line": 39, "column": 46 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 29 }
                },
                {
                    "name": "value",
                    "generated": { "line": 39, "column": 49 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 49 }
                },
                {
                    "generated": { "line": 39, "column": 54 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 28, "column": 1 }
                },
                {
                    "generated": { "line": 40, "column": 1 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 25 }
                },
                {
                    "generated": { "line": 40, "column": 2 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 23, "column": 0 }
                },
                {
                    "name": "clamp",
                    "generated": { "line": 41, "column": 15 },
                    "source": "../node_modules/ramda/es/clamp.js",
                    "original": { "line": 29, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/clamp.js": "import _curry3 from './internal/_curry3.js';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "242f02f273311a894e0c4de0f6e8e70c",
    "cacheData": { "env": {} }
}
