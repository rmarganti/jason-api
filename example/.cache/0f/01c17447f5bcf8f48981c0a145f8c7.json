{
    "id": "../node_modules/ramda/es/defaultTo.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/defaultTo.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo =\n/*#__PURE__*/\n(0, _curry.default)(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nvar _default = defaultTo;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "defaultTo",
                    "generated": { "line": 35, "column": 4 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 4 }
                },
                {
                    "generated": { "line": 35, "column": 13 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 13 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 16 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 29 }
                },
                {
                    "generated": { "line": 37, "column": 20 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 37 }
                },
                {
                    "name": "defaultTo",
                    "generated": { "line": 37, "column": 29 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 46 }
                },
                {
                    "generated": { "line": 37, "column": 38 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 37 }
                },
                {
                    "name": "d",
                    "generated": { "line": 37, "column": 39 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 56 }
                },
                {
                    "generated": { "line": 37, "column": 40 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 37 }
                },
                {
                    "name": "v",
                    "generated": { "line": 37, "column": 42 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 59 }
                },
                {
                    "generated": { "line": 37, "column": 43 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 37 }
                },
                {
                    "generated": { "line": 37, "column": 45 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 62 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "name": "v",
                    "generated": { "line": 38, "column": 9 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "generated": { "line": 38, "column": 10 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 10 }
                },
                {
                    "generated": { "line": 38, "column": 14 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 14 }
                },
                {
                    "generated": { "line": 38, "column": 18 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "name": "v",
                    "generated": { "line": 38, "column": 22 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 22 }
                },
                {
                    "generated": { "line": 38, "column": 23 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 23 }
                },
                {
                    "name": "v",
                    "generated": { "line": 38, "column": 28 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 28 }
                },
                {
                    "generated": { "line": 38, "column": 29 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "name": "d",
                    "generated": { "line": 38, "column": 32 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 32 }
                },
                {
                    "generated": { "line": 38, "column": 33 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "name": "v",
                    "generated": { "line": 38, "column": 36 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 36 }
                },
                {
                    "generated": { "line": 38, "column": 37 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 28, "column": 1 }
                },
                {
                    "generated": { "line": 39, "column": 1 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 29 }
                },
                {
                    "generated": { "line": 39, "column": 2 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "defaultTo",
                    "generated": { "line": 40, "column": 15 },
                    "source": "../node_modules/ramda/es/defaultTo.js",
                    "original": { "line": 29, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/defaultTo.js": "import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "a7ea3d093e9ae329e72fb6e13dfd8ad7",
    "cacheData": { "env": {} }
}
