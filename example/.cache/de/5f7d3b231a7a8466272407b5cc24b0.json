{
    "id": "node_modules/axios-mock-adapter/src/utils.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1558731818000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/node_modules/axios-mock-adapter/package.json",
            "includedInParent": true,
            "mtime": 1558731589000
        },
        {
            "name": "axios",
            "loc": { "line": 3, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/node_modules/axios-mock-adapter/src/utils.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/axios/index.js"
        },
        {
            "name": "deep-equal",
            "loc": { "line": 4, "column": 24 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/node_modules/axios-mock-adapter/src/utils.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/node_modules/deep-equal/index.js"
        }
    ],
    "generated": {
        "js": "'use strict';\n\nvar axios = require('axios');\nvar deepEqual = require('deep-equal');\n\nfunction isEqual(a, b) {\n  return deepEqual(a, b, { strict: true });\n}\n\n// < 0.13.0 will not have default headers set on a custom instance\nvar rejectWithError = !!axios.create().defaults.headers;\n\nfunction find(array, predicate) {\n  var length = array.length;\n  for (var i = 0; i < length; i++) {\n    var value = array[i];\n    if (predicate(value)) return value;\n  }\n}\n\nfunction combineUrls(baseURL, url) {\n  if (baseURL) {\n    return baseURL.replace(/\\/+$/, '') + '/' + url.replace(/^\\/+/, '');\n  }\n\n  return url;\n}\n\nfunction findHandler(handlers, method, url, body, parameters, headers, baseURL) {\n  return find(handlers[method.toLowerCase()], function(handler) {\n    if (typeof handler[0] === 'string') {\n      return (isUrlMatching(url, handler[0]) || isUrlMatching(combineUrls(baseURL, url), handler[0])) && isBodyOrParametersMatching(method, body, parameters, handler[1])  && isRequestHeadersMatching(headers, handler[2]);\n    } else if (handler[0] instanceof RegExp) {\n      return (handler[0].test(url) || handler[0].test(combineUrls(baseURL, url))) && isBodyOrParametersMatching(method, body, parameters, handler[1]) && isRequestHeadersMatching(headers, handler[2]);\n    }\n  });\n}\n\nfunction isUrlMatching(url, required) {\n  var noSlashUrl = url[0] === '/' ? url.substr(1) : url;\n  var noSlashRequired = required[0] === '/' ? required.substr(1) : required;\n  return (noSlashUrl === noSlashRequired);\n}\n\nfunction isRequestHeadersMatching(requestHeaders, required) {\n  if (required === undefined) return true;\n  return isEqual(requestHeaders, required);\n}\n\nfunction isBodyOrParametersMatching(method, body, parameters, required) {\n  var allowedParamsMethods = ['delete', 'get', 'head', 'options'];\n  if (allowedParamsMethods.indexOf(method.toLowerCase()) >= 0 ) {\n    var params = required ? required.params : undefined;\n    return isParametersMatching(parameters, params);\n  } else {\n    return isBodyMatching(body, required);\n  }\n}\n\nfunction isParametersMatching(parameters, required) {\n  if (required === undefined) return true;\n\n  return isEqual(parameters, required);\n}\n\nfunction isBodyMatching(body, requiredBody) {\n  if (requiredBody === undefined) {\n    return true;\n  }\n  var parsedBody;\n  try {\n    parsedBody = JSON.parse(body);\n  } catch (e) { }\n  return parsedBody ? isEqual(parsedBody, requiredBody) : isEqual(body, requiredBody);\n}\n\nfunction purgeIfReplyOnce(mock, handler) {\n  Object.keys(mock.handlers).forEach(function(key) {\n    var index = mock.handlers[key].indexOf(handler);\n    if (index > -1) {\n      mock.handlers[key].splice(index, 1);\n    }\n  });\n}\n\nfunction settle(resolve, reject, response, delay) {\n  if (delay > 0) {\n    setTimeout(function() {\n      settle(resolve, reject, response);\n    }, delay);\n    return;\n  }\n\n  if (response.config && response.config.validateStatus) {\n    response.config.validateStatus(response.status)\n      ? resolve(response)\n      : reject(createErrorResponse(\n        'Request failed with status code ' + response.status,\n        response.config,\n        response\n      ));\n    return;\n  }\n\n  // Support for axios < 0.11\n  if (response.status >= 200 && response.status < 300) {\n    resolve(response);\n  } else {\n    reject(response);\n  }\n}\n\nfunction createErrorResponse(message, config, response) {\n  // Support for axios < 0.13.0\n  if (!rejectWithError) return response;\n\n  var error = new Error(message);\n  error.config = config;\n  error.response = response;\n  return error;\n}\n\nfunction isSimpleObject(value) {\n  return value !== null && value !== undefined && value.toString() === '[object Object]';\n}\n\nmodule.exports = {\n  find: find,\n  findHandler: findHandler,\n  isSimpleObject: isSimpleObject,\n  purgeIfReplyOnce: purgeIfReplyOnce,\n  settle: settle\n};\n"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 1, "column": 0 },
                    "generated": { "line": 1, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 2, "column": 0 },
                    "generated": { "line": 2, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 3, "column": 0 },
                    "generated": { "line": 3, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 4, "column": 0 },
                    "generated": { "line": 4, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 5, "column": 0 },
                    "generated": { "line": 5, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 6, "column": 0 },
                    "generated": { "line": 6, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 7, "column": 0 },
                    "generated": { "line": 7, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 8, "column": 0 },
                    "generated": { "line": 8, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 9, "column": 0 },
                    "generated": { "line": 9, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 10, "column": 0 },
                    "generated": { "line": 10, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 11, "column": 0 },
                    "generated": { "line": 11, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 12, "column": 0 },
                    "generated": { "line": 12, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 13, "column": 0 },
                    "generated": { "line": 13, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 14, "column": 0 },
                    "generated": { "line": 14, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 15, "column": 0 },
                    "generated": { "line": 15, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 16, "column": 0 },
                    "generated": { "line": 16, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 17, "column": 0 },
                    "generated": { "line": 17, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 18, "column": 0 },
                    "generated": { "line": 18, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 19, "column": 0 },
                    "generated": { "line": 19, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 20, "column": 0 },
                    "generated": { "line": 20, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 21, "column": 0 },
                    "generated": { "line": 21, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 22, "column": 0 },
                    "generated": { "line": 22, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 23, "column": 0 },
                    "generated": { "line": 23, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 24, "column": 0 },
                    "generated": { "line": 24, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 25, "column": 0 },
                    "generated": { "line": 25, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 26, "column": 0 },
                    "generated": { "line": 26, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 27, "column": 0 },
                    "generated": { "line": 27, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 28, "column": 0 },
                    "generated": { "line": 28, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 29, "column": 0 },
                    "generated": { "line": 29, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 30, "column": 0 },
                    "generated": { "line": 30, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 31, "column": 0 },
                    "generated": { "line": 31, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 32, "column": 0 },
                    "generated": { "line": 32, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 33, "column": 0 },
                    "generated": { "line": 33, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 34, "column": 0 },
                    "generated": { "line": 34, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 35, "column": 0 },
                    "generated": { "line": 35, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 36, "column": 0 },
                    "generated": { "line": 36, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 37, "column": 0 },
                    "generated": { "line": 37, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 38, "column": 0 },
                    "generated": { "line": 38, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 39, "column": 0 },
                    "generated": { "line": 39, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 40, "column": 0 },
                    "generated": { "line": 40, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 41, "column": 0 },
                    "generated": { "line": 41, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 42, "column": 0 },
                    "generated": { "line": 42, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 43, "column": 0 },
                    "generated": { "line": 43, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 44, "column": 0 },
                    "generated": { "line": 44, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 45, "column": 0 },
                    "generated": { "line": 45, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 46, "column": 0 },
                    "generated": { "line": 46, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 47, "column": 0 },
                    "generated": { "line": 47, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 48, "column": 0 },
                    "generated": { "line": 48, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 49, "column": 0 },
                    "generated": { "line": 49, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 50, "column": 0 },
                    "generated": { "line": 50, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 51, "column": 0 },
                    "generated": { "line": 51, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 52, "column": 0 },
                    "generated": { "line": 52, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 53, "column": 0 },
                    "generated": { "line": 53, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 54, "column": 0 },
                    "generated": { "line": 54, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 55, "column": 0 },
                    "generated": { "line": 55, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 56, "column": 0 },
                    "generated": { "line": 56, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 57, "column": 0 },
                    "generated": { "line": 57, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 58, "column": 0 },
                    "generated": { "line": 58, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 59, "column": 0 },
                    "generated": { "line": 59, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 60, "column": 0 },
                    "generated": { "line": 60, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 61, "column": 0 },
                    "generated": { "line": 61, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 62, "column": 0 },
                    "generated": { "line": 62, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 63, "column": 0 },
                    "generated": { "line": 63, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 64, "column": 0 },
                    "generated": { "line": 64, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 65, "column": 0 },
                    "generated": { "line": 65, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 66, "column": 0 },
                    "generated": { "line": 66, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 67, "column": 0 },
                    "generated": { "line": 67, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 68, "column": 0 },
                    "generated": { "line": 68, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 69, "column": 0 },
                    "generated": { "line": 69, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 70, "column": 0 },
                    "generated": { "line": 70, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 71, "column": 0 },
                    "generated": { "line": 71, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 72, "column": 0 },
                    "generated": { "line": 72, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 73, "column": 0 },
                    "generated": { "line": 73, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 74, "column": 0 },
                    "generated": { "line": 74, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 75, "column": 0 },
                    "generated": { "line": 75, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 76, "column": 0 },
                    "generated": { "line": 76, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 77, "column": 0 },
                    "generated": { "line": 77, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 78, "column": 0 },
                    "generated": { "line": 78, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 79, "column": 0 },
                    "generated": { "line": 79, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 80, "column": 0 },
                    "generated": { "line": 80, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 81, "column": 0 },
                    "generated": { "line": 81, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 82, "column": 0 },
                    "generated": { "line": 82, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 83, "column": 0 },
                    "generated": { "line": 83, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 84, "column": 0 },
                    "generated": { "line": 84, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 85, "column": 0 },
                    "generated": { "line": 85, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 86, "column": 0 },
                    "generated": { "line": 86, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 87, "column": 0 },
                    "generated": { "line": 87, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 88, "column": 0 },
                    "generated": { "line": 88, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 89, "column": 0 },
                    "generated": { "line": 89, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 90, "column": 0 },
                    "generated": { "line": 90, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 91, "column": 0 },
                    "generated": { "line": 91, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 92, "column": 0 },
                    "generated": { "line": 92, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 93, "column": 0 },
                    "generated": { "line": 93, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 94, "column": 0 },
                    "generated": { "line": 94, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 95, "column": 0 },
                    "generated": { "line": 95, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 96, "column": 0 },
                    "generated": { "line": 96, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 97, "column": 0 },
                    "generated": { "line": 97, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 98, "column": 0 },
                    "generated": { "line": 98, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 99, "column": 0 },
                    "generated": { "line": 99, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 100, "column": 0 },
                    "generated": { "line": 100, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 101, "column": 0 },
                    "generated": { "line": 101, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 102, "column": 0 },
                    "generated": { "line": 102, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 103, "column": 0 },
                    "generated": { "line": 103, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 104, "column": 0 },
                    "generated": { "line": 104, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 105, "column": 0 },
                    "generated": { "line": 105, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 106, "column": 0 },
                    "generated": { "line": 106, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 107, "column": 0 },
                    "generated": { "line": 107, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 108, "column": 0 },
                    "generated": { "line": 108, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 109, "column": 0 },
                    "generated": { "line": 109, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 110, "column": 0 },
                    "generated": { "line": 110, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 111, "column": 0 },
                    "generated": { "line": 111, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 112, "column": 0 },
                    "generated": { "line": 112, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 113, "column": 0 },
                    "generated": { "line": 113, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 114, "column": 0 },
                    "generated": { "line": 114, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 115, "column": 0 },
                    "generated": { "line": 115, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 116, "column": 0 },
                    "generated": { "line": 116, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 117, "column": 0 },
                    "generated": { "line": 117, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 118, "column": 0 },
                    "generated": { "line": 118, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 119, "column": 0 },
                    "generated": { "line": 119, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 120, "column": 0 },
                    "generated": { "line": 120, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 121, "column": 0 },
                    "generated": { "line": 121, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 122, "column": 0 },
                    "generated": { "line": 122, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 123, "column": 0 },
                    "generated": { "line": 123, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 124, "column": 0 },
                    "generated": { "line": 124, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 125, "column": 0 },
                    "generated": { "line": 125, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 126, "column": 0 },
                    "generated": { "line": 126, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 127, "column": 0 },
                    "generated": { "line": 127, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 128, "column": 0 },
                    "generated": { "line": 128, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 129, "column": 0 },
                    "generated": { "line": 129, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 130, "column": 0 },
                    "generated": { "line": 130, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 131, "column": 0 },
                    "generated": { "line": 131, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 132, "column": 0 },
                    "generated": { "line": 132, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 133, "column": 0 },
                    "generated": { "line": 133, "column": 0 }
                },
                {
                    "source": "node_modules/axios-mock-adapter/src/utils.js",
                    "original": { "line": 134, "column": 0 },
                    "generated": { "line": 134, "column": 0 }
                }
            ],
            "sources": {
                "node_modules/axios-mock-adapter/src/utils.js": "'use strict';\n\nvar axios = require('axios');\nvar deepEqual = require('deep-equal');\n\nfunction isEqual(a, b) {\n  return deepEqual(a, b, { strict: true });\n}\n\n// < 0.13.0 will not have default headers set on a custom instance\nvar rejectWithError = !!axios.create().defaults.headers;\n\nfunction find(array, predicate) {\n  var length = array.length;\n  for (var i = 0; i < length; i++) {\n    var value = array[i];\n    if (predicate(value)) return value;\n  }\n}\n\nfunction combineUrls(baseURL, url) {\n  if (baseURL) {\n    return baseURL.replace(/\\/+$/, '') + '/' + url.replace(/^\\/+/, '');\n  }\n\n  return url;\n}\n\nfunction findHandler(handlers, method, url, body, parameters, headers, baseURL) {\n  return find(handlers[method.toLowerCase()], function(handler) {\n    if (typeof handler[0] === 'string') {\n      return (isUrlMatching(url, handler[0]) || isUrlMatching(combineUrls(baseURL, url), handler[0])) && isBodyOrParametersMatching(method, body, parameters, handler[1])  && isRequestHeadersMatching(headers, handler[2]);\n    } else if (handler[0] instanceof RegExp) {\n      return (handler[0].test(url) || handler[0].test(combineUrls(baseURL, url))) && isBodyOrParametersMatching(method, body, parameters, handler[1]) && isRequestHeadersMatching(headers, handler[2]);\n    }\n  });\n}\n\nfunction isUrlMatching(url, required) {\n  var noSlashUrl = url[0] === '/' ? url.substr(1) : url;\n  var noSlashRequired = required[0] === '/' ? required.substr(1) : required;\n  return (noSlashUrl === noSlashRequired);\n}\n\nfunction isRequestHeadersMatching(requestHeaders, required) {\n  if (required === undefined) return true;\n  return isEqual(requestHeaders, required);\n}\n\nfunction isBodyOrParametersMatching(method, body, parameters, required) {\n  var allowedParamsMethods = ['delete', 'get', 'head', 'options'];\n  if (allowedParamsMethods.indexOf(method.toLowerCase()) >= 0 ) {\n    var params = required ? required.params : undefined;\n    return isParametersMatching(parameters, params);\n  } else {\n    return isBodyMatching(body, required);\n  }\n}\n\nfunction isParametersMatching(parameters, required) {\n  if (required === undefined) return true;\n\n  return isEqual(parameters, required);\n}\n\nfunction isBodyMatching(body, requiredBody) {\n  if (requiredBody === undefined) {\n    return true;\n  }\n  var parsedBody;\n  try {\n    parsedBody = JSON.parse(body);\n  } catch (e) { }\n  return parsedBody ? isEqual(parsedBody, requiredBody) : isEqual(body, requiredBody);\n}\n\nfunction purgeIfReplyOnce(mock, handler) {\n  Object.keys(mock.handlers).forEach(function(key) {\n    var index = mock.handlers[key].indexOf(handler);\n    if (index > -1) {\n      mock.handlers[key].splice(index, 1);\n    }\n  });\n}\n\nfunction settle(resolve, reject, response, delay) {\n  if (delay > 0) {\n    setTimeout(function() {\n      settle(resolve, reject, response);\n    }, delay);\n    return;\n  }\n\n  if (response.config && response.config.validateStatus) {\n    response.config.validateStatus(response.status)\n      ? resolve(response)\n      : reject(createErrorResponse(\n        'Request failed with status code ' + response.status,\n        response.config,\n        response\n      ));\n    return;\n  }\n\n  // Support for axios < 0.11\n  if (response.status >= 200 && response.status < 300) {\n    resolve(response);\n  } else {\n    reject(response);\n  }\n}\n\nfunction createErrorResponse(message, config, response) {\n  // Support for axios < 0.13.0\n  if (!rejectWithError) return response;\n\n  var error = new Error(message);\n  error.config = config;\n  error.response = response;\n  return error;\n}\n\nfunction isSimpleObject(value) {\n  return value !== null && value !== undefined && value.toString() === '[object Object]';\n}\n\nmodule.exports = {\n  find: find,\n  findHandler: findHandler,\n  isSimpleObject: isSimpleObject,\n  purgeIfReplyOnce: purgeIfReplyOnce,\n  settle: settle\n};\n"
            },
            "lineCount": 134
        }
    },
    "error": null,
    "hash": "507ec265b24b6232e813d59cd7c8f444",
    "cacheData": { "env": {} }
}
