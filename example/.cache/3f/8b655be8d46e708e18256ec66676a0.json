{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_arity",
            "loc": { "line": 1, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/cond.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_arity.js"
        },
        {
            "name": "./internal/_curry1",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/cond.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry1.js"
        },
        {
            "name": "./map",
            "loc": { "line": 3, "column": 16 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/cond.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/map.js"
        },
        {
            "name": "./max",
            "loc": { "line": 4, "column": 16 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/cond.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/max.js"
        },
        {
            "name": "./reduce",
            "loc": { "line": 5, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/cond.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/reduce.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _arity2 = _interopRequireDefault(require(\"./internal/_arity\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1\"));\n\nvar _map = _interopRequireDefault(require(\"./map\"));\n\nvar _max = _interopRequireDefault(require(\"./max\"));\n\nvar _reduce = _interopRequireDefault(require(\"./reduce\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond =\n/*#__PURE__*/\n(0, _curry.default)(function cond(pairs) {\n  var arity = (0, _reduce.default)(_max.default, 0, (0, _map.default)(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return (0, _arity2.default)(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\nvar _default = cond;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 16, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 5, "column": 0 }
                },
                {
                    "generated": { "line": 20, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 7, "column": 0 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 0 }
                },
                {
                    "name": "cond",
                    "generated": { "line": 46, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "generated": { "line": 46, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 8 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 11 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 24 }
                },
                {
                    "generated": { "line": 48, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 32 }
                },
                {
                    "name": "cond",
                    "generated": { "line": 48, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 41 }
                },
                {
                    "generated": { "line": 48, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 32 }
                },
                {
                    "name": "pairs",
                    "generated": { "line": 48, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 46 }
                },
                {
                    "generated": { "line": 48, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 32 }
                },
                {
                    "generated": { "line": 48, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 53 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 2 }
                },
                {
                    "name": "arity",
                    "generated": { "line": 49, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 6 }
                },
                {
                    "generated": { "line": 49, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 11 }
                },
                {
                    "generated": { "line": 49, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 14 }
                },
                {
                    "name": "max",
                    "generated": { "line": 49, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 21 }
                },
                {
                    "generated": { "line": 49, "column": 47 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 14 }
                },
                {
                    "generated": { "line": 49, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 26 }
                },
                {
                    "generated": { "line": 49, "column": 50 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 14 }
                },
                {
                    "generated": { "line": 49, "column": 52 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 29 }
                },
                {
                    "generated": { "line": 49, "column": 70 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 33 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 49, "column": 80 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 43 }
                },
                {
                    "generated": { "line": 49, "column": 84 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 33 }
                },
                {
                    "generated": { "line": 49, "column": 86 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 49 }
                },
                {
                    "generated": { "line": 50, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 35, "column": 4 }
                },
                {
                    "name": "pair",
                    "generated": { "line": 50, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 35, "column": 11 }
                },
                {
                    "generated": { "line": 50, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 35, "column": 15 }
                },
                {
                    "generated": { "line": 50, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 35, "column": 16 }
                },
                {
                    "generated": { "line": 50, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 35, "column": 15 }
                },
                {
                    "generated": { "line": 50, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 35, "column": 11 }
                },
                {
                    "name": "length",
                    "generated": { "line": 50, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 35, "column": 19 }
                },
                {
                    "generated": { "line": 50, "column": 25 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 35, "column": 4 }
                },
                {
                    "generated": { "line": 51, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 36, "column": 3 }
                },
                {
                    "generated": { "line": 51, "column": 3 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 29 }
                },
                {
                    "name": "pairs",
                    "generated": { "line": 51, "column": 5 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 36, "column": 5 }
                },
                {
                    "generated": { "line": 51, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 29 }
                },
                {
                    "generated": { "line": 51, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 14 }
                },
                {
                    "generated": { "line": 51, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 34, "column": 2 }
                },
                {
                    "generated": { "line": 52, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 37, "column": 2 }
                },
                {
                    "generated": { "line": 52, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 37, "column": 9 }
                },
                {
                    "name": "arity",
                    "generated": { "line": 52, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 37, "column": 16 }
                },
                {
                    "generated": { "line": 52, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 37, "column": 9 }
                },
                {
                    "generated": { "line": 52, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 37, "column": 23 }
                },
                {
                    "generated": { "line": 52, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 37, "column": 35 }
                },
                {
                    "generated": { "line": 53, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 38, "column": 4 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 53, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 38, "column": 8 }
                },
                {
                    "generated": { "line": 53, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 38, "column": 11 }
                },
                {
                    "generated": { "line": 53, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 38, "column": 14 }
                },
                {
                    "generated": { "line": 53, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 38, "column": 4 }
                },
                {
                    "generated": { "line": 55, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 39, "column": 4 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 55, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 39, "column": 11 }
                },
                {
                    "generated": { "line": 55, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 39, "column": 14 }
                },
                {
                    "name": "pairs",
                    "generated": { "line": 55, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 39, "column": 17 }
                },
                {
                    "generated": { "line": 55, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 39, "column": 22 }
                },
                {
                    "name": "length",
                    "generated": { "line": 55, "column": 23 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 39, "column": 23 }
                },
                {
                    "generated": { "line": 55, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 39, "column": 4 }
                },
                {
                    "generated": { "line": 55, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 39, "column": 31 }
                },
                {
                    "generated": { "line": 56, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 6 }
                },
                {
                    "name": "pairs",
                    "generated": { "line": 56, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 10 }
                },
                {
                    "generated": { "line": 56, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 15 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 56, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 16 }
                },
                {
                    "generated": { "line": 56, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 15 }
                },
                {
                    "generated": { "line": 56, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 10 }
                },
                {
                    "generated": { "line": 56, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 21 }
                },
                {
                    "generated": { "line": 56, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 10 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 56, "column": 24 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 24 }
                },
                {
                    "generated": { "line": 56, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 10 }
                },
                {
                    "generated": { "line": 56, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 30 }
                },
                {
                    "generated": { "line": 56, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 10 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 56, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 36 }
                },
                {
                    "generated": { "line": 56, "column": 45 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 10 }
                },
                {
                    "generated": { "line": 56, "column": 46 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 6 }
                },
                {
                    "generated": { "line": 56, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 40, "column": 48 }
                },
                {
                    "generated": { "line": 57, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 8 }
                },
                {
                    "name": "pairs",
                    "generated": { "line": 57, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 15 }
                },
                {
                    "generated": { "line": 57, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 20 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 57, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 21 }
                },
                {
                    "generated": { "line": 57, "column": 24 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 20 }
                },
                {
                    "generated": { "line": 57, "column": 25 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 15 }
                },
                {
                    "generated": { "line": 57, "column": 26 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 26 }
                },
                {
                    "generated": { "line": 57, "column": 27 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 15 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 57, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 29 }
                },
                {
                    "generated": { "line": 57, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 15 }
                },
                {
                    "generated": { "line": 57, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 35 }
                },
                {
                    "generated": { "line": 57, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 15 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 57, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 41 }
                },
                {
                    "generated": { "line": 57, "column": 50 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 15 }
                },
                {
                    "generated": { "line": 57, "column": 51 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 41, "column": 8 }
                },
                {
                    "generated": { "line": 58, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 42, "column": 7 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 60, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 43, "column": 6 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 60, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 43, "column": 6 }
                },
                {
                    "generated": { "line": 60, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 43, "column": 9 }
                },
                {
                    "generated": { "line": 60, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 43, "column": 13 }
                },
                {
                    "generated": { "line": 60, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 43, "column": 6 }
                },
                {
                    "generated": { "line": 61, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 44, "column": 5 }
                },
                {
                    "generated": { "line": 62, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 45, "column": 3 }
                },
                {
                    "generated": { "line": 62, "column": 3 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 37, "column": 9 }
                },
                {
                    "generated": { "line": 62, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 37, "column": 2 }
                },
                {
                    "generated": { "line": 63, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 46, "column": 1 }
                },
                {
                    "generated": { "line": 63, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 24 }
                },
                {
                    "generated": { "line": 63, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 33, "column": 0 }
                },
                {
                    "name": "cond",
                    "generated": { "line": 64, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/cond.js",
                    "original": { "line": 47, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/cond.js": "import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport map from './map';\nimport max from './max';\nimport reduce from './reduce';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "dfd51549752301c67d83349a21e8cdda",
    "cacheData": { "env": {} }
}
