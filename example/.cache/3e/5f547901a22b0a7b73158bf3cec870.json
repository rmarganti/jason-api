{
    "id": "../node_modules/ramda/es/append.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_concat.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/append.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_concat.js"
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/append.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _concat2 = _interopRequireDefault(require(\"./internal/_concat.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append =\n/*#__PURE__*/\n(0, _curry.default)(function append(el, list) {\n  return (0, _concat2.default)(list, [el]);\n});\nvar _default = append;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 0 }
                },
                {
                    "name": "append",
                    "generated": { "line": 34, "column": 4 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 4 }
                },
                {
                    "generated": { "line": 34, "column": 10 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 10 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 13 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 26 }
                },
                {
                    "generated": { "line": 36, "column": 20 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 34 }
                },
                {
                    "name": "append",
                    "generated": { "line": 36, "column": 29 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 43 }
                },
                {
                    "generated": { "line": 36, "column": 35 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 34 }
                },
                {
                    "name": "el",
                    "generated": { "line": 36, "column": 36 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 50 }
                },
                {
                    "generated": { "line": 36, "column": 38 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 34 }
                },
                {
                    "name": "list",
                    "generated": { "line": 36, "column": 40 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 54 }
                },
                {
                    "generated": { "line": 36, "column": 44 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 34 }
                },
                {
                    "generated": { "line": 36, "column": 46 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 60 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 25, "column": 2 }
                },
                {
                    "generated": { "line": 37, "column": 9 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 25, "column": 9 }
                },
                {
                    "name": "list",
                    "generated": { "line": 37, "column": 31 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 25, "column": 17 }
                },
                {
                    "generated": { "line": 37, "column": 35 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 25, "column": 9 }
                },
                {
                    "generated": { "line": 37, "column": 37 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 25, "column": 23 }
                },
                {
                    "name": "el",
                    "generated": { "line": 37, "column": 38 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 25, "column": 24 }
                },
                {
                    "generated": { "line": 37, "column": 40 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 25, "column": 23 }
                },
                {
                    "generated": { "line": 37, "column": 41 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 25, "column": 9 }
                },
                {
                    "generated": { "line": 37, "column": 42 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 25, "column": 2 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 26, "column": 1 }
                },
                {
                    "generated": { "line": 38, "column": 1 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 26 }
                },
                {
                    "generated": { "line": 38, "column": 2 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 24, "column": 0 }
                },
                {
                    "name": "append",
                    "generated": { "line": 39, "column": 15 },
                    "source": "../node_modules/ramda/es/append.js",
                    "original": { "line": 27, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/append.js": "import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "d508e4d1fae427577fa5a90f8a0c6ec5",
    "cacheData": { "env": {} }
}
