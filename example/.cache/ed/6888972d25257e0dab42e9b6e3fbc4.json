{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo =\n/*#__PURE__*/\n(0, _curry.default)(function modulo(a, b) {\n  return a % b;\n});\nvar _default = modulo;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 0 }
                },
                {
                    "name": "modulo",
                    "generated": { "line": 37, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 4 }
                },
                {
                    "generated": { "line": 37, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 10 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 13 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 26 }
                },
                {
                    "generated": { "line": 39, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "name": "modulo",
                    "generated": { "line": 39, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 43 }
                },
                {
                    "generated": { "line": 39, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "name": "a",
                    "generated": { "line": 39, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 50 }
                },
                {
                    "generated": { "line": 39, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "name": "b",
                    "generated": { "line": 39, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 53 }
                },
                {
                    "generated": { "line": 39, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 34 }
                },
                {
                    "generated": { "line": 39, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 56 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "name": "a",
                    "generated": { "line": 40, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "generated": { "line": 40, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 29, "column": 10 }
                },
                {
                    "name": "b",
                    "generated": { "line": 40, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 29, "column": 13 }
                },
                {
                    "generated": { "line": 40, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 30, "column": 1 }
                },
                {
                    "generated": { "line": 41, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 26 }
                },
                {
                    "generated": { "line": 41, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 28, "column": 0 }
                },
                {
                    "name": "modulo",
                    "generated": { "line": 42, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js",
                    "original": { "line": 31, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/modulo.js": "import _curry2 from './internal/_curry2';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "7c9a49d65c1707e2b1086c769d20237e",
    "cacheData": { "env": {} }
}
