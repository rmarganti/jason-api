{"id":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","dependencies":[{"name":"/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json","includedInParent":true,"mtime":1559061771000},{"name":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json","includedInParent":true,"mtime":1558467235000},{"name":"./internal/_arity","loc":{"line":1,"column":19},"parent":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","resolved":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_arity.js"},{"name":"./internal/_curry2","loc":{"line":2,"column":20},"parent":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","resolved":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"},{"name":"./internal/_has","loc":{"line":3,"column":17},"parent":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","resolved":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_has.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _arity2 = _interopRequireDefault(require(\"./internal/_arity\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nvar _has2 = _interopRequireDefault(require(\"./internal/_has\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith =\n/*#__PURE__*/\n(0, _curry.default)(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return (0, _arity2.default)(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n\n    if (!(0, _has2.default)(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n\n    return cache[key];\n  });\n});\nvar _default = memoizeWith;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":5,"column":0}},{"generated":{"line":45,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":0}},{"name":"memoizeWith","generated":{"line":45,"column":4},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":4}},{"generated":{"line":45,"column":15},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":15}},{"generated":{"line":46,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":18}},{"generated":{"line":47,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":31}},{"generated":{"line":47,"column":20},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":39}},{"name":"memoizeWith","generated":{"line":47,"column":29},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":48}},{"generated":{"line":47,"column":40},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":39}},{"name":"mFn","generated":{"line":47,"column":41},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":60}},{"generated":{"line":47,"column":44},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":39}},{"name":"fn","generated":{"line":47,"column":46},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":65}},{"generated":{"line":47,"column":48},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":39}},{"generated":{"line":47,"column":50},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":69}},{"generated":{"line":48,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":35,"column":2}},{"name":"cache","generated":{"line":48,"column":6},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":35,"column":6}},{"generated":{"line":48,"column":11},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":35,"column":11}},{"generated":{"line":48,"column":14},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":35,"column":14}},{"generated":{"line":48,"column":16},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":35,"column":2}},{"generated":{"line":49,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":36,"column":2}},{"generated":{"line":49,"column":9},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":36,"column":9}},{"name":"fn","generated":{"line":49,"column":30},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":36,"column":16}},{"generated":{"line":49,"column":32},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":36,"column":18}},{"name":"length","generated":{"line":49,"column":33},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":36,"column":19}},{"generated":{"line":49,"column":39},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":36,"column":9}},{"generated":{"line":49,"column":41},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":36,"column":27}},{"generated":{"line":49,"column":53},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":36,"column":39}},{"generated":{"line":50,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":4}},{"name":"key","generated":{"line":50,"column":8},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":8}},{"generated":{"line":50,"column":11},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":11}},{"name":"mFn","generated":{"line":50,"column":14},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":14}},{"generated":{"line":50,"column":17},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":17}},{"name":"apply","generated":{"line":50,"column":18},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":18}},{"generated":{"line":50,"column":23},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":14}},{"generated":{"line":50,"column":24},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":24}},{"generated":{"line":50,"column":28},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":14}},{"name":"arguments","generated":{"line":50,"column":30},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":30}},{"generated":{"line":50,"column":39},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":14}},{"generated":{"line":50,"column":40},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":37,"column":4}},{"generated":{"line":52,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":38,"column":4}},{"generated":{"line":52,"column":8},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":38,"column":8}},{"generated":{"line":52,"column":9},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":38,"column":9}},{"name":"key","generated":{"line":52,"column":28},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":38,"column":14}},{"generated":{"line":52,"column":31},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":38,"column":9}},{"name":"cache","generated":{"line":52,"column":33},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":38,"column":19}},{"generated":{"line":52,"column":38},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":38,"column":9}},{"generated":{"line":52,"column":39},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":38,"column":4}},{"generated":{"line":52,"column":41},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":38,"column":27}},{"name":"cache","generated":{"line":53,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":6}},{"name":"cache","generated":{"line":53,"column":6},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":6}},{"generated":{"line":53,"column":11},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":11}},{"name":"key","generated":{"line":53,"column":12},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":12}},{"generated":{"line":53,"column":15},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":11}},{"generated":{"line":53,"column":16},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":6}},{"name":"fn","generated":{"line":53,"column":19},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":19}},{"generated":{"line":53,"column":21},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":21}},{"name":"apply","generated":{"line":53,"column":22},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":22}},{"generated":{"line":53,"column":27},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":19}},{"generated":{"line":53,"column":28},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":28}},{"generated":{"line":53,"column":32},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":19}},{"name":"arguments","generated":{"line":53,"column":34},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":34}},{"generated":{"line":53,"column":43},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":19}},{"generated":{"line":53,"column":44},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":39,"column":6}},{"generated":{"line":54,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":40,"column":5}},{"generated":{"line":56,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":41,"column":4}},{"name":"cache","generated":{"line":56,"column":11},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":41,"column":11}},{"generated":{"line":56,"column":16},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":41,"column":16}},{"name":"key","generated":{"line":56,"column":17},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":41,"column":17}},{"generated":{"line":56,"column":20},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":41,"column":16}},{"generated":{"line":56,"column":21},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":41,"column":4}},{"generated":{"line":57,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":42,"column":3}},{"generated":{"line":57,"column":3},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":36,"column":9}},{"generated":{"line":57,"column":4},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":36,"column":2}},{"generated":{"line":58,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":43,"column":1}},{"generated":{"line":58,"column":1},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":31}},{"generated":{"line":58,"column":2},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":34,"column":0}},{"name":"memoizeWith","generated":{"line":59,"column":15},"source":"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js","original":{"line":44,"column":15}}],"sources":{"../node_modules/ts-json-api/node_modules/ramda/es/memoizeWith.js":"import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;"},"lineCount":null}},"error":null,"hash":"3e31f1e2b6630f2916fe97659cf9e51f","cacheData":{"env":{}}}