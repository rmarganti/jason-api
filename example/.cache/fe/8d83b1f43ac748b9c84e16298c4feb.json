{"id":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","dependencies":[{"name":"/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json","includedInParent":true,"mtime":1559061771000},{"name":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json","includedInParent":true,"mtime":1558467235000},{"name":"./internal/_curry3","loc":{"line":1,"column":20},"parent":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","resolved":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry3.js"},{"name":"./internal/_has","loc":{"line":2,"column":17},"parent":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","resolved":"/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_has.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3\"));\n\nvar _has2 = _interopRequireDefault(require(\"./internal/_has\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey =\n/*#__PURE__*/\n(0, _curry.default)(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if ((0, _has2.default)(k, l)) {\n      result[k] = (0, _has2.default)(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if ((0, _has2.default)(k, r) && !(0, _has2.default)(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nvar _default = mergeWithKey;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":4,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":0}},{"name":"mergeWithKey","generated":{"line":39,"column":4},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":4}},{"generated":{"line":39,"column":16},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":16}},{"generated":{"line":40,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":19}},{"generated":{"line":41,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":32}},{"generated":{"line":41,"column":20},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":40}},{"name":"mergeWithKey","generated":{"line":41,"column":29},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":49}},{"generated":{"line":41,"column":41},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":40}},{"name":"fn","generated":{"line":41,"column":42},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":62}},{"generated":{"line":41,"column":44},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":40}},{"name":"l","generated":{"line":41,"column":46},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":66}},{"generated":{"line":41,"column":47},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":40}},{"name":"r","generated":{"line":41,"column":49},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":69}},{"generated":{"line":41,"column":50},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":40}},{"generated":{"line":41,"column":52},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":72}},{"generated":{"line":42,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":30,"column":2}},{"name":"result","generated":{"line":42,"column":6},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":30,"column":6}},{"generated":{"line":42,"column":12},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":30,"column":12}},{"generated":{"line":42,"column":15},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":30,"column":15}},{"generated":{"line":42,"column":17},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":30,"column":2}},{"generated":{"line":43,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":31,"column":2}},{"name":"k","generated":{"line":43,"column":6},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":31,"column":6}},{"generated":{"line":43,"column":7},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":31,"column":2}},{"generated":{"line":45,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":33,"column":2}},{"name":"k","generated":{"line":45,"column":7},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":33,"column":7}},{"generated":{"line":45,"column":8},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":33,"column":2}},{"name":"l","generated":{"line":45,"column":12},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":33,"column":12}},{"generated":{"line":45,"column":13},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":33,"column":2}},{"generated":{"line":45,"column":15},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":33,"column":15}},{"generated":{"line":46,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":34,"column":4}},{"generated":{"line":46,"column":8},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":34,"column":8}},{"name":"k","generated":{"line":46,"column":27},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":34,"column":13}},{"generated":{"line":46,"column":28},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":34,"column":8}},{"name":"l","generated":{"line":46,"column":30},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":34,"column":16}},{"generated":{"line":46,"column":31},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":34,"column":8}},{"generated":{"line":46,"column":32},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":34,"column":4}},{"generated":{"line":46,"column":34},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":34,"column":20}},{"name":"result","generated":{"line":47,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":6}},{"name":"result","generated":{"line":47,"column":6},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":6}},{"generated":{"line":47,"column":12},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":12}},{"name":"k","generated":{"line":47,"column":13},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":13}},{"generated":{"line":47,"column":14},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":12}},{"generated":{"line":47,"column":15},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":6}},{"generated":{"line":47,"column":18},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":18}},{"name":"k","generated":{"line":47,"column":37},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":23}},{"generated":{"line":47,"column":38},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":18}},{"name":"r","generated":{"line":47,"column":40},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":26}},{"generated":{"line":47,"column":41},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":18}},{"name":"fn","generated":{"line":47,"column":45},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":31}},{"generated":{"line":47,"column":47},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":33}},{"name":"k","generated":{"line":47,"column":48},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":34}},{"generated":{"line":47,"column":49},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":33}},{"name":"l","generated":{"line":47,"column":51},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":37}},{"generated":{"line":47,"column":52},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":38}},{"name":"k","generated":{"line":47,"column":53},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":39}},{"generated":{"line":47,"column":54},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":38}},{"generated":{"line":47,"column":55},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":33}},{"name":"r","generated":{"line":47,"column":57},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":43}},{"generated":{"line":47,"column":58},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":44}},{"name":"k","generated":{"line":47,"column":59},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":45}},{"generated":{"line":47,"column":60},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":44}},{"generated":{"line":47,"column":61},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":33}},{"generated":{"line":47,"column":62},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":18}},{"name":"l","generated":{"line":47,"column":65},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":51}},{"generated":{"line":47,"column":66},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":52}},{"name":"k","generated":{"line":47,"column":67},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":53}},{"generated":{"line":47,"column":68},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":52}},{"generated":{"line":47,"column":69},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":35,"column":6}},{"generated":{"line":48,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":36,"column":5}},{"generated":{"line":49,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":37,"column":3}},{"generated":{"line":51,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":39,"column":2}},{"name":"k","generated":{"line":51,"column":7},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":39,"column":7}},{"generated":{"line":51,"column":8},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":39,"column":2}},{"name":"r","generated":{"line":51,"column":12},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":39,"column":12}},{"generated":{"line":51,"column":13},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":39,"column":2}},{"generated":{"line":51,"column":15},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":39,"column":15}},{"generated":{"line":52,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":4}},{"generated":{"line":52,"column":8},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":8}},{"name":"k","generated":{"line":52,"column":27},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":13}},{"generated":{"line":52,"column":28},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":8}},{"name":"r","generated":{"line":52,"column":30},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":16}},{"generated":{"line":52,"column":31},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":8}},{"generated":{"line":52,"column":36},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":22}},{"generated":{"line":52,"column":37},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":23}},{"name":"k","generated":{"line":52,"column":56},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":28}},{"generated":{"line":52,"column":57},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":23}},{"name":"result","generated":{"line":52,"column":59},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":31}},{"generated":{"line":52,"column":65},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":23}},{"generated":{"line":52,"column":66},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":4}},{"generated":{"line":52,"column":68},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":40,"column":40}},{"name":"result","generated":{"line":53,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":41,"column":6}},{"name":"result","generated":{"line":53,"column":6},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":41,"column":6}},{"generated":{"line":53,"column":12},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":41,"column":12}},{"name":"k","generated":{"line":53,"column":13},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":41,"column":13}},{"generated":{"line":53,"column":14},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":41,"column":12}},{"generated":{"line":53,"column":15},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":41,"column":6}},{"name":"r","generated":{"line":53,"column":18},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":41,"column":18}},{"generated":{"line":53,"column":19},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":41,"column":19}},{"name":"k","generated":{"line":53,"column":20},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":41,"column":20}},{"generated":{"line":53,"column":21},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":41,"column":19}},{"generated":{"line":53,"column":22},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":41,"column":6}},{"generated":{"line":54,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":42,"column":5}},{"generated":{"line":55,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":43,"column":3}},{"generated":{"line":57,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":45,"column":2}},{"name":"result","generated":{"line":57,"column":9},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":45,"column":9}},{"generated":{"line":57,"column":15},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":45,"column":2}},{"generated":{"line":58,"column":0},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":46,"column":1}},{"generated":{"line":58,"column":1},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":32}},{"generated":{"line":58,"column":2},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":29,"column":0}},{"name":"mergeWithKey","generated":{"line":59,"column":15},"source":"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js","original":{"line":47,"column":15}}],"sources":{"../node_modules/ts-json-api/node_modules/ramda/es/mergeWithKey.js":"import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;"},"lineCount":null}},"error":null,"hash":"75a99f6f012a88b07157419f4d38dd06","cacheData":{"env":{}}}