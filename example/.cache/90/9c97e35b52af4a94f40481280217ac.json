{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry3",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/o.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry3.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o =\n/*#__PURE__*/\n(0, _curry.default)(function o(f, g, x) {\n  return f(g(x));\n});\nvar _default = o;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 0 }
                },
                {
                    "name": "o",
                    "generated": { "line": 37, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 4 }
                },
                {
                    "generated": { "line": 37, "column": 5 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 5 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 8 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 21 }
                },
                {
                    "generated": { "line": 39, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 29 }
                },
                {
                    "name": "o",
                    "generated": { "line": 39, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 38 }
                },
                {
                    "generated": { "line": 39, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 29 }
                },
                {
                    "name": "f",
                    "generated": { "line": 39, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 40 }
                },
                {
                    "generated": { "line": 39, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 29 }
                },
                {
                    "name": "g",
                    "generated": { "line": 39, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 43 }
                },
                {
                    "generated": { "line": 39, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 29 }
                },
                {
                    "name": "x",
                    "generated": { "line": 39, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 46 }
                },
                {
                    "generated": { "line": 39, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 29 }
                },
                {
                    "generated": { "line": 39, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 49 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "name": "f",
                    "generated": { "line": 40, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 29, "column": 9 }
                },
                {
                    "generated": { "line": 40, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 29, "column": 10 }
                },
                {
                    "name": "g",
                    "generated": { "line": 40, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 29, "column": 11 }
                },
                {
                    "generated": { "line": 40, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 29, "column": 12 }
                },
                {
                    "name": "x",
                    "generated": { "line": 40, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 29, "column": 13 }
                },
                {
                    "generated": { "line": 40, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 29, "column": 12 }
                },
                {
                    "generated": { "line": 40, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 29, "column": 10 }
                },
                {
                    "generated": { "line": 40, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 30, "column": 1 }
                },
                {
                    "generated": { "line": 41, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 21 }
                },
                {
                    "generated": { "line": 41, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 28, "column": 0 }
                },
                {
                    "name": "o",
                    "generated": { "line": 42, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/o.js",
                    "original": { "line": 31, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/o.js": "import _curry3 from './internal/_curry3';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "93d98cbd211ae282093f0ee850b6c625",
    "cacheData": { "env": {} }
}
