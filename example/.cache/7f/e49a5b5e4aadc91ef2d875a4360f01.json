{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./chain",
            "loc": { "line": 1, "column": 18 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/chain.js"
        },
        {
            "name": "./compose",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/compose.js"
        },
        {
            "name": "./map",
            "loc": { "line": 3, "column": 16 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/map.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = composeK;\n\nvar _chain = _interopRequireDefault(require(\"./chain\"));\n\nvar _compose = _interopRequireDefault(require(\"./compose\"));\n\nvar _map = _interopRequireDefault(require(\"./map\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nfunction composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return (0, _compose.default)(_compose.default.apply(this, (0, _map.default)(_chain.default, init)), last);\n}"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 16, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 5, "column": 0 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 35, "column": 15 }
                },
                {
                    "name": "composeK",
                    "generated": { "line": 46, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 35, "column": 24 }
                },
                {
                    "generated": { "line": 46, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 35, "column": 15 }
                },
                {
                    "generated": { "line": 46, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 35, "column": 35 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 36, "column": 2 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 47, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 36, "column": 6 }
                },
                {
                    "generated": { "line": 47, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 36, "column": 15 }
                },
                {
                    "name": "length",
                    "generated": { "line": 47, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 36, "column": 16 }
                },
                {
                    "generated": { "line": 47, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 36, "column": 6 }
                },
                {
                    "generated": { "line": 47, "column": 27 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 36, "column": 27 }
                },
                {
                    "generated": { "line": 47, "column": 28 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 36, "column": 2 }
                },
                {
                    "generated": { "line": 47, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 36, "column": 30 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 37, "column": 4 }
                },
                {
                    "generated": { "line": 48, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 37, "column": 10 }
                },
                {
                    "name": "Error",
                    "generated": { "line": 48, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 37, "column": 14 }
                },
                {
                    "generated": { "line": 48, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 37, "column": 10 }
                },
                {
                    "generated": { "line": 48, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 37, "column": 20 }
                },
                {
                    "generated": { "line": 48, "column": 61 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 37, "column": 10 }
                },
                {
                    "generated": { "line": 48, "column": 62 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 37, "column": 4 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 38, "column": 3 }
                },
                {
                    "generated": { "line": 51, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 2 }
                },
                {
                    "name": "init",
                    "generated": { "line": 51, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 6 }
                },
                {
                    "generated": { "line": 51, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 10 }
                },
                {
                    "name": "Array",
                    "generated": { "line": 51, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 13 }
                },
                {
                    "generated": { "line": 51, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 18 }
                },
                {
                    "name": "prototype",
                    "generated": { "line": 51, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 19 }
                },
                {
                    "generated": { "line": 51, "column": 28 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 13 }
                },
                {
                    "name": "slice",
                    "generated": { "line": 51, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 29 }
                },
                {
                    "generated": { "line": 51, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 13 }
                },
                {
                    "name": "call",
                    "generated": { "line": 51, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 35 }
                },
                {
                    "generated": { "line": 51, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 13 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 51, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 40 }
                },
                {
                    "generated": { "line": 51, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 13 }
                },
                {
                    "generated": { "line": 51, "column": 50 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 39, "column": 2 }
                },
                {
                    "generated": { "line": 52, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 40, "column": 2 }
                },
                {
                    "name": "last",
                    "generated": { "line": 52, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 40, "column": 6 }
                },
                {
                    "generated": { "line": 52, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 40, "column": 10 }
                },
                {
                    "name": "init",
                    "generated": { "line": 52, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 40, "column": 13 }
                },
                {
                    "generated": { "line": 52, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 40, "column": 17 }
                },
                {
                    "name": "pop",
                    "generated": { "line": 52, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 40, "column": 18 }
                },
                {
                    "generated": { "line": 52, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 40, "column": 13 }
                },
                {
                    "generated": { "line": 52, "column": 23 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 40, "column": 2 }
                },
                {
                    "generated": { "line": 53, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 2 }
                },
                {
                    "generated": { "line": 53, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 9 }
                },
                {
                    "name": "compose",
                    "generated": { "line": 53, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 17 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 53, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 25 }
                },
                {
                    "generated": { "line": 53, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 17 }
                },
                {
                    "generated": { "line": 53, "column": 54 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 31 }
                },
                {
                    "generated": { "line": 53, "column": 58 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 17 }
                },
                {
                    "generated": { "line": 53, "column": 60 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 37 }
                },
                {
                    "name": "chain",
                    "generated": { "line": 53, "column": 78 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 41 }
                },
                {
                    "generated": { "line": 53, "column": 92 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 37 }
                },
                {
                    "name": "init",
                    "generated": { "line": 53, "column": 94 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 48 }
                },
                {
                    "generated": { "line": 53, "column": 98 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 37 }
                },
                {
                    "generated": { "line": 53, "column": 99 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 17 }
                },
                {
                    "generated": { "line": 53, "column": 100 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 9 }
                },
                {
                    "name": "last",
                    "generated": { "line": 53, "column": 102 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 56 }
                },
                {
                    "generated": { "line": 53, "column": 106 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 9 }
                },
                {
                    "generated": { "line": 53, "column": 107 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 41, "column": 2 }
                },
                {
                    "generated": { "line": 54, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js",
                    "original": { "line": 42, "column": 1 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/composeK.js": "import chain from './chain';\nimport compose from './compose';\nimport map from './map';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "ae18215183ad1494dc5317538f7d1643",
    "cacheData": { "env": {} }
}
