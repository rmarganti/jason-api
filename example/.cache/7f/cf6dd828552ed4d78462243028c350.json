{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry1",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/construct.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry1.js"
        },
        {
            "name": "./constructN",
            "loc": { "line": 2, "column": 23 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/construct.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/constructN.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1\"));\n\nvar _constructN = _interopRequireDefault(require(\"./constructN\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct =\n/*#__PURE__*/\n(0, _curry.default)(function construct(Fn) {\n  return (0, _constructN.default)(Fn.length, Fn);\n});\nvar _default = construct;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 0 }
                },
                {
                    "name": "construct",
                    "generated": { "line": 46, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 4 }
                },
                {
                    "generated": { "line": 46, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 13 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 16 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 29 }
                },
                {
                    "generated": { "line": 48, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 37 }
                },
                {
                    "name": "construct",
                    "generated": { "line": 48, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 46 }
                },
                {
                    "generated": { "line": 48, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 37 }
                },
                {
                    "name": "Fn",
                    "generated": { "line": 48, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 56 }
                },
                {
                    "generated": { "line": 48, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 37 }
                },
                {
                    "generated": { "line": 48, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 60 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 37, "column": 2 }
                },
                {
                    "generated": { "line": 49, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 37, "column": 9 }
                },
                {
                    "name": "Fn",
                    "generated": { "line": 49, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 37, "column": 20 }
                },
                {
                    "generated": { "line": 49, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 37, "column": 22 }
                },
                {
                    "name": "length",
                    "generated": { "line": 49, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 37, "column": 23 }
                },
                {
                    "generated": { "line": 49, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 37, "column": 9 }
                },
                {
                    "name": "Fn",
                    "generated": { "line": 49, "column": 45 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 37, "column": 31 }
                },
                {
                    "generated": { "line": 49, "column": 47 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 37, "column": 9 }
                },
                {
                    "generated": { "line": 49, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 37, "column": 2 }
                },
                {
                    "generated": { "line": 50, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 38, "column": 1 }
                },
                {
                    "generated": { "line": 50, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 29 }
                },
                {
                    "generated": { "line": 50, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 36, "column": 0 }
                },
                {
                    "name": "construct",
                    "generated": { "line": 51, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/construct.js",
                    "original": { "line": 39, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/construct.js": "import _curry1 from './internal/_curry1';\nimport constructN from './constructN';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "3cb04bc095c5bed0e75f77b785161081",
    "cacheData": { "env": {} }
}
