{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/converge.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./internal/_map",
            "loc": { "line": 2, "column": 17 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/converge.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_map.js"
        },
        {
            "name": "./curryN",
            "loc": { "line": 3, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/converge.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/curryN.js"
        },
        {
            "name": "./max",
            "loc": { "line": 4, "column": 16 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/converge.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/max.js"
        },
        {
            "name": "./pluck",
            "loc": { "line": 5, "column": 18 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/converge.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/pluck.js"
        },
        {
            "name": "./reduce",
            "loc": { "line": 6, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/converge.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/reduce.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nvar _map2 = _interopRequireDefault(require(\"./internal/_map\"));\n\nvar _curryN = _interopRequireDefault(require(\"./curryN\"));\n\nvar _max = _interopRequireDefault(require(\"./max\"));\n\nvar _pluck = _interopRequireDefault(require(\"./pluck\"));\n\nvar _reduce = _interopRequireDefault(require(\"./reduce\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge =\n/*#__PURE__*/\n(0, _curry.default)(function converge(after, fns) {\n  return (0, _curryN.default)((0, _reduce.default)(_max.default, 0, (0, _pluck.default)('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, (0, _map2.default)(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nvar _default = converge;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 16, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 5, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 22, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 8, "column": 0 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 0 }
                },
                {
                    "name": "converge",
                    "generated": { "line": 49, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 4 }
                },
                {
                    "generated": { "line": 49, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 12 }
                },
                {
                    "generated": { "line": 50, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 15 }
                },
                {
                    "generated": { "line": 51, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 28 }
                },
                {
                    "generated": { "line": 51, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 36 }
                },
                {
                    "name": "converge",
                    "generated": { "line": 51, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 45 }
                },
                {
                    "generated": { "line": 51, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 36 }
                },
                {
                    "name": "after",
                    "generated": { "line": 51, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 54 }
                },
                {
                    "generated": { "line": 51, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 36 }
                },
                {
                    "name": "fns",
                    "generated": { "line": 51, "column": 45 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 61 }
                },
                {
                    "generated": { "line": 51, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 36 }
                },
                {
                    "generated": { "line": 51, "column": 50 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 66 }
                },
                {
                    "generated": { "line": 52, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 2 }
                },
                {
                    "generated": { "line": 52, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 9 }
                },
                {
                    "generated": { "line": 52, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 16 }
                },
                {
                    "name": "max",
                    "generated": { "line": 52, "column": 51 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 23 }
                },
                {
                    "generated": { "line": 52, "column": 63 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 16 }
                },
                {
                    "generated": { "line": 52, "column": 65 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 28 }
                },
                {
                    "generated": { "line": 52, "column": 66 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 16 }
                },
                {
                    "generated": { "line": 52, "column": 68 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 31 }
                },
                {
                    "generated": { "line": 52, "column": 88 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 37 }
                },
                {
                    "generated": { "line": 52, "column": 96 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 31 }
                },
                {
                    "name": "fns",
                    "generated": { "line": 52, "column": 98 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 47 }
                },
                {
                    "generated": { "line": 52, "column": 101 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 31 }
                },
                {
                    "generated": { "line": 52, "column": 102 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 16 }
                },
                {
                    "generated": { "line": 52, "column": 103 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 9 }
                },
                {
                    "generated": { "line": 52, "column": 105 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 54 }
                },
                {
                    "generated": { "line": 52, "column": 117 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 66 }
                },
                {
                    "generated": { "line": 53, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 37, "column": 4 }
                },
                {
                    "name": "args",
                    "generated": { "line": 53, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 37, "column": 8 }
                },
                {
                    "generated": { "line": 53, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 37, "column": 12 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 53, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 37, "column": 15 }
                },
                {
                    "generated": { "line": 53, "column": 24 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 37, "column": 4 }
                },
                {
                    "generated": { "line": 54, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 38, "column": 4 }
                },
                {
                    "name": "context",
                    "generated": { "line": 54, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 38, "column": 8 }
                },
                {
                    "generated": { "line": 54, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 38, "column": 15 }
                },
                {
                    "generated": { "line": 54, "column": 18 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 38, "column": 18 }
                },
                {
                    "generated": { "line": 54, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 38, "column": 4 }
                },
                {
                    "generated": { "line": 55, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 4 }
                },
                {
                    "name": "after",
                    "generated": { "line": 55, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 11 }
                },
                {
                    "generated": { "line": 55, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 16 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 55, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 17 }
                },
                {
                    "generated": { "line": 55, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 11 }
                },
                {
                    "name": "context",
                    "generated": { "line": 55, "column": 23 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 23 }
                },
                {
                    "generated": { "line": 55, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 11 }
                },
                {
                    "generated": { "line": 55, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 32 }
                },
                {
                    "generated": { "line": 55, "column": 51 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 37 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 55, "column": 61 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 47 }
                },
                {
                    "generated": { "line": 55, "column": 63 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 37 }
                },
                {
                    "generated": { "line": 55, "column": 65 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 51 }
                },
                {
                    "generated": { "line": 56, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 40, "column": 6 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 56, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 40, "column": 13 }
                },
                {
                    "generated": { "line": 56, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 40, "column": 15 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 56, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 40, "column": 16 }
                },
                {
                    "generated": { "line": 56, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 40, "column": 13 }
                },
                {
                    "name": "context",
                    "generated": { "line": 56, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 40, "column": 22 }
                },
                {
                    "generated": { "line": 56, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 40, "column": 13 }
                },
                {
                    "name": "args",
                    "generated": { "line": 56, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 40, "column": 31 }
                },
                {
                    "generated": { "line": 56, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 40, "column": 13 }
                },
                {
                    "generated": { "line": 56, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 40, "column": 6 }
                },
                {
                    "generated": { "line": 57, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 41, "column": 5 }
                },
                {
                    "generated": { "line": 57, "column": 5 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 32 }
                },
                {
                    "name": "fns",
                    "generated": { "line": 57, "column": 7 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 41, "column": 7 }
                },
                {
                    "generated": { "line": 57, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 32 }
                },
                {
                    "generated": { "line": 57, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 11 }
                },
                {
                    "generated": { "line": 57, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 39, "column": 4 }
                },
                {
                    "generated": { "line": 58, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 42, "column": 3 }
                },
                {
                    "generated": { "line": 58, "column": 3 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 9 }
                },
                {
                    "generated": { "line": 58, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 36, "column": 2 }
                },
                {
                    "generated": { "line": 59, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 43, "column": 1 }
                },
                {
                    "generated": { "line": 59, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 28 }
                },
                {
                    "generated": { "line": 59, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 35, "column": 0 }
                },
                {
                    "name": "converge",
                    "generated": { "line": 60, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/converge.js",
                    "original": { "line": 44, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/converge.js": "import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "6d78fd40a0fc86dcfda781babc846fb8",
    "cacheData": { "env": {} }
}
