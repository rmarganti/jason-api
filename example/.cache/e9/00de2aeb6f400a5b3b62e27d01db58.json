{
    "id": "../node_modules/ramda/es/union.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_concat.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/union.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_concat.js"
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/union.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./compose.js",
            "loc": { "line": 3, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/union.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/compose.js"
        },
        {
            "name": "./uniq.js",
            "loc": { "line": 4, "column": 17 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/union.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/uniq.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _concat2 = _interopRequireDefault(require(\"./internal/_concat.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _compose = _interopRequireDefault(require(\"./compose.js\"));\n\nvar _uniq = _interopRequireDefault(require(\"./uniq.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union =\n/*#__PURE__*/\n(0, _curry.default)(\n/*#__PURE__*/\n(0, _compose.default)(_uniq.default, _concat2.default));\nvar _default = union;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 0 }
                },
                {
                    "name": "union",
                    "generated": { "line": 35, "column": 4 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 4 }
                },
                {
                    "generated": { "line": 35, "column": 9 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 9 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 12 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 25 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 34 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 47 }
                },
                {
                    "name": "uniq",
                    "generated": { "line": 39, "column": 22 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 55 }
                },
                {
                    "generated": { "line": 39, "column": 35 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 47 }
                },
                {
                    "name": "_concat",
                    "generated": { "line": 39, "column": 37 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 61 }
                },
                {
                    "generated": { "line": 39, "column": 53 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 47 }
                },
                {
                    "generated": { "line": 39, "column": 54 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 25 }
                },
                {
                    "generated": { "line": 39, "column": 55 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 23, "column": 0 }
                },
                {
                    "name": "union",
                    "generated": { "line": 40, "column": 15 },
                    "source": "../node_modules/ramda/es/union.js",
                    "original": { "line": 24, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/union.js": "import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport compose from './compose.js';\nimport uniq from './uniq.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "865cc09ebf725c6ce8969d2e740d92d6",
    "cacheData": { "env": {} }
}
