{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry1",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/length.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry1.js"
        },
        {
            "name": "./internal/_isNumber",
            "loc": { "line": 2, "column": 22 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/length.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_isNumber.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1\"));\n\nvar _isNumber2 = _interopRequireDefault(require(\"./internal/_isNumber\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length =\n/*#__PURE__*/\n(0, _curry.default)(function length(list) {\n  return list != null && (0, _isNumber2.default)(list.length) ? list.length : NaN;\n});\nvar _default = length;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 29, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 0 }
                },
                {
                    "name": "length",
                    "generated": { "line": 29, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 4 }
                },
                {
                    "generated": { "line": 29, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 10 }
                },
                {
                    "generated": { "line": 30, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 13 }
                },
                {
                    "generated": { "line": 31, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 26 }
                },
                {
                    "generated": { "line": 31, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 34 }
                },
                {
                    "name": "length",
                    "generated": { "line": 31, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 43 }
                },
                {
                    "generated": { "line": 31, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 34 }
                },
                {
                    "name": "list",
                    "generated": { "line": 31, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 50 }
                },
                {
                    "generated": { "line": 31, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 34 }
                },
                {
                    "generated": { "line": 31, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 56 }
                },
                {
                    "generated": { "line": 32, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 2 }
                },
                {
                    "name": "list",
                    "generated": { "line": 32, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 9 }
                },
                {
                    "generated": { "line": 32, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 13 }
                },
                {
                    "generated": { "line": 32, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 17 }
                },
                {
                    "generated": { "line": 32, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 9 }
                },
                {
                    "generated": { "line": 32, "column": 25 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 25 }
                },
                {
                    "name": "list",
                    "generated": { "line": 32, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 35 }
                },
                {
                    "generated": { "line": 32, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 39 }
                },
                {
                    "name": "length",
                    "generated": { "line": 32, "column": 54 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 40 }
                },
                {
                    "generated": { "line": 32, "column": 60 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 25 }
                },
                {
                    "generated": { "line": 32, "column": 61 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 9 }
                },
                {
                    "name": "list",
                    "generated": { "line": 32, "column": 64 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 50 }
                },
                {
                    "generated": { "line": 32, "column": 68 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 54 }
                },
                {
                    "name": "length",
                    "generated": { "line": 32, "column": 69 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 55 }
                },
                {
                    "generated": { "line": 32, "column": 75 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 9 }
                },
                {
                    "name": "NaN",
                    "generated": { "line": 32, "column": 78 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 64 }
                },
                {
                    "generated": { "line": 32, "column": 81 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 20, "column": 2 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 21, "column": 1 }
                },
                {
                    "generated": { "line": 33, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 26 }
                },
                {
                    "generated": { "line": 33, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 19, "column": 0 }
                },
                {
                    "name": "length",
                    "generated": { "line": 34, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/length.js",
                    "original": { "line": 22, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/length.js": "import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "115dd9fc7eb395521725be02aebcab46",
    "cacheData": { "env": {} }
}
