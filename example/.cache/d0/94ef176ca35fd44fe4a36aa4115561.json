{
    "id": "../node_modules/ramda/es/tail.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_checkForMethod.js",
            "loc": { "line": 1, "column": 28 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/tail.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_checkForMethod.js"
        },
        {
            "name": "./internal/_curry1.js",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/tail.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry1.js"
        },
        {
            "name": "./slice.js",
            "loc": { "line": 3, "column": 18 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/tail.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/slice.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _checkForMethod2 = _interopRequireDefault(require(\"./internal/_checkForMethod.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail =\n/*#__PURE__*/\n(0, _curry.default)(\n/*#__PURE__*/\n(0, _checkForMethod2.default)('tail',\n/*#__PURE__*/\n(0, _slice.default)(1, Infinity)));\nvar _default = tail;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 16, "column": 0 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 5, "column": 0 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 0 }
                },
                {
                    "name": "tail",
                    "generated": { "line": 43, "column": 4 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "generated": { "line": 43, "column": 8 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 8 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 11 }
                },
                {
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 24 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 33 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 46 }
                },
                {
                    "generated": { "line": 47, "column": 30 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 62 }
                },
                {
                    "generated": { "line": 47, "column": 36 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 46 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 70 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 83 }
                },
                {
                    "generated": { "line": 49, "column": 20 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 89 }
                },
                {
                    "generated": { "line": 49, "column": 21 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 83 }
                },
                {
                    "name": "Infinity",
                    "generated": { "line": 49, "column": 23 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 92 }
                },
                {
                    "generated": { "line": 49, "column": 31 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 83 }
                },
                {
                    "generated": { "line": 49, "column": 32 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 46 }
                },
                {
                    "generated": { "line": 49, "column": 33 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 24 }
                },
                {
                    "generated": { "line": 49, "column": 34 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 32, "column": 0 }
                },
                {
                    "name": "tail",
                    "generated": { "line": 50, "column": 15 },
                    "source": "../node_modules/ramda/es/tail.js",
                    "original": { "line": 33, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/tail.js": "import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry1 from './internal/_curry1.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "acf0c0ac923f21cc91c60fc55218329b",
    "cacheData": { "env": {} }
}
