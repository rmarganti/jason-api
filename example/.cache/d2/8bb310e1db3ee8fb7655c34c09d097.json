{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry3",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry3.js"
        },
        {
            "name": "./curryN",
            "loc": { "line": 2, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/curryN.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3\"));\n\nvar _curryN = _interopRequireDefault(require(\"./curryN\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse =\n/*#__PURE__*/\n(0, _curry.default)(function ifElse(condition, onTrue, onFalse) {\n  return (0, _curryN.default)(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nvar _default = ifElse;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 0 }
                },
                {
                    "name": "ifElse",
                    "generated": { "line": 39, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 4 }
                },
                {
                    "generated": { "line": 39, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 10 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 13 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 26 }
                },
                {
                    "generated": { "line": 41, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 34 }
                },
                {
                    "name": "ifElse",
                    "generated": { "line": 41, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 43 }
                },
                {
                    "generated": { "line": 41, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 34 }
                },
                {
                    "name": "condition",
                    "generated": { "line": 41, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 50 }
                },
                {
                    "generated": { "line": 41, "column": 45 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 34 }
                },
                {
                    "name": "onTrue",
                    "generated": { "line": 41, "column": 47 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 61 }
                },
                {
                    "generated": { "line": 41, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 34 }
                },
                {
                    "name": "onFalse",
                    "generated": { "line": 41, "column": 55 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 69 }
                },
                {
                    "generated": { "line": 41, "column": 62 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 34 }
                },
                {
                    "generated": { "line": 41, "column": 64 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 78 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "generated": { "line": 42, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 9 }
                },
                {
                    "name": "Math",
                    "generated": { "line": 42, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 16 }
                },
                {
                    "generated": { "line": 42, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 20 }
                },
                {
                    "name": "max",
                    "generated": { "line": 42, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 21 }
                },
                {
                    "generated": { "line": 42, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 16 }
                },
                {
                    "name": "condition",
                    "generated": { "line": 42, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 25 }
                },
                {
                    "generated": { "line": 42, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 34 }
                },
                {
                    "name": "length",
                    "generated": { "line": 42, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 35 }
                },
                {
                    "generated": { "line": 42, "column": 55 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 16 }
                },
                {
                    "name": "onTrue",
                    "generated": { "line": 42, "column": 57 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 43 }
                },
                {
                    "generated": { "line": 42, "column": 63 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 49 }
                },
                {
                    "name": "length",
                    "generated": { "line": 42, "column": 64 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 50 }
                },
                {
                    "generated": { "line": 42, "column": 70 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 16 }
                },
                {
                    "name": "onFalse",
                    "generated": { "line": 42, "column": 72 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 58 }
                },
                {
                    "generated": { "line": 42, "column": 79 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 65 }
                },
                {
                    "name": "length",
                    "generated": { "line": 42, "column": 80 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 66 }
                },
                {
                    "generated": { "line": 42, "column": 86 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 16 }
                },
                {
                    "generated": { "line": 42, "column": 87 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 9 }
                },
                {
                    "generated": { "line": 42, "column": 89 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 75 }
                },
                {
                    "name": "_ifElse",
                    "generated": { "line": 42, "column": 98 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 84 }
                },
                {
                    "generated": { "line": 42, "column": 105 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 75 }
                },
                {
                    "generated": { "line": 42, "column": 108 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 94 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 4 }
                },
                {
                    "name": "condition",
                    "generated": { "line": 43, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 11 }
                },
                {
                    "generated": { "line": 43, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 20 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 43, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 21 }
                },
                {
                    "generated": { "line": 43, "column": 26 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 11 }
                },
                {
                    "generated": { "line": 43, "column": 27 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 27 }
                },
                {
                    "generated": { "line": 43, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 11 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 43, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 33 }
                },
                {
                    "generated": { "line": 43, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 11 }
                },
                {
                    "name": "onTrue",
                    "generated": { "line": 43, "column": 46 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 46 }
                },
                {
                    "generated": { "line": 43, "column": 52 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 52 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 43, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 53 }
                },
                {
                    "generated": { "line": 43, "column": 58 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 46 }
                },
                {
                    "generated": { "line": 43, "column": 59 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 59 }
                },
                {
                    "generated": { "line": 43, "column": 63 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 46 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 43, "column": 65 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 65 }
                },
                {
                    "generated": { "line": 43, "column": 74 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 46 }
                },
                {
                    "generated": { "line": 43, "column": 75 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 11 }
                },
                {
                    "name": "onFalse",
                    "generated": { "line": 43, "column": 78 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 78 }
                },
                {
                    "generated": { "line": 43, "column": 85 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 85 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 43, "column": 86 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 86 }
                },
                {
                    "generated": { "line": 43, "column": 91 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 78 }
                },
                {
                    "generated": { "line": 43, "column": 92 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 92 }
                },
                {
                    "generated": { "line": 43, "column": 96 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 78 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 43, "column": 98 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 98 }
                },
                {
                    "generated": { "line": 43, "column": 107 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 78 }
                },
                {
                    "generated": { "line": 43, "column": 108 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 31, "column": 4 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 32, "column": 3 }
                },
                {
                    "generated": { "line": 44, "column": 3 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 9 }
                },
                {
                    "generated": { "line": 44, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 33, "column": 1 }
                },
                {
                    "generated": { "line": 45, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 26 }
                },
                {
                    "generated": { "line": 45, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 29, "column": 0 }
                },
                {
                    "name": "ifElse",
                    "generated": { "line": 46, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js",
                    "original": { "line": 34, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/ifElse.js": "import _curry3 from './internal/_curry3';\nimport curryN from './curryN';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "87ca4db823880f12db4636b5fe1e8d68",
    "cacheData": { "env": {} }
}
