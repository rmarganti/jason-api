{
    "id": "../node_modules/ramda/es/sort.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/sort.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort =\n/*#__PURE__*/\n(0, _curry.default)(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nvar _default = sort;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 32, "column": 0 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 0 }
                },
                {
                    "name": "sort",
                    "generated": { "line": 32, "column": 4 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 4 }
                },
                {
                    "generated": { "line": 32, "column": 8 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 8 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 11 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 24 }
                },
                {
                    "generated": { "line": 34, "column": 20 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 32 }
                },
                {
                    "name": "sort",
                    "generated": { "line": 34, "column": 29 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 41 }
                },
                {
                    "generated": { "line": 34, "column": 33 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 32 }
                },
                {
                    "name": "comparator",
                    "generated": { "line": 34, "column": 34 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 46 }
                },
                {
                    "generated": { "line": 34, "column": 44 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 32 }
                },
                {
                    "name": "list",
                    "generated": { "line": 34, "column": 46 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 58 }
                },
                {
                    "generated": { "line": 34, "column": 50 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 32 }
                },
                {
                    "generated": { "line": 34, "column": 52 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 64 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "name": "Array",
                    "generated": { "line": 35, "column": 9 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "generated": { "line": 35, "column": 14 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 14 }
                },
                {
                    "name": "prototype",
                    "generated": { "line": 35, "column": 15 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 15 }
                },
                {
                    "generated": { "line": 35, "column": 24 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "name": "slice",
                    "generated": { "line": 35, "column": 25 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 25 }
                },
                {
                    "generated": { "line": 35, "column": 30 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "name": "call",
                    "generated": { "line": 35, "column": 31 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 31 }
                },
                {
                    "generated": { "line": 35, "column": 35 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "name": "list",
                    "generated": { "line": 35, "column": 36 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 36 }
                },
                {
                    "generated": { "line": 35, "column": 40 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "generated": { "line": 35, "column": 42 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 42 }
                },
                {
                    "generated": { "line": 35, "column": 43 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "name": "sort",
                    "generated": { "line": 35, "column": 45 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 45 }
                },
                {
                    "generated": { "line": 35, "column": 49 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "name": "comparator",
                    "generated": { "line": 35, "column": 50 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 50 }
                },
                {
                    "generated": { "line": 35, "column": 60 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 9 }
                },
                {
                    "generated": { "line": 35, "column": 61 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 24, "column": 2 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 25, "column": 1 }
                },
                {
                    "generated": { "line": 36, "column": 1 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 24 }
                },
                {
                    "generated": { "line": 36, "column": 2 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 23, "column": 0 }
                },
                {
                    "name": "sort",
                    "generated": { "line": 37, "column": 15 },
                    "source": "../node_modules/ramda/es/sort.js",
                    "original": { "line": 26, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/sort.js": "import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "cb3bd6ccb097658825a5c997203bd67c",
    "cacheData": { "env": {} }
}
