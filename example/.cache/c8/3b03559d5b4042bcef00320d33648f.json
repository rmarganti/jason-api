{
    "id": "../node_modules/ramda/es/uniqWith.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_includesWith.js",
            "loc": { "line": 1, "column": 26 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/uniqWith.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_includesWith.js"
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/uniqWith.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _includesWith2 = _interopRequireDefault(require(\"./internal/_includesWith.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith =\n/*#__PURE__*/\n(0, _curry.default)(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!(0, _includesWith2.default)(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\nvar _default = uniqWith;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "uniqWith",
                    "generated": { "line": 36, "column": 4 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 4 }
                },
                {
                    "generated": { "line": 36, "column": 12 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 12 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 15 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 28 }
                },
                {
                    "generated": { "line": 38, "column": 20 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 36 }
                },
                {
                    "name": "uniqWith",
                    "generated": { "line": 38, "column": 29 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 45 }
                },
                {
                    "generated": { "line": 38, "column": 37 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 36 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 38, "column": 38 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 54 }
                },
                {
                    "generated": { "line": 38, "column": 42 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 36 }
                },
                {
                    "name": "list",
                    "generated": { "line": 38, "column": 44 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 60 }
                },
                {
                    "generated": { "line": 38, "column": 48 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 36 }
                },
                {
                    "generated": { "line": 38, "column": 50 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 66 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 39, "column": 6 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 27, "column": 6 }
                },
                {
                    "generated": { "line": 39, "column": 9 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "generated": { "line": 39, "column": 12 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 27, "column": 12 }
                },
                {
                    "generated": { "line": 39, "column": 13 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 28, "column": 2 }
                },
                {
                    "name": "len",
                    "generated": { "line": 40, "column": 6 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 28, "column": 6 }
                },
                {
                    "generated": { "line": 40, "column": 9 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 28, "column": 9 }
                },
                {
                    "name": "list",
                    "generated": { "line": 40, "column": 12 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 28, "column": 12 }
                },
                {
                    "generated": { "line": 40, "column": 16 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 28, "column": 16 }
                },
                {
                    "name": "length",
                    "generated": { "line": 40, "column": 17 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 28, "column": 17 }
                },
                {
                    "generated": { "line": 40, "column": 23 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 28, "column": 2 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "name": "result",
                    "generated": { "line": 41, "column": 6 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 29, "column": 6 }
                },
                {
                    "generated": { "line": 41, "column": 12 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 29, "column": 12 }
                },
                {
                    "generated": { "line": 41, "column": 15 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 29, "column": 15 }
                },
                {
                    "generated": { "line": 41, "column": 17 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 29, "column": 2 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "name": "item",
                    "generated": { "line": 42, "column": 6 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 30, "column": 6 }
                },
                {
                    "generated": { "line": 42, "column": 10 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 44, "column": 9 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "generated": { "line": 44, "column": 12 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 31, "column": 12 }
                },
                {
                    "name": "len",
                    "generated": { "line": 44, "column": 15 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 31, "column": 15 }
                },
                {
                    "generated": { "line": 44, "column": 18 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "generated": { "line": 44, "column": 20 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 31, "column": 20 }
                },
                {
                    "name": "item",
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "name": "item",
                    "generated": { "line": 45, "column": 4 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "generated": { "line": 45, "column": 8 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 32, "column": 8 }
                },
                {
                    "name": "list",
                    "generated": { "line": 45, "column": 11 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 32, "column": 11 }
                },
                {
                    "generated": { "line": 45, "column": 15 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 32, "column": 15 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 45, "column": 16 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 32, "column": 16 }
                },
                {
                    "generated": { "line": 45, "column": 19 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 32, "column": 15 }
                },
                {
                    "generated": { "line": 45, "column": 20 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "generated": { "line": 47, "column": 8 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 33, "column": 8 }
                },
                {
                    "generated": { "line": 47, "column": 9 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 33, "column": 9 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 47, "column": 37 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 33, "column": 23 }
                },
                {
                    "generated": { "line": 47, "column": 41 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 33, "column": 9 }
                },
                {
                    "name": "item",
                    "generated": { "line": 47, "column": 43 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 33, "column": 29 }
                },
                {
                    "generated": { "line": 47, "column": 47 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 33, "column": 9 }
                },
                {
                    "name": "result",
                    "generated": { "line": 47, "column": 49 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 33, "column": 35 }
                },
                {
                    "generated": { "line": 47, "column": 55 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 33, "column": 9 }
                },
                {
                    "generated": { "line": 47, "column": 56 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "generated": { "line": 47, "column": 58 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 33, "column": 44 }
                },
                {
                    "name": "result",
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 34, "column": 6 }
                },
                {
                    "name": "result",
                    "generated": { "line": 48, "column": 6 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 34, "column": 6 }
                },
                {
                    "generated": { "line": 48, "column": 12 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 34, "column": 12 }
                },
                {
                    "name": "result",
                    "generated": { "line": 48, "column": 13 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 34, "column": 13 }
                },
                {
                    "generated": { "line": 48, "column": 19 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 34, "column": 19 }
                },
                {
                    "name": "length",
                    "generated": { "line": 48, "column": 20 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 34, "column": 20 }
                },
                {
                    "generated": { "line": 48, "column": 26 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 34, "column": 12 }
                },
                {
                    "generated": { "line": 48, "column": 27 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 34, "column": 6 }
                },
                {
                    "name": "item",
                    "generated": { "line": 48, "column": 30 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 34, "column": 30 }
                },
                {
                    "generated": { "line": 48, "column": 34 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 34, "column": 6 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 35, "column": 5 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 51, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 36, "column": 4 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 51, "column": 4 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 36, "column": 4 }
                },
                {
                    "generated": { "line": 51, "column": 7 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 36, "column": 7 }
                },
                {
                    "generated": { "line": 51, "column": 11 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 36, "column": 11 }
                },
                {
                    "generated": { "line": 51, "column": 12 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 36, "column": 4 }
                },
                {
                    "generated": { "line": 52, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 37, "column": 3 }
                },
                {
                    "generated": { "line": 54, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 38, "column": 2 }
                },
                {
                    "name": "result",
                    "generated": { "line": 54, "column": 9 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 38, "column": 9 }
                },
                {
                    "generated": { "line": 54, "column": 15 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 38, "column": 2 }
                },
                {
                    "generated": { "line": 55, "column": 0 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 39, "column": 1 }
                },
                {
                    "generated": { "line": 55, "column": 1 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 28 }
                },
                {
                    "generated": { "line": 55, "column": 2 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "uniqWith",
                    "generated": { "line": 56, "column": 15 },
                    "source": "../node_modules/ramda/es/uniqWith.js",
                    "original": { "line": 40, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/uniqWith.js": "import _includesWith from './internal/_includesWith.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "2d6ea57dd357e377b53e2efde4ef4630",
    "cacheData": { "env": {} }
}
