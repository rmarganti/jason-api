{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/drop.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./internal/_dispatchable",
            "loc": { "line": 2, "column": 26 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/drop.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_dispatchable.js"
        },
        {
            "name": "./internal/_xdrop",
            "loc": { "line": 3, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/drop.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_xdrop.js"
        },
        {
            "name": "./slice",
            "loc": { "line": 4, "column": 18 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/drop.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/slice.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nvar _dispatchable2 = _interopRequireDefault(require(\"./internal/_dispatchable\"));\n\nvar _xdrop2 = _interopRequireDefault(require(\"./internal/_xdrop\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop =\n/*#__PURE__*/\n(0, _curry.default)(\n/*#__PURE__*/\n(0, _dispatchable2.default)(['drop'], _xdrop2.default, function drop(n, xs) {\n  return (0, _slice.default)(Math.max(0, n), Infinity, xs);\n}));\nvar _default = drop;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 0 }
                },
                {
                    "name": "drop",
                    "generated": { "line": 42, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 4 }
                },
                {
                    "generated": { "line": 42, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 8 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 11 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 24 }
                },
                {
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 33 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 46 }
                },
                {
                    "generated": { "line": 46, "column": 28 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 60 }
                },
                {
                    "generated": { "line": 46, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 61 }
                },
                {
                    "generated": { "line": 46, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 60 }
                },
                {
                    "generated": { "line": 46, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 46 }
                },
                {
                    "name": "_xdrop",
                    "generated": { "line": 46, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 70 }
                },
                {
                    "generated": { "line": 46, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 46 }
                },
                {
                    "generated": { "line": 46, "column": 55 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 78 }
                },
                {
                    "name": "drop",
                    "generated": { "line": 46, "column": 64 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 87 }
                },
                {
                    "generated": { "line": 46, "column": 68 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 78 }
                },
                {
                    "name": "n",
                    "generated": { "line": 46, "column": 69 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 92 }
                },
                {
                    "generated": { "line": 46, "column": 70 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 78 }
                },
                {
                    "name": "xs",
                    "generated": { "line": 46, "column": 72 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 95 }
                },
                {
                    "generated": { "line": 46, "column": 74 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 78 }
                },
                {
                    "generated": { "line": 46, "column": 76 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 99 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "generated": { "line": 47, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "name": "Math",
                    "generated": { "line": 47, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 15 }
                },
                {
                    "generated": { "line": 47, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 19 }
                },
                {
                    "name": "max",
                    "generated": { "line": 47, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 20 }
                },
                {
                    "generated": { "line": 47, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 15 }
                },
                {
                    "generated": { "line": 47, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 24 }
                },
                {
                    "generated": { "line": 47, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 15 }
                },
                {
                    "name": "n",
                    "generated": { "line": 47, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 27 }
                },
                {
                    "generated": { "line": 47, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 15 }
                },
                {
                    "generated": { "line": 47, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "name": "Infinity",
                    "generated": { "line": 47, "column": 45 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 31 }
                },
                {
                    "generated": { "line": 47, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "name": "xs",
                    "generated": { "line": 47, "column": 55 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 41 }
                },
                {
                    "generated": { "line": 47, "column": 57 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "generated": { "line": 47, "column": 58 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 32, "column": 1 }
                },
                {
                    "generated": { "line": 48, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 46 }
                },
                {
                    "generated": { "line": 48, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 24 }
                },
                {
                    "generated": { "line": 48, "column": 3 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 30, "column": 0 }
                },
                {
                    "name": "drop",
                    "generated": { "line": 49, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/drop.js",
                    "original": { "line": 33, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/drop.js": "import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdrop from './internal/_xdrop';\nimport slice from './slice';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "ba354cd06b27f1b45f9e8ced3bbb9a5b",
    "cacheData": { "env": {} }
}
