{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./curryN",
            "loc": { "line": 2, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/curryN.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nvar _curryN = _interopRequireDefault(require(\"./curryN\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith =\n/*#__PURE__*/\n(0, _curry.default)(function useWith(fn, transformers) {\n  return (0, _curryN.default)(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nvar _default = useWith;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 0 }
                },
                {
                    "name": "useWith",
                    "generated": { "line": 43, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "generated": { "line": 43, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 11 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 14 }
                },
                {
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 27 }
                },
                {
                    "generated": { "line": 45, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 35 }
                },
                {
                    "name": "useWith",
                    "generated": { "line": 45, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 44 }
                },
                {
                    "generated": { "line": 45, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 35 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 45, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 52 }
                },
                {
                    "generated": { "line": 45, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 35 }
                },
                {
                    "name": "transformers",
                    "generated": { "line": 45, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 56 }
                },
                {
                    "generated": { "line": 45, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 35 }
                },
                {
                    "generated": { "line": 45, "column": 55 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 70 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 34, "column": 2 }
                },
                {
                    "generated": { "line": 46, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 34, "column": 9 }
                },
                {
                    "name": "transformers",
                    "generated": { "line": 46, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 34, "column": 16 }
                },
                {
                    "generated": { "line": 46, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 34, "column": 28 }
                },
                {
                    "name": "length",
                    "generated": { "line": 46, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 34, "column": 29 }
                },
                {
                    "generated": { "line": 46, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 34, "column": 9 }
                },
                {
                    "generated": { "line": 46, "column": 51 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 34, "column": 37 }
                },
                {
                    "generated": { "line": 46, "column": 63 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 34, "column": 49 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 35, "column": 4 }
                },
                {
                    "name": "args",
                    "generated": { "line": 47, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 35, "column": 8 }
                },
                {
                    "generated": { "line": 47, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 35, "column": 12 }
                },
                {
                    "generated": { "line": 47, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 35, "column": 15 }
                },
                {
                    "generated": { "line": 47, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 35, "column": 4 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 36, "column": 4 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 48, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 36, "column": 8 }
                },
                {
                    "generated": { "line": 48, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 36, "column": 11 }
                },
                {
                    "generated": { "line": 48, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 36, "column": 14 }
                },
                {
                    "generated": { "line": 48, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 36, "column": 4 }
                },
                {
                    "generated": { "line": 50, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 37, "column": 4 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 50, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 37, "column": 11 }
                },
                {
                    "generated": { "line": 50, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 37, "column": 14 }
                },
                {
                    "name": "transformers",
                    "generated": { "line": 50, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 37, "column": 17 }
                },
                {
                    "generated": { "line": 50, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 37, "column": 29 }
                },
                {
                    "name": "length",
                    "generated": { "line": 50, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 37, "column": 30 }
                },
                {
                    "generated": { "line": 50, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 37, "column": 4 }
                },
                {
                    "generated": { "line": 50, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 37, "column": 38 }
                },
                {
                    "name": "args",
                    "generated": { "line": 51, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 6 }
                },
                {
                    "name": "args",
                    "generated": { "line": 51, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 6 }
                },
                {
                    "generated": { "line": 51, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 10 }
                },
                {
                    "name": "push",
                    "generated": { "line": 51, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 11 }
                },
                {
                    "generated": { "line": 51, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 6 }
                },
                {
                    "name": "transformers",
                    "generated": { "line": 51, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 16 }
                },
                {
                    "generated": { "line": 51, "column": 28 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 28 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 51, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 29 }
                },
                {
                    "generated": { "line": 51, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 28 }
                },
                {
                    "generated": { "line": 51, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 16 }
                },
                {
                    "name": "call",
                    "generated": { "line": 51, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 34 }
                },
                {
                    "generated": { "line": 51, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 16 }
                },
                {
                    "generated": { "line": 51, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 39 }
                },
                {
                    "generated": { "line": 51, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 16 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 51, "column": 45 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 45 }
                },
                {
                    "generated": { "line": 51, "column": 54 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 54 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 51, "column": 55 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 55 }
                },
                {
                    "generated": { "line": 51, "column": 58 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 54 }
                },
                {
                    "generated": { "line": 51, "column": 59 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 16 }
                },
                {
                    "generated": { "line": 51, "column": 60 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 38, "column": 6 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 52, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 39, "column": 6 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 52, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 39, "column": 6 }
                },
                {
                    "generated": { "line": 52, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 39, "column": 9 }
                },
                {
                    "generated": { "line": 52, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 39, "column": 13 }
                },
                {
                    "generated": { "line": 52, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 39, "column": 6 }
                },
                {
                    "generated": { "line": 53, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 40, "column": 5 }
                },
                {
                    "generated": { "line": 55, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 4 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 55, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 11 }
                },
                {
                    "generated": { "line": 55, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 13 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 55, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 14 }
                },
                {
                    "generated": { "line": 55, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 11 }
                },
                {
                    "generated": { "line": 55, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 20 }
                },
                {
                    "generated": { "line": 55, "column": 24 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 11 }
                },
                {
                    "name": "args",
                    "generated": { "line": 55, "column": 26 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 26 }
                },
                {
                    "generated": { "line": 55, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 30 }
                },
                {
                    "name": "concat",
                    "generated": { "line": 55, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 31 }
                },
                {
                    "generated": { "line": 55, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 26 }
                },
                {
                    "name": "Array",
                    "generated": { "line": 55, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 38 }
                },
                {
                    "generated": { "line": 55, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 43 }
                },
                {
                    "name": "prototype",
                    "generated": { "line": 55, "column": 44 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 44 }
                },
                {
                    "generated": { "line": 55, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 38 }
                },
                {
                    "name": "slice",
                    "generated": { "line": 55, "column": 54 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 54 }
                },
                {
                    "generated": { "line": 55, "column": 59 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 38 }
                },
                {
                    "name": "call",
                    "generated": { "line": 55, "column": 60 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 60 }
                },
                {
                    "generated": { "line": 55, "column": 64 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 38 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 55, "column": 65 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 65 }
                },
                {
                    "generated": { "line": 55, "column": 74 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 38 }
                },
                {
                    "name": "transformers",
                    "generated": { "line": 55, "column": 76 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 76 }
                },
                {
                    "generated": { "line": 55, "column": 88 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 88 }
                },
                {
                    "name": "length",
                    "generated": { "line": 55, "column": 89 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 89 }
                },
                {
                    "generated": { "line": 55, "column": 95 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 38 }
                },
                {
                    "generated": { "line": 55, "column": 96 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 26 }
                },
                {
                    "generated": { "line": 55, "column": 97 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 11 }
                },
                {
                    "generated": { "line": 55, "column": 98 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 41, "column": 4 }
                },
                {
                    "generated": { "line": 56, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 42, "column": 3 }
                },
                {
                    "generated": { "line": 56, "column": 3 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 34, "column": 9 }
                },
                {
                    "generated": { "line": 56, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 34, "column": 2 }
                },
                {
                    "generated": { "line": 57, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 43, "column": 1 }
                },
                {
                    "generated": { "line": 57, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 27 }
                },
                {
                    "generated": { "line": 57, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 33, "column": 0 }
                },
                {
                    "name": "useWith",
                    "generated": { "line": 58, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js",
                    "original": { "line": 44, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/useWith.js": "import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "3ef13f4af1378c35920eec89e606f3f9",
    "cacheData": { "env": {} }
}
