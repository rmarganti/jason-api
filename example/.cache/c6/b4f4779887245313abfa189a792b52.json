{
    "id": "../node_modules/ramda/es/filter.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/filter.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./internal/_dispatchable.js",
            "loc": { "line": 2, "column": 26 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/filter.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_dispatchable.js"
        },
        {
            "name": "./internal/_filter.js",
            "loc": { "line": 3, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/filter.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_filter.js"
        },
        {
            "name": "./internal/_isObject.js",
            "loc": { "line": 4, "column": 22 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/filter.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_isObject.js"
        },
        {
            "name": "./internal/_reduce.js",
            "loc": { "line": 5, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/filter.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_reduce.js"
        },
        {
            "name": "./internal/_xfilter.js",
            "loc": { "line": 6, "column": 21 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/filter.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_xfilter.js"
        },
        {
            "name": "./keys.js",
            "loc": { "line": 7, "column": 17 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/filter.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/keys.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _dispatchable2 = _interopRequireDefault(require(\"./internal/_dispatchable.js\"));\n\nvar _filter2 = _interopRequireDefault(require(\"./internal/_filter.js\"));\n\nvar _isObject2 = _interopRequireDefault(require(\"./internal/_isObject.js\"));\n\nvar _reduce2 = _interopRequireDefault(require(\"./internal/_reduce.js\"));\n\nvar _xfilter2 = _interopRequireDefault(require(\"./internal/_xfilter.js\"));\n\nvar _keys = _interopRequireDefault(require(\"./keys.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter =\n/*#__PURE__*/\n(0, _curry.default)(\n/*#__PURE__*/\n(0, _dispatchable2.default)(['filter'], _xfilter2.default, function (pred, filterable) {\n  return (0, _isObject2.default)(filterable) ? (0, _reduce2.default)(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, (0, _keys.default)(filterable)) : // else\n  (0, _filter2.default)(pred, filterable);\n}));\nvar _default = filter;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 16, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 5, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 20, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 7, "column": 0 }
                },
                {
                    "generated": { "line": 24, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 9, "column": 0 }
                },
                {
                    "generated": { "line": 51, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 0 }
                },
                {
                    "name": "filter",
                    "generated": { "line": 51, "column": 4 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 4 }
                },
                {
                    "generated": { "line": 51, "column": 10 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 10 }
                },
                {
                    "generated": { "line": 52, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 13 }
                },
                {
                    "generated": { "line": 53, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 26 }
                },
                {
                    "generated": { "line": 54, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 35 }
                },
                {
                    "generated": { "line": 55, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 48 }
                },
                {
                    "generated": { "line": 55, "column": 28 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 62 }
                },
                {
                    "generated": { "line": 55, "column": 29 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 63 }
                },
                {
                    "generated": { "line": 55, "column": 37 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 62 }
                },
                {
                    "generated": { "line": 55, "column": 38 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 48 }
                },
                {
                    "name": "_xfilter",
                    "generated": { "line": 55, "column": 40 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 74 }
                },
                {
                    "generated": { "line": 55, "column": 57 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 48 }
                },
                {
                    "generated": { "line": 55, "column": 59 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 84 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 55, "column": 69 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 94 }
                },
                {
                    "generated": { "line": 55, "column": 73 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 84 }
                },
                {
                    "name": "filterable",
                    "generated": { "line": 55, "column": 75 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 100 }
                },
                {
                    "generated": { "line": 55, "column": 85 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 84 }
                },
                {
                    "generated": { "line": 55, "column": 87 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 112 }
                },
                {
                    "generated": { "line": 56, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 2 }
                },
                {
                    "generated": { "line": 56, "column": 9 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 9 }
                },
                {
                    "name": "filterable",
                    "generated": { "line": 56, "column": 33 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 19 }
                },
                {
                    "generated": { "line": 56, "column": 43 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 9 }
                },
                {
                    "generated": { "line": 56, "column": 47 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 33 }
                },
                {
                    "generated": { "line": 56, "column": 69 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 41 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 56, "column": 79 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 51 }
                },
                {
                    "generated": { "line": 56, "column": 82 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 41 }
                },
                {
                    "name": "key",
                    "generated": { "line": 56, "column": 84 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 56 }
                },
                {
                    "generated": { "line": 56, "column": 87 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 41 }
                },
                {
                    "generated": { "line": 56, "column": 89 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 61 }
                },
                {
                    "generated": { "line": 57, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 38, "column": 4 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 57, "column": 8 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 38, "column": 8 }
                },
                {
                    "generated": { "line": 57, "column": 12 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 38, "column": 12 }
                },
                {
                    "name": "filterable",
                    "generated": { "line": 57, "column": 13 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 38, "column": 13 }
                },
                {
                    "generated": { "line": 57, "column": 23 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 38, "column": 23 }
                },
                {
                    "name": "key",
                    "generated": { "line": 57, "column": 24 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 38, "column": 24 }
                },
                {
                    "generated": { "line": 57, "column": 27 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 38, "column": 23 }
                },
                {
                    "generated": { "line": 57, "column": 28 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 38, "column": 12 }
                },
                {
                    "generated": { "line": 57, "column": 29 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 38, "column": 4 }
                },
                {
                    "generated": { "line": 57, "column": 31 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 38, "column": 31 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 58, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 39, "column": 6 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 58, "column": 6 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 39, "column": 6 }
                },
                {
                    "generated": { "line": 58, "column": 9 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 39, "column": 9 }
                },
                {
                    "name": "key",
                    "generated": { "line": 58, "column": 10 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 39, "column": 10 }
                },
                {
                    "generated": { "line": 58, "column": 13 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 39, "column": 9 }
                },
                {
                    "generated": { "line": 58, "column": 14 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 39, "column": 6 }
                },
                {
                    "name": "filterable",
                    "generated": { "line": 58, "column": 17 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 39, "column": 17 }
                },
                {
                    "generated": { "line": 58, "column": 27 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 39, "column": 27 }
                },
                {
                    "name": "key",
                    "generated": { "line": 58, "column": 28 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 39, "column": 28 }
                },
                {
                    "generated": { "line": 58, "column": 31 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 39, "column": 27 }
                },
                {
                    "generated": { "line": 58, "column": 32 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 39, "column": 6 }
                },
                {
                    "generated": { "line": 59, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 40, "column": 5 }
                },
                {
                    "generated": { "line": 61, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 41, "column": 4 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 61, "column": 11 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 41, "column": 11 }
                },
                {
                    "generated": { "line": 61, "column": 14 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 41, "column": 4 }
                },
                {
                    "generated": { "line": 62, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 42, "column": 3 }
                },
                {
                    "generated": { "line": 62, "column": 3 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 33 }
                },
                {
                    "generated": { "line": 62, "column": 5 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 42, "column": 5 }
                },
                {
                    "generated": { "line": 62, "column": 7 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 33 }
                },
                {
                    "generated": { "line": 62, "column": 9 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 42, "column": 9 }
                },
                {
                    "name": "filterable",
                    "generated": { "line": 62, "column": 28 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 42, "column": 14 }
                },
                {
                    "generated": { "line": 62, "column": 38 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 42, "column": 9 }
                },
                {
                    "generated": { "line": 62, "column": 39 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 33 }
                },
                {
                    "generated": { "line": 62, "column": 40 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 9 }
                },
                {
                    "generated": { "line": 62, "column": 43 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 43, "column": 2 }
                },
                {
                    "generated": { "line": 63, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 44, "column": 2 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 63, "column": 24 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 44, "column": 10 }
                },
                {
                    "generated": { "line": 63, "column": 28 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 44, "column": 2 }
                },
                {
                    "name": "filterable",
                    "generated": { "line": 63, "column": 30 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 44, "column": 16 }
                },
                {
                    "generated": { "line": 63, "column": 40 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 44, "column": 2 }
                },
                {
                    "generated": { "line": 63, "column": 41 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 37, "column": 2 }
                },
                {
                    "generated": { "line": 64, "column": 0 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 45, "column": 1 }
                },
                {
                    "generated": { "line": 64, "column": 1 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 48 }
                },
                {
                    "generated": { "line": 64, "column": 2 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 26 }
                },
                {
                    "generated": { "line": 64, "column": 3 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 36, "column": 0 }
                },
                {
                    "name": "filter",
                    "generated": { "line": 65, "column": 15 },
                    "source": "../node_modules/ramda/es/filter.js",
                    "original": { "line": 46, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/filter.js": "import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _filter from './internal/_filter.js';\nimport _isObject from './internal/_isObject.js';\nimport _reduce from './internal/_reduce.js';\nimport _xfilter from './internal/_xfilter.js';\nimport keys from './keys.js';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "0d801a4b44b87c5d343dd1685125441e",
    "cacheData": { "env": {} }
}
