{
    "id": "../node_modules/ramda/es/invoker.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/invoker.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./internal/_isFunction.js",
            "loc": { "line": 2, "column": 24 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/invoker.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_isFunction.js"
        },
        {
            "name": "./curryN.js",
            "loc": { "line": 3, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/invoker.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/curryN.js"
        },
        {
            "name": "./toString.js",
            "loc": { "line": 4, "column": 21 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/invoker.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/toString.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"./internal/_isFunction.js\"));\n\nvar _curryN = _interopRequireDefault(require(\"./curryN.js\"));\n\nvar _toString = _interopRequireDefault(require(\"./toString.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker =\n/*#__PURE__*/\n(0, _curry.default)(function invoker(arity, method) {\n  return (0, _curryN.default)(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && (0, _isFunction2.default)(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError((0, _toString.default)(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nvar _default = invoker;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 0 }
                },
                {
                    "name": "invoker",
                    "generated": { "line": 45, "column": 4 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 4 }
                },
                {
                    "generated": { "line": 45, "column": 11 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 11 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 14 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 27 }
                },
                {
                    "generated": { "line": 47, "column": 20 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 35 }
                },
                {
                    "name": "invoker",
                    "generated": { "line": 47, "column": 29 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 44 }
                },
                {
                    "generated": { "line": 47, "column": 36 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 35 }
                },
                {
                    "name": "arity",
                    "generated": { "line": 47, "column": 37 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 52 }
                },
                {
                    "generated": { "line": 47, "column": 42 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 35 }
                },
                {
                    "name": "method",
                    "generated": { "line": 47, "column": 44 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 59 }
                },
                {
                    "generated": { "line": 47, "column": 50 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 35 }
                },
                {
                    "generated": { "line": 47, "column": 52 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 67 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 34, "column": 2 }
                },
                {
                    "generated": { "line": 48, "column": 9 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 34, "column": 9 }
                },
                {
                    "name": "arity",
                    "generated": { "line": 48, "column": 30 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 34, "column": 16 }
                },
                {
                    "generated": { "line": 48, "column": 35 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 34, "column": 21 }
                },
                {
                    "generated": { "line": 48, "column": 38 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 34, "column": 24 }
                },
                {
                    "generated": { "line": 48, "column": 39 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 34, "column": 9 }
                },
                {
                    "generated": { "line": 48, "column": 41 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 34, "column": 27 }
                },
                {
                    "generated": { "line": 48, "column": 53 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 34, "column": 39 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 35, "column": 4 }
                },
                {
                    "name": "target",
                    "generated": { "line": 49, "column": 8 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 35, "column": 8 }
                },
                {
                    "generated": { "line": 49, "column": 14 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 35, "column": 14 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 49, "column": 17 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 35, "column": 17 }
                },
                {
                    "generated": { "line": 49, "column": 26 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 35, "column": 26 }
                },
                {
                    "name": "arity",
                    "generated": { "line": 49, "column": 27 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 35, "column": 27 }
                },
                {
                    "generated": { "line": 49, "column": 32 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 35, "column": 26 }
                },
                {
                    "generated": { "line": 49, "column": 33 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 35, "column": 4 }
                },
                {
                    "generated": { "line": 51, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 4 }
                },
                {
                    "name": "target",
                    "generated": { "line": 51, "column": 8 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 8 }
                },
                {
                    "generated": { "line": 51, "column": 14 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 14 }
                },
                {
                    "generated": { "line": 51, "column": 18 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 18 }
                },
                {
                    "generated": { "line": 51, "column": 22 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 8 }
                },
                {
                    "generated": { "line": 51, "column": 26 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 26 }
                },
                {
                    "name": "target",
                    "generated": { "line": 51, "column": 52 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 38 }
                },
                {
                    "generated": { "line": 51, "column": 58 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 44 }
                },
                {
                    "name": "method",
                    "generated": { "line": 51, "column": 59 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 45 }
                },
                {
                    "generated": { "line": 51, "column": 65 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 44 }
                },
                {
                    "generated": { "line": 51, "column": 66 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 26 }
                },
                {
                    "generated": { "line": 51, "column": 67 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 4 }
                },
                {
                    "generated": { "line": 51, "column": 69 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 36, "column": 55 }
                },
                {
                    "generated": { "line": 52, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 6 }
                },
                {
                    "name": "target",
                    "generated": { "line": 52, "column": 13 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 13 }
                },
                {
                    "generated": { "line": 52, "column": 19 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 19 }
                },
                {
                    "name": "method",
                    "generated": { "line": 52, "column": 20 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 20 }
                },
                {
                    "generated": { "line": 52, "column": 26 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 19 }
                },
                {
                    "generated": { "line": 52, "column": 27 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 13 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 52, "column": 28 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 28 }
                },
                {
                    "generated": { "line": 52, "column": 33 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 13 }
                },
                {
                    "name": "target",
                    "generated": { "line": 52, "column": 34 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 34 }
                },
                {
                    "generated": { "line": 52, "column": 40 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 13 }
                },
                {
                    "name": "Array",
                    "generated": { "line": 52, "column": 42 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 42 }
                },
                {
                    "generated": { "line": 52, "column": 47 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 47 }
                },
                {
                    "name": "prototype",
                    "generated": { "line": 52, "column": 48 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 48 }
                },
                {
                    "generated": { "line": 52, "column": 57 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 42 }
                },
                {
                    "name": "slice",
                    "generated": { "line": 52, "column": 58 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 58 }
                },
                {
                    "generated": { "line": 52, "column": 63 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 42 }
                },
                {
                    "name": "call",
                    "generated": { "line": 52, "column": 64 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 64 }
                },
                {
                    "generated": { "line": 52, "column": 68 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 42 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 52, "column": 69 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 69 }
                },
                {
                    "generated": { "line": 52, "column": 78 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 42 }
                },
                {
                    "generated": { "line": 52, "column": 80 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 80 }
                },
                {
                    "generated": { "line": 52, "column": 81 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 42 }
                },
                {
                    "name": "arity",
                    "generated": { "line": 52, "column": 83 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 83 }
                },
                {
                    "generated": { "line": 52, "column": 88 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 42 }
                },
                {
                    "generated": { "line": 52, "column": 89 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 13 }
                },
                {
                    "generated": { "line": 52, "column": 90 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 37, "column": 6 }
                },
                {
                    "generated": { "line": 53, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 38, "column": 5 }
                },
                {
                    "generated": { "line": 55, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 4 }
                },
                {
                    "generated": { "line": 55, "column": 10 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 10 }
                },
                {
                    "name": "TypeError",
                    "generated": { "line": 55, "column": 14 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 14 }
                },
                {
                    "generated": { "line": 55, "column": 23 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 10 }
                },
                {
                    "generated": { "line": 55, "column": 24 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 24 }
                },
                {
                    "name": "target",
                    "generated": { "line": 55, "column": 47 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 33 }
                },
                {
                    "generated": { "line": 55, "column": 53 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 24 }
                },
                {
                    "generated": { "line": 55, "column": 57 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 43 }
                },
                {
                    "generated": { "line": 55, "column": 90 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 24 }
                },
                {
                    "name": "method",
                    "generated": { "line": 55, "column": 93 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 79 }
                },
                {
                    "generated": { "line": 55, "column": 99 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 24 }
                },
                {
                    "generated": { "line": 55, "column": 102 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 88 }
                },
                {
                    "generated": { "line": 55, "column": 105 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 10 }
                },
                {
                    "generated": { "line": 55, "column": 106 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 39, "column": 4 }
                },
                {
                    "generated": { "line": 56, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 40, "column": 3 }
                },
                {
                    "generated": { "line": 56, "column": 3 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 34, "column": 9 }
                },
                {
                    "generated": { "line": 56, "column": 4 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 34, "column": 2 }
                },
                {
                    "generated": { "line": 57, "column": 0 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 41, "column": 1 }
                },
                {
                    "generated": { "line": 57, "column": 1 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 27 }
                },
                {
                    "generated": { "line": 57, "column": 2 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 33, "column": 0 }
                },
                {
                    "name": "invoker",
                    "generated": { "line": 58, "column": 15 },
                    "source": "../node_modules/ramda/es/invoker.js",
                    "original": { "line": 42, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/invoker.js": "import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport curryN from './curryN.js';\nimport toString from './toString.js';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "8cdb9509d5446f359e66d18e82ac222a",
    "cacheData": { "env": {} }
}
