{
    "id": "../node_modules/ramda/es/groupBy.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_checkForMethod.js",
            "loc": { "line": 1, "column": 28 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/groupBy.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_checkForMethod.js"
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/groupBy.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./reduceBy.js",
            "loc": { "line": 3, "column": 21 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/groupBy.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/reduceBy.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _checkForMethod2 = _interopRequireDefault(require(\"./internal/_checkForMethod.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _reduceBy = _interopRequireDefault(require(\"./reduceBy.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy =\n/*#__PURE__*/\n(0, _curry.default)(\n/*#__PURE__*/\n(0, _checkForMethod2.default)('groupBy',\n/*#__PURE__*/\n(0, _reduceBy.default)(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));\nvar _default = groupBy;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 16, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 5, "column": 0 }
                },
                {
                    "generated": { "line": 56, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 0 }
                },
                {
                    "name": "groupBy",
                    "generated": { "line": 56, "column": 4 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 4 }
                },
                {
                    "generated": { "line": 56, "column": 11 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 11 }
                },
                {
                    "generated": { "line": 57, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 14 }
                },
                {
                    "generated": { "line": 58, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 27 }
                },
                {
                    "generated": { "line": 59, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 36 }
                },
                {
                    "generated": { "line": 60, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 49 }
                },
                {
                    "generated": { "line": 60, "column": 30 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 65 }
                },
                {
                    "generated": { "line": 60, "column": 39 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 49 }
                },
                {
                    "generated": { "line": 61, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 76 }
                },
                {
                    "generated": { "line": 62, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 89 }
                },
                {
                    "generated": { "line": 62, "column": 23 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 98 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 62, "column": 33 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 108 }
                },
                {
                    "generated": { "line": 62, "column": 36 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 98 }
                },
                {
                    "name": "item",
                    "generated": { "line": 62, "column": 38 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 113 }
                },
                {
                    "generated": { "line": 62, "column": 42 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 98 }
                },
                {
                    "generated": { "line": 62, "column": 44 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 119 }
                },
                {
                    "generated": { "line": 63, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 46, "column": 2 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 63, "column": 6 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 46, "column": 6 }
                },
                {
                    "generated": { "line": 63, "column": 9 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 46, "column": 9 }
                },
                {
                    "generated": { "line": 63, "column": 13 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 46, "column": 13 }
                },
                {
                    "generated": { "line": 63, "column": 17 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 46, "column": 2 }
                },
                {
                    "generated": { "line": 63, "column": 19 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 46, "column": 19 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 64, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 47, "column": 4 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 64, "column": 4 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 47, "column": 4 }
                },
                {
                    "generated": { "line": 64, "column": 7 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 47, "column": 7 }
                },
                {
                    "generated": { "line": 64, "column": 10 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 47, "column": 10 }
                },
                {
                    "generated": { "line": 64, "column": 12 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 47, "column": 4 }
                },
                {
                    "generated": { "line": 65, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 48, "column": 3 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 67, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 49, "column": 2 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 67, "column": 2 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 49, "column": 2 }
                },
                {
                    "generated": { "line": 67, "column": 5 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 49, "column": 5 }
                },
                {
                    "name": "push",
                    "generated": { "line": 67, "column": 6 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 49, "column": 6 }
                },
                {
                    "generated": { "line": 67, "column": 10 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 49, "column": 2 }
                },
                {
                    "name": "item",
                    "generated": { "line": 67, "column": 11 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 49, "column": 11 }
                },
                {
                    "generated": { "line": 67, "column": 15 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 49, "column": 2 }
                },
                {
                    "generated": { "line": 68, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 50, "column": 2 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 68, "column": 9 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 50, "column": 9 }
                },
                {
                    "generated": { "line": 68, "column": 12 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 50, "column": 2 }
                },
                {
                    "generated": { "line": 69, "column": 0 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 51, "column": 1 }
                },
                {
                    "generated": { "line": 69, "column": 1 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 89 }
                },
                {
                    "generated": { "line": 69, "column": 3 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 51, "column": 3 }
                },
                {
                    "generated": { "line": 69, "column": 7 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 89 }
                },
                {
                    "generated": { "line": 69, "column": 8 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 49 }
                },
                {
                    "generated": { "line": 69, "column": 9 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 27 }
                },
                {
                    "generated": { "line": 69, "column": 10 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 45, "column": 0 }
                },
                {
                    "name": "groupBy",
                    "generated": { "line": 70, "column": 15 },
                    "source": "../node_modules/ramda/es/groupBy.js",
                    "original": { "line": 52, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/groupBy.js": "import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\nimport reduceBy from './reduceBy.js';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "b020f66bec12826616fbf755aaffcdbb",
    "cacheData": { "env": {} }
}
