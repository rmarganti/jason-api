{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/tap.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./internal/_dispatchable",
            "loc": { "line": 2, "column": 26 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/tap.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_dispatchable.js"
        },
        {
            "name": "./internal/_xtap",
            "loc": { "line": 3, "column": 18 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/tap.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_xtap.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nvar _dispatchable2 = _interopRequireDefault(require(\"./internal/_dispatchable\"));\n\nvar _xtap2 = _interopRequireDefault(require(\"./internal/_xtap\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap =\n/*#__PURE__*/\n(0, _curry.default)(\n/*#__PURE__*/\n(0, _dispatchable2.default)([], _xtap2.default, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nvar _default = tap;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 16, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 5, "column": 0 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 0 }
                },
                {
                    "name": "tap",
                    "generated": { "line": 36, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 4 }
                },
                {
                    "generated": { "line": 36, "column": 7 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 7 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 10 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 23 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 32 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 45 }
                },
                {
                    "generated": { "line": 40, "column": 28 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 59 }
                },
                {
                    "generated": { "line": 40, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 45 }
                },
                {
                    "name": "_xtap",
                    "generated": { "line": 40, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 63 }
                },
                {
                    "generated": { "line": 40, "column": 46 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 45 }
                },
                {
                    "generated": { "line": 40, "column": 48 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 70 }
                },
                {
                    "name": "tap",
                    "generated": { "line": 40, "column": 57 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 79 }
                },
                {
                    "generated": { "line": 40, "column": 60 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 70 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 40, "column": 61 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 83 }
                },
                {
                    "generated": { "line": 40, "column": 63 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 70 }
                },
                {
                    "name": "x",
                    "generated": { "line": 40, "column": 65 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 87 }
                },
                {
                    "generated": { "line": 40, "column": 66 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 70 }
                },
                {
                    "generated": { "line": 40, "column": 68 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 90 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 41, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "generated": { "line": 41, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 26, "column": 4 }
                },
                {
                    "name": "x",
                    "generated": { "line": 41, "column": 5 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 26, "column": 5 }
                },
                {
                    "generated": { "line": 41, "column": 6 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 26, "column": 4 }
                },
                {
                    "generated": { "line": 41, "column": 7 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "name": "x",
                    "generated": { "line": 42, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "generated": { "line": 42, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 28, "column": 1 }
                },
                {
                    "generated": { "line": 43, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 45 }
                },
                {
                    "generated": { "line": 43, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 23 }
                },
                {
                    "generated": { "line": 43, "column": 3 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 25, "column": 0 }
                },
                {
                    "name": "tap",
                    "generated": { "line": 44, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/tap.js",
                    "original": { "line": 29, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/tap.js": "import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtap from './internal/_xtap';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "7f7092d8ccf99e8e3a9b37327cfdbcbd",
    "cacheData": { "env": {} }
}
