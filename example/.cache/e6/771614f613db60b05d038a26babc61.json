{
    "id": "../node_modules/ramda/es/curryN.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_arity.js",
            "loc": { "line": 1, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/curryN.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_arity.js"
        },
        {
            "name": "./internal/_curry1.js",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/curryN.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry1.js"
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 3, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/curryN.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./internal/_curryN.js",
            "loc": { "line": 4, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/curryN.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curryN.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _arity2 = _interopRequireDefault(require(\"./internal/_arity.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nvar _curry3 = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _curryN2 = _interopRequireDefault(require(\"./internal/_curryN.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curryN =\n/*#__PURE__*/\n(0, _curry3.default)(function curryN(length, fn) {\n  if (length === 1) {\n    return (0, _curry.default)(fn);\n  }\n\n  return (0, _arity2.default)(length, (0, _curryN2.default)(length, [], fn));\n});\nvar _default = curryN;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 60, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 0 }
                },
                {
                    "name": "curryN",
                    "generated": { "line": 60, "column": 4 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 4 }
                },
                {
                    "generated": { "line": 60, "column": 10 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 10 }
                },
                {
                    "generated": { "line": 61, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 13 }
                },
                {
                    "generated": { "line": 62, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 26 }
                },
                {
                    "generated": { "line": 62, "column": 21 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 34 }
                },
                {
                    "name": "curryN",
                    "generated": { "line": 62, "column": 30 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 43 }
                },
                {
                    "generated": { "line": 62, "column": 36 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 34 }
                },
                {
                    "name": "length",
                    "generated": { "line": 62, "column": 37 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 50 }
                },
                {
                    "generated": { "line": 62, "column": 43 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 34 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 62, "column": 45 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 58 }
                },
                {
                    "generated": { "line": 62, "column": 47 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 34 }
                },
                {
                    "generated": { "line": 62, "column": 49 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 62 }
                },
                {
                    "generated": { "line": 63, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 49, "column": 2 }
                },
                {
                    "name": "length",
                    "generated": { "line": 63, "column": 6 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 49, "column": 6 }
                },
                {
                    "generated": { "line": 63, "column": 12 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 49, "column": 12 }
                },
                {
                    "generated": { "line": 63, "column": 17 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 49, "column": 17 }
                },
                {
                    "generated": { "line": 63, "column": 18 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 49, "column": 2 }
                },
                {
                    "generated": { "line": 63, "column": 20 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 49, "column": 20 }
                },
                {
                    "generated": { "line": 64, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 50, "column": 4 }
                },
                {
                    "generated": { "line": 64, "column": 11 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 50, "column": 11 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 64, "column": 31 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 50, "column": 19 }
                },
                {
                    "generated": { "line": 64, "column": 33 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 50, "column": 11 }
                },
                {
                    "generated": { "line": 64, "column": 34 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 50, "column": 4 }
                },
                {
                    "generated": { "line": 65, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 51, "column": 3 }
                },
                {
                    "generated": { "line": 67, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 2 }
                },
                {
                    "generated": { "line": 67, "column": 9 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 9 }
                },
                {
                    "name": "length",
                    "generated": { "line": 67, "column": 30 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 16 }
                },
                {
                    "generated": { "line": 67, "column": 36 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 9 }
                },
                {
                    "generated": { "line": 67, "column": 38 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 24 }
                },
                {
                    "name": "length",
                    "generated": { "line": 67, "column": 60 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 32 }
                },
                {
                    "generated": { "line": 67, "column": 66 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 24 }
                },
                {
                    "generated": { "line": 67, "column": 68 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 40 }
                },
                {
                    "generated": { "line": 67, "column": 70 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 24 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 67, "column": 72 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 44 }
                },
                {
                    "generated": { "line": 67, "column": 74 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 24 }
                },
                {
                    "generated": { "line": 67, "column": 75 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 9 }
                },
                {
                    "generated": { "line": 67, "column": 76 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 52, "column": 2 }
                },
                {
                    "generated": { "line": 68, "column": 0 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 53, "column": 1 }
                },
                {
                    "generated": { "line": 68, "column": 1 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 26 }
                },
                {
                    "generated": { "line": 68, "column": 2 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 48, "column": 0 }
                },
                {
                    "name": "curryN",
                    "generated": { "line": 69, "column": 15 },
                    "source": "../node_modules/ramda/es/curryN.js",
                    "original": { "line": 54, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/curryN.js": "import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport _curry2 from './internal/_curry2.js';\nimport _curryN from './internal/_curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "5306ca167cf09bc46938632d852742d3",
    "cacheData": { "env": {} }
}
