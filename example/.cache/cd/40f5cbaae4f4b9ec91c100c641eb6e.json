{
    "id": "../node_modules/ramda/es/takeLastWhile.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/takeLastWhile.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./slice.js",
            "loc": { "line": 2, "column": 18 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/takeLastWhile.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/slice.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile =\n/*#__PURE__*/\n(0, _curry.default)(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n\n  return (0, _slice.default)(idx + 1, Infinity, xs);\n});\nvar _default = takeLastWhile;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 0 }
                },
                {
                    "name": "takeLastWhile",
                    "generated": { "line": 39, "column": 4 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 4 }
                },
                {
                    "generated": { "line": 39, "column": 17 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 17 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 20 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 33 }
                },
                {
                    "generated": { "line": 41, "column": 20 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 41 }
                },
                {
                    "name": "takeLastWhile",
                    "generated": { "line": 41, "column": 29 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 50 }
                },
                {
                    "generated": { "line": 41, "column": 42 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 41 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 41, "column": 43 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 64 }
                },
                {
                    "generated": { "line": 41, "column": 45 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 41 }
                },
                {
                    "name": "xs",
                    "generated": { "line": 41, "column": 47 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 68 }
                },
                {
                    "generated": { "line": 41, "column": 49 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 41 }
                },
                {
                    "generated": { "line": 41, "column": 51 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 72 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 42, "column": 6 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 30, "column": 6 }
                },
                {
                    "generated": { "line": 42, "column": 9 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 30, "column": 9 }
                },
                {
                    "name": "xs",
                    "generated": { "line": 42, "column": 12 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 30, "column": 12 }
                },
                {
                    "generated": { "line": 42, "column": 14 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 30, "column": 14 }
                },
                {
                    "name": "length",
                    "generated": { "line": 42, "column": 15 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 30, "column": 15 }
                },
                {
                    "generated": { "line": 42, "column": 21 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 30, "column": 12 }
                },
                {
                    "generated": { "line": 42, "column": 24 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 30, "column": 24 }
                },
                {
                    "generated": { "line": 42, "column": 25 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 30, "column": 2 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 44, "column": 9 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "generated": { "line": 44, "column": 12 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 12 }
                },
                {
                    "generated": { "line": 44, "column": 16 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 16 }
                },
                {
                    "generated": { "line": 44, "column": 17 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 9 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 44, "column": 21 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 21 }
                },
                {
                    "generated": { "line": 44, "column": 23 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 23 }
                },
                {
                    "name": "xs",
                    "generated": { "line": 44, "column": 24 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 24 }
                },
                {
                    "generated": { "line": 44, "column": 26 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 26 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 44, "column": 27 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 27 }
                },
                {
                    "generated": { "line": 44, "column": 30 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 26 }
                },
                {
                    "generated": { "line": 44, "column": 31 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 23 }
                },
                {
                    "generated": { "line": 44, "column": 32 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 2 }
                },
                {
                    "generated": { "line": 44, "column": 34 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 31, "column": 34 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 45, "column": 4 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "generated": { "line": 45, "column": 7 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 32, "column": 7 }
                },
                {
                    "generated": { "line": 45, "column": 11 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 32, "column": 11 }
                },
                {
                    "generated": { "line": 45, "column": 12 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 33, "column": 3 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 34, "column": 2 }
                },
                {
                    "generated": { "line": 48, "column": 9 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 34, "column": 9 }
                },
                {
                    "name": "idx",
                    "generated": { "line": 48, "column": 29 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 34, "column": 15 }
                },
                {
                    "generated": { "line": 48, "column": 32 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 34, "column": 18 }
                },
                {
                    "generated": { "line": 48, "column": 35 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 34, "column": 21 }
                },
                {
                    "generated": { "line": 48, "column": 36 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 34, "column": 9 }
                },
                {
                    "name": "Infinity",
                    "generated": { "line": 48, "column": 38 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 34, "column": 24 }
                },
                {
                    "generated": { "line": 48, "column": 46 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 34, "column": 9 }
                },
                {
                    "name": "xs",
                    "generated": { "line": 48, "column": 48 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 34, "column": 34 }
                },
                {
                    "generated": { "line": 48, "column": 50 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 34, "column": 9 }
                },
                {
                    "generated": { "line": 48, "column": 51 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 34, "column": 2 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 35, "column": 1 }
                },
                {
                    "generated": { "line": 49, "column": 1 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 33 }
                },
                {
                    "generated": { "line": 49, "column": 2 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 29, "column": 0 }
                },
                {
                    "name": "takeLastWhile",
                    "generated": { "line": 50, "column": 15 },
                    "source": "../node_modules/ramda/es/takeLastWhile.js",
                    "original": { "line": 36, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/takeLastWhile.js": "import _curry2 from './internal/_curry2.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "34dd614a357b9769bafcff759907396f",
    "cacheData": { "env": {} }
}
