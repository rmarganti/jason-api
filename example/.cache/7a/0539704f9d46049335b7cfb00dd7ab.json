{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry3",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/when.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry3.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when =\n/*#__PURE__*/\n(0, _curry.default)(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nvar _default = when;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 0 }
                },
                {
                    "name": "when",
                    "generated": { "line": 40, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 4 }
                },
                {
                    "generated": { "line": 40, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 8 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 11 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 24 }
                },
                {
                    "generated": { "line": 42, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 32 }
                },
                {
                    "name": "when",
                    "generated": { "line": 42, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 41 }
                },
                {
                    "generated": { "line": 42, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 32 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 42, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 46 }
                },
                {
                    "generated": { "line": 42, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 32 }
                },
                {
                    "name": "whenTrueFn",
                    "generated": { "line": 42, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 52 }
                },
                {
                    "generated": { "line": 42, "column": 50 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 32 }
                },
                {
                    "name": "x",
                    "generated": { "line": 42, "column": 52 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 64 }
                },
                {
                    "generated": { "line": 42, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 32 }
                },
                {
                    "generated": { "line": 42, "column": 55 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 67 }
                },
                {
                    "generated": { "line": 43, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 2 }
                },
                {
                    "name": "pred",
                    "generated": { "line": 43, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 9 }
                },
                {
                    "generated": { "line": 43, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 13 }
                },
                {
                    "name": "x",
                    "generated": { "line": 43, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 14 }
                },
                {
                    "generated": { "line": 43, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 13 }
                },
                {
                    "generated": { "line": 43, "column": 16 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 9 }
                },
                {
                    "name": "whenTrueFn",
                    "generated": { "line": 43, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 19 }
                },
                {
                    "generated": { "line": 43, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 29 }
                },
                {
                    "name": "x",
                    "generated": { "line": 43, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 30 }
                },
                {
                    "generated": { "line": 43, "column": 31 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 29 }
                },
                {
                    "generated": { "line": 43, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 9 }
                },
                {
                    "name": "x",
                    "generated": { "line": 43, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 35 }
                },
                {
                    "generated": { "line": 43, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 32, "column": 2 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 33, "column": 1 }
                },
                {
                    "generated": { "line": 44, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 24 }
                },
                {
                    "generated": { "line": 44, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 31, "column": 0 }
                },
                {
                    "name": "when",
                    "generated": { "line": 45, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/when.js",
                    "original": { "line": 34, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/when.js": "import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "fde2e6424f1c94e406d8411bfaac6729",
    "cacheData": { "env": {} }
}
