{
    "id": "../node_modules/ramda/es/indexBy.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./reduceBy.js",
            "loc": { "line": 1, "column": 21 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/indexBy.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/reduceBy.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reduceBy = _interopRequireDefault(require(\"./reduceBy.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy =\n/*#__PURE__*/\n(0, _reduceBy.default)(function (acc, elem) {\n  return elem;\n}, null);\nvar _default = indexBy;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 0 }
                },
                {
                    "name": "indexBy",
                    "generated": { "line": 34, "column": 4 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 4 }
                },
                {
                    "generated": { "line": 34, "column": 11 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 11 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 14 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 27 }
                },
                {
                    "generated": { "line": 36, "column": 23 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 36 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 36, "column": 33 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 46 }
                },
                {
                    "generated": { "line": 36, "column": 36 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 36 }
                },
                {
                    "name": "elem",
                    "generated": { "line": 36, "column": 38 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 51 }
                },
                {
                    "generated": { "line": 36, "column": 42 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 36 }
                },
                {
                    "generated": { "line": 36, "column": 44 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 57 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "name": "elem",
                    "generated": { "line": 37, "column": 9 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 26, "column": 9 }
                },
                {
                    "generated": { "line": 37, "column": 13 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 26, "column": 2 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 27, "column": 1 }
                },
                {
                    "generated": { "line": 38, "column": 1 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 27 }
                },
                {
                    "generated": { "line": 38, "column": 3 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 27, "column": 3 }
                },
                {
                    "generated": { "line": 38, "column": 7 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 27 }
                },
                {
                    "generated": { "line": 38, "column": 8 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 25, "column": 0 }
                },
                {
                    "name": "indexBy",
                    "generated": { "line": 39, "column": 15 },
                    "source": "../node_modules/ramda/es/indexBy.js",
                    "original": { "line": 28, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/indexBy.js": "import reduceBy from './reduceBy.js';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "505d9294053c88f012890ebb9a507115",
    "cacheData": { "env": {} }
}
