{
    "id": "../node_modules/axios-mock-adapter/src/handle_request.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/axios-mock-adapter/package.json",
            "includedInParent": true,
            "mtime": 1558731589000
        },
        {
            "name": "./utils",
            "loc": { "line": 3, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/axios-mock-adapter/src/handle_request.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/axios-mock-adapter/src/utils.js"
        }
    ],
    "generated": {
        "js": "'use strict';\n\nvar utils = require('./utils');\n\nfunction makeResponse(result, config) {\n  return {\n    status: result[0],\n    data: utils.isSimpleObject(result[1]) ? JSON.parse(JSON.stringify(result[1])) : result[1],\n    headers: result[2],\n    config: config\n  };\n}\n\nfunction handleRequest(mockAdapter, resolve, reject, config) {\n  var url = config.url;\n  if (config.baseURL && config.url.substr(0, config.baseURL.length) === config.baseURL) {\n    url = config.url.slice(config.baseURL ? config.baseURL.length : 0);\n  }\n\n  delete config.adapter;\n  mockAdapter.history[config.method].push(config);\n\n  var handler = utils.findHandler(\n    mockAdapter.handlers,\n    config.method,\n    url,\n    config.data,\n    config.params,\n    config.headers,\n    config.baseURL\n  );\n\n  if (handler) {\n    if (handler.length === 7) {\n      utils.purgeIfReplyOnce(mockAdapter, handler);\n    }\n\n    if (handler.length === 2) {\n      // passThrough handler\n      // tell axios to use the original adapter instead of our mock, fixes #35\n      config.adapter = mockAdapter.originalAdapter;\n      mockAdapter.axiosInstance.request(config).then(resolve, reject);\n    } else if (typeof handler[3] !== 'function') {\n      utils.settle(\n        resolve,\n        reject,\n        makeResponse(handler.slice(3), config),\n        mockAdapter.delayResponse\n      );\n    } else {\n      var result = handler[3](config);\n      // TODO throw a sane exception when return value is incorrect\n      if (typeof result.then !== 'function') {\n        utils.settle(resolve, reject, makeResponse(result, config), mockAdapter.delayResponse);\n      } else {\n        result.then(\n          function(result) {\n            if (result.config && result.status) {\n              utils.settle(resolve, reject, makeResponse([result.status, result.data, result.headers], result.config), 0);\n            } else {\n              utils.settle(resolve, reject, makeResponse(result, config), mockAdapter.delayResponse);\n            }\n          },\n          function(error) {\n            if (mockAdapter.delayResponse > 0) {\n              setTimeout(function() {\n                reject(error);\n              }, mockAdapter.delayResponse);\n            } else {\n              reject(error);\n            }\n          }\n        );\n      }\n    }\n  } else {\n    // handler not found\n    utils.settle(\n      resolve,\n      reject,\n      {\n        status: 404,\n        config: config\n      },\n      mockAdapter.delayResponse\n    );\n  }\n}\n\nmodule.exports = handleRequest;\n"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 1, "column": 0 },
                    "generated": { "line": 1, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 2, "column": 0 },
                    "generated": { "line": 2, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 3, "column": 0 },
                    "generated": { "line": 3, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 4, "column": 0 },
                    "generated": { "line": 4, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 5, "column": 0 },
                    "generated": { "line": 5, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 6, "column": 0 },
                    "generated": { "line": 6, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 7, "column": 0 },
                    "generated": { "line": 7, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 8, "column": 0 },
                    "generated": { "line": 8, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 9, "column": 0 },
                    "generated": { "line": 9, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 10, "column": 0 },
                    "generated": { "line": 10, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 11, "column": 0 },
                    "generated": { "line": 11, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 12, "column": 0 },
                    "generated": { "line": 12, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 13, "column": 0 },
                    "generated": { "line": 13, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 14, "column": 0 },
                    "generated": { "line": 14, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 15, "column": 0 },
                    "generated": { "line": 15, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 16, "column": 0 },
                    "generated": { "line": 16, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 17, "column": 0 },
                    "generated": { "line": 17, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 18, "column": 0 },
                    "generated": { "line": 18, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 19, "column": 0 },
                    "generated": { "line": 19, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 20, "column": 0 },
                    "generated": { "line": 20, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 21, "column": 0 },
                    "generated": { "line": 21, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 22, "column": 0 },
                    "generated": { "line": 22, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 23, "column": 0 },
                    "generated": { "line": 23, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 24, "column": 0 },
                    "generated": { "line": 24, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 25, "column": 0 },
                    "generated": { "line": 25, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 26, "column": 0 },
                    "generated": { "line": 26, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 27, "column": 0 },
                    "generated": { "line": 27, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 28, "column": 0 },
                    "generated": { "line": 28, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 29, "column": 0 },
                    "generated": { "line": 29, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 30, "column": 0 },
                    "generated": { "line": 30, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 31, "column": 0 },
                    "generated": { "line": 31, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 32, "column": 0 },
                    "generated": { "line": 32, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 33, "column": 0 },
                    "generated": { "line": 33, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 34, "column": 0 },
                    "generated": { "line": 34, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 35, "column": 0 },
                    "generated": { "line": 35, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 36, "column": 0 },
                    "generated": { "line": 36, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 37, "column": 0 },
                    "generated": { "line": 37, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 38, "column": 0 },
                    "generated": { "line": 38, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 39, "column": 0 },
                    "generated": { "line": 39, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 40, "column": 0 },
                    "generated": { "line": 40, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 41, "column": 0 },
                    "generated": { "line": 41, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 42, "column": 0 },
                    "generated": { "line": 42, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 43, "column": 0 },
                    "generated": { "line": 43, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 44, "column": 0 },
                    "generated": { "line": 44, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 45, "column": 0 },
                    "generated": { "line": 45, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 46, "column": 0 },
                    "generated": { "line": 46, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 47, "column": 0 },
                    "generated": { "line": 47, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 48, "column": 0 },
                    "generated": { "line": 48, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 49, "column": 0 },
                    "generated": { "line": 49, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 50, "column": 0 },
                    "generated": { "line": 50, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 51, "column": 0 },
                    "generated": { "line": 51, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 52, "column": 0 },
                    "generated": { "line": 52, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 53, "column": 0 },
                    "generated": { "line": 53, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 54, "column": 0 },
                    "generated": { "line": 54, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 55, "column": 0 },
                    "generated": { "line": 55, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 56, "column": 0 },
                    "generated": { "line": 56, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 57, "column": 0 },
                    "generated": { "line": 57, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 58, "column": 0 },
                    "generated": { "line": 58, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 59, "column": 0 },
                    "generated": { "line": 59, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 60, "column": 0 },
                    "generated": { "line": 60, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 61, "column": 0 },
                    "generated": { "line": 61, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 62, "column": 0 },
                    "generated": { "line": 62, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 63, "column": 0 },
                    "generated": { "line": 63, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 64, "column": 0 },
                    "generated": { "line": 64, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 65, "column": 0 },
                    "generated": { "line": 65, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 66, "column": 0 },
                    "generated": { "line": 66, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 67, "column": 0 },
                    "generated": { "line": 67, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 68, "column": 0 },
                    "generated": { "line": 68, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 69, "column": 0 },
                    "generated": { "line": 69, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 70, "column": 0 },
                    "generated": { "line": 70, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 71, "column": 0 },
                    "generated": { "line": 71, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 72, "column": 0 },
                    "generated": { "line": 72, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 73, "column": 0 },
                    "generated": { "line": 73, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 74, "column": 0 },
                    "generated": { "line": 74, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 75, "column": 0 },
                    "generated": { "line": 75, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 76, "column": 0 },
                    "generated": { "line": 76, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 77, "column": 0 },
                    "generated": { "line": 77, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 78, "column": 0 },
                    "generated": { "line": 78, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 79, "column": 0 },
                    "generated": { "line": 79, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 80, "column": 0 },
                    "generated": { "line": 80, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 81, "column": 0 },
                    "generated": { "line": 81, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 82, "column": 0 },
                    "generated": { "line": 82, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 83, "column": 0 },
                    "generated": { "line": 83, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 84, "column": 0 },
                    "generated": { "line": 84, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 85, "column": 0 },
                    "generated": { "line": 85, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 86, "column": 0 },
                    "generated": { "line": 86, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 87, "column": 0 },
                    "generated": { "line": 87, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 88, "column": 0 },
                    "generated": { "line": 88, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 89, "column": 0 },
                    "generated": { "line": 89, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 90, "column": 0 },
                    "generated": { "line": 90, "column": 0 }
                },
                {
                    "source": "../node_modules/axios-mock-adapter/src/handle_request.js",
                    "original": { "line": 91, "column": 0 },
                    "generated": { "line": 91, "column": 0 }
                }
            ],
            "sources": {
                "../node_modules/axios-mock-adapter/src/handle_request.js": "'use strict';\n\nvar utils = require('./utils');\n\nfunction makeResponse(result, config) {\n  return {\n    status: result[0],\n    data: utils.isSimpleObject(result[1]) ? JSON.parse(JSON.stringify(result[1])) : result[1],\n    headers: result[2],\n    config: config\n  };\n}\n\nfunction handleRequest(mockAdapter, resolve, reject, config) {\n  var url = config.url;\n  if (config.baseURL && config.url.substr(0, config.baseURL.length) === config.baseURL) {\n    url = config.url.slice(config.baseURL ? config.baseURL.length : 0);\n  }\n\n  delete config.adapter;\n  mockAdapter.history[config.method].push(config);\n\n  var handler = utils.findHandler(\n    mockAdapter.handlers,\n    config.method,\n    url,\n    config.data,\n    config.params,\n    config.headers,\n    config.baseURL\n  );\n\n  if (handler) {\n    if (handler.length === 7) {\n      utils.purgeIfReplyOnce(mockAdapter, handler);\n    }\n\n    if (handler.length === 2) {\n      // passThrough handler\n      // tell axios to use the original adapter instead of our mock, fixes #35\n      config.adapter = mockAdapter.originalAdapter;\n      mockAdapter.axiosInstance.request(config).then(resolve, reject);\n    } else if (typeof handler[3] !== 'function') {\n      utils.settle(\n        resolve,\n        reject,\n        makeResponse(handler.slice(3), config),\n        mockAdapter.delayResponse\n      );\n    } else {\n      var result = handler[3](config);\n      // TODO throw a sane exception when return value is incorrect\n      if (typeof result.then !== 'function') {\n        utils.settle(resolve, reject, makeResponse(result, config), mockAdapter.delayResponse);\n      } else {\n        result.then(\n          function(result) {\n            if (result.config && result.status) {\n              utils.settle(resolve, reject, makeResponse([result.status, result.data, result.headers], result.config), 0);\n            } else {\n              utils.settle(resolve, reject, makeResponse(result, config), mockAdapter.delayResponse);\n            }\n          },\n          function(error) {\n            if (mockAdapter.delayResponse > 0) {\n              setTimeout(function() {\n                reject(error);\n              }, mockAdapter.delayResponse);\n            } else {\n              reject(error);\n            }\n          }\n        );\n      }\n    }\n  } else {\n    // handler not found\n    utils.settle(\n      resolve,\n      reject,\n      {\n        status: 404,\n        config: config\n      },\n      mockAdapter.delayResponse\n    );\n  }\n}\n\nmodule.exports = handleRequest;\n"
            },
            "lineCount": 91
        }
    },
    "error": null,
    "hash": "b324fdde41bc884836a0c19929955930",
    "cacheData": { "env": {} }
}
