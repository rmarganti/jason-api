{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./_isArray",
            "loc": { "line": 1, "column": 21 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_isArray.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _checkForMethod;\n\nvar _isArray2 = _interopRequireDefault(require(\"./_isArray\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return (0, _isArray2.default)(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 22, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 13, "column": 15 }
                },
                {
                    "name": "_checkForMethod",
                    "generated": { "line": 22, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 13, "column": 24 }
                },
                {
                    "generated": { "line": 22, "column": 24 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 13, "column": 15 }
                },
                {
                    "name": "methodname",
                    "generated": { "line": 22, "column": 25 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 13, "column": 40 }
                },
                {
                    "generated": { "line": 22, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 13, "column": 15 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 22, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 13, "column": 52 }
                },
                {
                    "generated": { "line": 22, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 13, "column": 15 }
                },
                {
                    "generated": { "line": 22, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 13, "column": 56 }
                },
                {
                    "generated": { "line": 23, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 14, "column": 2 }
                },
                {
                    "generated": { "line": 23, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 14, "column": 9 }
                },
                {
                    "generated": { "line": 23, "column": 21 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 14, "column": 21 }
                },
                {
                    "generated": { "line": 24, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 15, "column": 4 }
                },
                {
                    "name": "length",
                    "generated": { "line": 24, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 15, "column": 8 }
                },
                {
                    "generated": { "line": 24, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 15, "column": 14 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 24, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 15, "column": 17 }
                },
                {
                    "generated": { "line": 24, "column": 26 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 15, "column": 26 }
                },
                {
                    "name": "length",
                    "generated": { "line": 24, "column": 27 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 15, "column": 27 }
                },
                {
                    "generated": { "line": 24, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 15, "column": 4 }
                },
                {
                    "generated": { "line": 26, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 16, "column": 4 }
                },
                {
                    "name": "length",
                    "generated": { "line": 26, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 16, "column": 8 }
                },
                {
                    "generated": { "line": 26, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 16, "column": 14 }
                },
                {
                    "generated": { "line": 26, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 16, "column": 19 }
                },
                {
                    "generated": { "line": 26, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 16, "column": 4 }
                },
                {
                    "generated": { "line": 26, "column": 22 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 16, "column": 22 }
                },
                {
                    "generated": { "line": 27, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 17, "column": 6 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 27, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 17, "column": 13 }
                },
                {
                    "generated": { "line": 27, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 17, "column": 15 }
                },
                {
                    "generated": { "line": 27, "column": 17 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 17, "column": 6 }
                },
                {
                    "generated": { "line": 28, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 18, "column": 5 }
                },
                {
                    "generated": { "line": 30, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 19, "column": 4 }
                },
                {
                    "name": "obj",
                    "generated": { "line": 30, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 19, "column": 8 }
                },
                {
                    "generated": { "line": 30, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 19, "column": 11 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 30, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 19, "column": 14 }
                },
                {
                    "generated": { "line": 30, "column": 23 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 19, "column": 23 }
                },
                {
                    "name": "length",
                    "generated": { "line": 30, "column": 24 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 19, "column": 24 }
                },
                {
                    "generated": { "line": 30, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 19, "column": 30 }
                },
                {
                    "generated": { "line": 30, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 19, "column": 33 }
                },
                {
                    "generated": { "line": 30, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 19, "column": 23 }
                },
                {
                    "generated": { "line": 30, "column": 35 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 19, "column": 4 }
                },
                {
                    "generated": { "line": 31, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 4 }
                },
                {
                    "generated": { "line": 31, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 11 }
                },
                {
                    "name": "obj",
                    "generated": { "line": 31, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 20 }
                },
                {
                    "generated": { "line": 31, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 11 }
                },
                {
                    "generated": { "line": 31, "column": 42 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 28 }
                },
                {
                    "name": "obj",
                    "generated": { "line": 31, "column": 49 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 35 }
                },
                {
                    "generated": { "line": 31, "column": 52 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 38 }
                },
                {
                    "name": "methodname",
                    "generated": { "line": 31, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 39 }
                },
                {
                    "generated": { "line": 31, "column": 63 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 38 }
                },
                {
                    "generated": { "line": 31, "column": 64 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 28 }
                },
                {
                    "generated": { "line": 31, "column": 69 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 55 }
                },
                {
                    "generated": { "line": 31, "column": 79 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 11 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 31, "column": 82 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 68 }
                },
                {
                    "generated": { "line": 31, "column": 84 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 70 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 31, "column": 85 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 71 }
                },
                {
                    "generated": { "line": 31, "column": 90 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 68 }
                },
                {
                    "generated": { "line": 31, "column": 91 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 77 }
                },
                {
                    "generated": { "line": 31, "column": 95 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 68 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 31, "column": 97 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 83 }
                },
                {
                    "generated": { "line": 31, "column": 106 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 68 }
                },
                {
                    "generated": { "line": 31, "column": 107 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 11 }
                },
                {
                    "name": "obj",
                    "generated": { "line": 31, "column": 110 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 96 }
                },
                {
                    "generated": { "line": 31, "column": 113 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 99 }
                },
                {
                    "name": "methodname",
                    "generated": { "line": 31, "column": 114 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 100 }
                },
                {
                    "generated": { "line": 31, "column": 124 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 99 }
                },
                {
                    "generated": { "line": 31, "column": 125 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 96 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 31, "column": 126 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 112 }
                },
                {
                    "generated": { "line": 31, "column": 131 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 96 }
                },
                {
                    "name": "obj",
                    "generated": { "line": 31, "column": 132 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 118 }
                },
                {
                    "generated": { "line": 31, "column": 135 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 96 }
                },
                {
                    "name": "Array",
                    "generated": { "line": 31, "column": 137 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 123 }
                },
                {
                    "generated": { "line": 31, "column": 142 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 128 }
                },
                {
                    "name": "prototype",
                    "generated": { "line": 31, "column": 143 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 129 }
                },
                {
                    "generated": { "line": 31, "column": 152 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 123 }
                },
                {
                    "name": "slice",
                    "generated": { "line": 31, "column": 153 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 139 }
                },
                {
                    "generated": { "line": 31, "column": 158 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 123 }
                },
                {
                    "name": "call",
                    "generated": { "line": 31, "column": 159 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 145 }
                },
                {
                    "generated": { "line": 31, "column": 163 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 123 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 31, "column": 164 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 150 }
                },
                {
                    "generated": { "line": 31, "column": 173 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 123 }
                },
                {
                    "generated": { "line": 31, "column": 175 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 161 }
                },
                {
                    "generated": { "line": 31, "column": 176 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 123 }
                },
                {
                    "name": "length",
                    "generated": { "line": 31, "column": 178 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 164 }
                },
                {
                    "generated": { "line": 31, "column": 184 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 170 }
                },
                {
                    "generated": { "line": 31, "column": 187 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 173 }
                },
                {
                    "generated": { "line": 31, "column": 188 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 123 }
                },
                {
                    "generated": { "line": 31, "column": 189 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 96 }
                },
                {
                    "generated": { "line": 31, "column": 190 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 20, "column": 4 }
                },
                {
                    "generated": { "line": 32, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 21, "column": 3 }
                },
                {
                    "generated": { "line": 32, "column": 3 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 14, "column": 2 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js",
                    "original": { "line": 22, "column": 1 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/internal/_checkForMethod.js": "import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "be8341bbf9a889aa0a148837282a044f",
    "cacheData": { "env": {} }
}
