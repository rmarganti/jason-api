{
    "id": "../node_modules/ramda/es/ap.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558469608000
        },
        {
            "name": "./internal/_concat.js",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/ap.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_concat.js"
        },
        {
            "name": "./internal/_curry2.js",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/ap.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_curry2.js"
        },
        {
            "name": "./internal/_reduce.js",
            "loc": { "line": 3, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/ap.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/internal/_reduce.js"
        },
        {
            "name": "./map.js",
            "loc": { "line": 4, "column": 16 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/ap.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ramda/es/map.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _concat2 = _interopRequireDefault(require(\"./internal/_concat.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _reduce2 = _interopRequireDefault(require(\"./internal/_reduce.js\"));\n\nvar _map = _interopRequireDefault(require(\"./map.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap =\n/*#__PURE__*/\n(0, _curry.default)(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : (0, _reduce2.default)(function (acc, f) {\n    return (0, _concat2.default)(acc, (0, _map.default)(f, applyX));\n  }, [], applyF);\n});\nvar _default = ap;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 18, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 6, "column": 0 }
                },
                {
                    "generated": { "line": 44, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 0 }
                },
                {
                    "name": "ap",
                    "generated": { "line": 44, "column": 4 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 4 }
                },
                {
                    "generated": { "line": 44, "column": 6 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 6 }
                },
                {
                    "generated": { "line": 45, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 9 }
                },
                {
                    "generated": { "line": 46, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 22 }
                },
                {
                    "generated": { "line": 46, "column": 20 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 30 }
                },
                {
                    "name": "ap",
                    "generated": { "line": 46, "column": 29 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 39 }
                },
                {
                    "generated": { "line": 46, "column": 31 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 30 }
                },
                {
                    "name": "applyF",
                    "generated": { "line": 46, "column": 32 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 42 }
                },
                {
                    "generated": { "line": 46, "column": 38 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 30 }
                },
                {
                    "name": "applyX",
                    "generated": { "line": 46, "column": 40 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 50 }
                },
                {
                    "generated": { "line": 46, "column": 46 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 30 }
                },
                {
                    "generated": { "line": 46, "column": 48 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 58 }
                },
                {
                    "generated": { "line": 47, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 2 }
                },
                {
                    "generated": { "line": 47, "column": 9 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 9 }
                },
                {
                    "name": "applyX",
                    "generated": { "line": 47, "column": 16 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 16 }
                },
                {
                    "generated": { "line": 47, "column": 22 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 22 }
                },
                {
                    "generated": { "line": 47, "column": 23 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 23 }
                },
                {
                    "generated": { "line": 47, "column": 40 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 22 }
                },
                {
                    "generated": { "line": 47, "column": 41 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 9 }
                },
                {
                    "generated": { "line": 47, "column": 46 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 46 }
                },
                {
                    "generated": { "line": 47, "column": 56 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 9 }
                },
                {
                    "name": "applyX",
                    "generated": { "line": 47, "column": 59 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 59 }
                },
                {
                    "generated": { "line": 47, "column": 65 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 65 }
                },
                {
                    "generated": { "line": 47, "column": 66 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 66 }
                },
                {
                    "generated": { "line": 47, "column": 83 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 65 }
                },
                {
                    "generated": { "line": 47, "column": 84 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 59 }
                },
                {
                    "name": "applyF",
                    "generated": { "line": 47, "column": 85 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 85 }
                },
                {
                    "generated": { "line": 47, "column": 91 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 59 }
                },
                {
                    "generated": { "line": 47, "column": 92 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 9 }
                },
                {
                    "generated": { "line": 47, "column": 95 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 95 }
                },
                {
                    "name": "applyF",
                    "generated": { "line": 47, "column": 102 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 102 }
                },
                {
                    "generated": { "line": 47, "column": 108 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 108 }
                },
                {
                    "name": "ap",
                    "generated": { "line": 47, "column": 109 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 109 }
                },
                {
                    "generated": { "line": 47, "column": 111 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 95 }
                },
                {
                    "generated": { "line": 47, "column": 116 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 116 }
                },
                {
                    "generated": { "line": 47, "column": 126 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 95 }
                },
                {
                    "name": "applyF",
                    "generated": { "line": 47, "column": 129 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 129 }
                },
                {
                    "generated": { "line": 47, "column": 135 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 135 }
                },
                {
                    "name": "ap",
                    "generated": { "line": 47, "column": 136 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 136 }
                },
                {
                    "generated": { "line": 47, "column": 138 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 129 }
                },
                {
                    "name": "applyX",
                    "generated": { "line": 47, "column": 139 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 139 }
                },
                {
                    "generated": { "line": 47, "column": 145 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 129 }
                },
                {
                    "generated": { "line": 47, "column": 146 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 95 }
                },
                {
                    "generated": { "line": 47, "column": 149 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 149 }
                },
                {
                    "name": "applyF",
                    "generated": { "line": 47, "column": 156 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 156 }
                },
                {
                    "generated": { "line": 47, "column": 162 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 149 }
                },
                {
                    "generated": { "line": 47, "column": 167 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 167 }
                },
                {
                    "generated": { "line": 47, "column": 177 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 149 }
                },
                {
                    "generated": { "line": 47, "column": 180 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 180 }
                },
                {
                    "name": "x",
                    "generated": { "line": 47, "column": 190 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 190 }
                },
                {
                    "generated": { "line": 47, "column": 191 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 180 }
                },
                {
                    "generated": { "line": 47, "column": 193 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 193 }
                },
                {
                    "generated": { "line": 48, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 4 }
                },
                {
                    "name": "applyF",
                    "generated": { "line": 48, "column": 11 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 11 }
                },
                {
                    "generated": { "line": 48, "column": 17 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 17 }
                },
                {
                    "name": "x",
                    "generated": { "line": 48, "column": 18 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 18 }
                },
                {
                    "generated": { "line": 48, "column": 19 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 17 }
                },
                {
                    "generated": { "line": 48, "column": 20 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 11 }
                },
                {
                    "name": "applyX",
                    "generated": { "line": 48, "column": 21 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 21 }
                },
                {
                    "generated": { "line": 48, "column": 27 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 27 }
                },
                {
                    "name": "x",
                    "generated": { "line": 48, "column": 28 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 28 }
                },
                {
                    "generated": { "line": 48, "column": 29 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 27 }
                },
                {
                    "generated": { "line": 48, "column": 30 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 11 }
                },
                {
                    "generated": { "line": 48, "column": 31 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 34, "column": 4 }
                },
                {
                    "generated": { "line": 49, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 35, "column": 3 }
                },
                {
                    "generated": { "line": 49, "column": 3 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 149 }
                },
                {
                    "generated": { "line": 49, "column": 6 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 35, "column": 6 }
                },
                {
                    "generated": { "line": 49, "column": 28 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 35, "column": 14 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 49, "column": 38 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 35, "column": 24 }
                },
                {
                    "generated": { "line": 49, "column": 41 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 35, "column": 14 }
                },
                {
                    "name": "f",
                    "generated": { "line": 49, "column": 43 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 35, "column": 29 }
                },
                {
                    "generated": { "line": 49, "column": 44 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 35, "column": 14 }
                },
                {
                    "generated": { "line": 49, "column": 46 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 35, "column": 32 }
                },
                {
                    "generated": { "line": 50, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 36, "column": 4 }
                },
                {
                    "generated": { "line": 50, "column": 11 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 36, "column": 11 }
                },
                {
                    "name": "acc",
                    "generated": { "line": 50, "column": 33 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 36, "column": 19 }
                },
                {
                    "generated": { "line": 50, "column": 36 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 36, "column": 11 }
                },
                {
                    "generated": { "line": 50, "column": 38 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 36, "column": 24 }
                },
                {
                    "name": "f",
                    "generated": { "line": 50, "column": 56 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 36, "column": 28 }
                },
                {
                    "generated": { "line": 50, "column": 57 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 36, "column": 24 }
                },
                {
                    "name": "applyX",
                    "generated": { "line": 50, "column": 59 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 36, "column": 31 }
                },
                {
                    "generated": { "line": 50, "column": 65 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 36, "column": 24 }
                },
                {
                    "generated": { "line": 50, "column": 66 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 36, "column": 11 }
                },
                {
                    "generated": { "line": 50, "column": 67 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 36, "column": 4 }
                },
                {
                    "generated": { "line": 51, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 37, "column": 3 }
                },
                {
                    "generated": { "line": 51, "column": 3 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 35, "column": 6 }
                },
                {
                    "generated": { "line": 51, "column": 5 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 37, "column": 5 }
                },
                {
                    "generated": { "line": 51, "column": 7 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 35, "column": 6 }
                },
                {
                    "name": "applyF",
                    "generated": { "line": 51, "column": 9 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 37, "column": 9 }
                },
                {
                    "generated": { "line": 51, "column": 15 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 35, "column": 6 }
                },
                {
                    "generated": { "line": 51, "column": 16 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 33, "column": 2 }
                },
                {
                    "generated": { "line": 52, "column": 0 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 38, "column": 1 }
                },
                {
                    "generated": { "line": 52, "column": 1 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 22 }
                },
                {
                    "generated": { "line": 52, "column": 2 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 32, "column": 0 }
                },
                {
                    "name": "ap",
                    "generated": { "line": 53, "column": 15 },
                    "source": "../node_modules/ramda/es/ap.js",
                    "original": { "line": 39, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ramda/es/ap.js": "import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport map from './map.js';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "064e3fa577b71728e5b1db85ce6a4a07",
    "cacheData": { "env": {} }
}
