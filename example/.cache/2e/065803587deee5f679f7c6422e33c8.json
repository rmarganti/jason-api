{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 1, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Takes a value and applies a function to it.\n*\n* This function is also known as the `thrush` combinator.\n*\n* @func\n* @memberOf R\n * @since v0.25.0\n* @category Function\n* @sig a -> (a -> b) -> b\n* @param {*} x The value\n* @param {Function} f The function to apply\n* @return {*} The result of applying `f` to `x`\n* @example\n*\n*      var t42 = R.applyTo(42);\n*      t42(R.identity); //=> 42\n*      t42(R.add(1)); //=> 43\n*/\nvar applyTo =\n/*#__PURE__*/\n(0, _curry.default)(function applyTo(x, f) {\n  return f(x);\n});\nvar _default = applyTo;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 12, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 3, "column": 0 }
                },
                {
                    "generated": { "line": 31, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 0 }
                },
                {
                    "name": "applyTo",
                    "generated": { "line": 31, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 4 }
                },
                {
                    "generated": { "line": 31, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 11 }
                },
                {
                    "generated": { "line": 32, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 14 }
                },
                {
                    "generated": { "line": 33, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 27 }
                },
                {
                    "generated": { "line": 33, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 35 }
                },
                {
                    "name": "applyTo",
                    "generated": { "line": 33, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 44 }
                },
                {
                    "generated": { "line": 33, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 35 }
                },
                {
                    "name": "x",
                    "generated": { "line": 33, "column": 37 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 52 }
                },
                {
                    "generated": { "line": 33, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 35 }
                },
                {
                    "name": "f",
                    "generated": { "line": 33, "column": 40 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 55 }
                },
                {
                    "generated": { "line": 33, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 35 }
                },
                {
                    "generated": { "line": 33, "column": 43 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 58 }
                },
                {
                    "generated": { "line": 34, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 23, "column": 2 }
                },
                {
                    "name": "f",
                    "generated": { "line": 34, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 23, "column": 9 }
                },
                {
                    "generated": { "line": 34, "column": 10 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 23, "column": 10 }
                },
                {
                    "name": "x",
                    "generated": { "line": 34, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 23, "column": 11 }
                },
                {
                    "generated": { "line": 34, "column": 12 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 23, "column": 10 }
                },
                {
                    "generated": { "line": 34, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 23, "column": 2 }
                },
                {
                    "generated": { "line": 35, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 24, "column": 1 }
                },
                {
                    "generated": { "line": 35, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 27 }
                },
                {
                    "generated": { "line": 35, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 22, "column": 0 }
                },
                {
                    "name": "applyTo",
                    "generated": { "line": 36, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js",
                    "original": { "line": 25, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/applyTo.js": "import _curry2 from './internal/_curry2';\n\n/**\n* Takes a value and applies a function to it.\n*\n* This function is also known as the `thrush` combinator.\n*\n* @func\n* @memberOf R\n * @since v0.25.0\n* @category Function\n* @sig a -> (a -> b) -> b\n* @param {*} x The value\n* @param {Function} f The function to apply\n* @return {*} The result of applying `f` to `x`\n* @example\n*\n*      var t42 = R.applyTo(42);\n*      t42(R.identity); //=> 42\n*      t42(R.add(1)); //=> 43\n*/\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "6bbdad23a95db7112e2f630cc812a4ba",
    "cacheData": { "env": {} }
}
