{
    "id": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
    "dependencies": [
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/example/package.json",
            "includedInParent": true,
            "mtime": 1559061771000
        },
        {
            "name": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/package.json",
            "includedInParent": true,
            "mtime": 1558467235000
        },
        {
            "name": "./internal/_arity",
            "loc": { "line": 1, "column": 19 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/bind.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_arity.js"
        },
        {
            "name": "./internal/_curry2",
            "loc": { "line": 2, "column": 20 },
            "parent": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/bind.js",
            "resolved": "/Users/rmarganti/code/_packages+libraries/jason-api-next/node_modules/ts-json-api/node_modules/ramda/es/internal/_curry2.js"
        }
    ],
    "generated": {
        "js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _arity2 = _interopRequireDefault(require(\"./internal/_arity\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind =\n/*#__PURE__*/\n(0, _curry.default)(function bind(fn, thisObj) {\n  return (0, _arity2.default)(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nvar _default = bind;\nexports.default = _default;"
    },
    "sourceMaps": {
        "js": {
            "mappings": [
                {
                    "generated": { "line": 8, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 1, "column": 0 }
                },
                {
                    "generated": { "line": 10, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 2, "column": 0 }
                },
                {
                    "generated": { "line": 14, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 4, "column": 0 }
                },
                {
                    "generated": { "line": 36, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "bind",
                    "generated": { "line": 36, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 4 }
                },
                {
                    "generated": { "line": 36, "column": 8 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 8 }
                },
                {
                    "generated": { "line": 37, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 11 }
                },
                {
                    "generated": { "line": 38, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 24 }
                },
                {
                    "generated": { "line": 38, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 32 }
                },
                {
                    "name": "bind",
                    "generated": { "line": 38, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 41 }
                },
                {
                    "generated": { "line": 38, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 32 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 38, "column": 34 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 46 }
                },
                {
                    "generated": { "line": 38, "column": 36 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 32 }
                },
                {
                    "name": "thisObj",
                    "generated": { "line": 38, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 50 }
                },
                {
                    "generated": { "line": 38, "column": 45 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 32 }
                },
                {
                    "generated": { "line": 38, "column": 47 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 59 }
                },
                {
                    "generated": { "line": 39, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "generated": { "line": 39, "column": 9 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 39, "column": 30 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 27, "column": 16 }
                },
                {
                    "generated": { "line": 39, "column": 32 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 27, "column": 18 }
                },
                {
                    "name": "length",
                    "generated": { "line": 39, "column": 33 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 27, "column": 19 }
                },
                {
                    "generated": { "line": 39, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "generated": { "line": 39, "column": 41 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 27, "column": 27 }
                },
                {
                    "generated": { "line": 39, "column": 53 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 27, "column": 39 }
                },
                {
                    "generated": { "line": 40, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 28, "column": 4 }
                },
                {
                    "name": "fn",
                    "generated": { "line": 40, "column": 11 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 28, "column": 11 }
                },
                {
                    "generated": { "line": 40, "column": 13 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 28, "column": 13 }
                },
                {
                    "name": "apply",
                    "generated": { "line": 40, "column": 14 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 28, "column": 14 }
                },
                {
                    "generated": { "line": 40, "column": 19 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 28, "column": 11 }
                },
                {
                    "name": "thisObj",
                    "generated": { "line": 40, "column": 20 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 28, "column": 20 }
                },
                {
                    "generated": { "line": 40, "column": 27 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 28, "column": 11 }
                },
                {
                    "name": "arguments",
                    "generated": { "line": 40, "column": 29 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 28, "column": 29 }
                },
                {
                    "generated": { "line": 40, "column": 38 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 28, "column": 11 }
                },
                {
                    "generated": { "line": 40, "column": 39 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 28, "column": 4 }
                },
                {
                    "generated": { "line": 41, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 29, "column": 3 }
                },
                {
                    "generated": { "line": 41, "column": 3 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 27, "column": 9 }
                },
                {
                    "generated": { "line": 41, "column": 4 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 27, "column": 2 }
                },
                {
                    "generated": { "line": 42, "column": 0 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 30, "column": 1 }
                },
                {
                    "generated": { "line": 42, "column": 1 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 24 }
                },
                {
                    "generated": { "line": 42, "column": 2 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 26, "column": 0 }
                },
                {
                    "name": "bind",
                    "generated": { "line": 43, "column": 15 },
                    "source": "../node_modules/ts-json-api/node_modules/ramda/es/bind.js",
                    "original": { "line": 31, "column": 15 }
                }
            ],
            "sources": {
                "../node_modules/ts-json-api/node_modules/ramda/es/bind.js": "import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;"
            },
            "lineCount": null
        }
    },
    "error": null,
    "hash": "3911e652a0b4ff7f959fb5359ba8b7aa",
    "cacheData": { "env": {} }
}
